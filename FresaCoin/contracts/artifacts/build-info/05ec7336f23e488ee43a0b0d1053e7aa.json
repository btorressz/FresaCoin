{
	"id": "05ec7336f23e488ee43a0b0d1053e7aa",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/FresaCoin.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n/// @title FresaCoin - Ethereum version \ncontract FresaCoin is ERC20, Ownable {\n    struct Stake {\n        uint256 amount; // Amount staked\n        uint256 rewardAccumulated; // Accumulated rewards\n        uint256 lastStakedTimestamp; // Timestamp of the last stake\n        address referrer; // Address of the referrer, if applicable\n    }\n\n    struct Proposal {\n        string description; // Proposal description\n        uint256 votesFor; // Number of votes in favor\n        uint256 votesAgainst; // Number of votes against\n        bool isApproved; // Whether the proposal is approved\n    }\n\n    struct Lottery {\n        address[] entries; // List of lottery participants\n        uint256 prizePool; // Prize pool for the lottery\n    }\n\n    struct StakingPool {\n        uint256 rewardRate; // Reward rate for staking\n        uint256 lockDuration; // Lock duration for staking\n        uint256 totalStaked; // Total staked in the pool\n    }\n\n    mapping(address => Stake) public stakes; // Mapping of user stakes\n    mapping(uint256 => Proposal) public proposals; // Governance proposals\n    Lottery public lottery; // Lottery details\n    StakingPool public stakingPool; // Staking pool state\n    uint256 public proposalCounter; // Counter for proposals\n\n    uint256 public minStakeDuration = 7 days; // Minimum staking duration\n    uint256 public constant REFERRAL_BONUS = 5; // Referral bonus (5%)\n\n    event Staked(address indexed user, uint256 amount, address indexed referrer);\n    event Withdrawn(address indexed user, uint256 amount, uint256 penalty);\n    event ProposalCreated(uint256 indexed proposalId, string description);\n    event Voted(uint256 indexed proposalId, address indexed voter, bool voteFor);\n    event LotteryEntered(address indexed user, uint256 amount);\n    event LotteryWinner(address indexed winner, uint256 prize);\n\n    /// @notice Constructor to initialize the contract\n    /// @param _initialSupply Initial token supply\n    /// @param _rewardRate Reward rate for staking\n    /// @param _lockDuration Lock duration for staking\n    constructor(\n        uint256 _initialSupply,\n        uint256 _rewardRate,\n        uint256 _lockDuration\n    ) ERC20(\"FresaCoin\", \"FRESA\") Ownable(msg.sender) {\n        _mint(msg.sender, _initialSupply); // Mint initial supply\n        stakingPool.rewardRate = _rewardRate;\n        stakingPool.lockDuration = _lockDuration;\n    }\n\n    /// @notice Stake tokens to earn rewards\n    /// @param amount Amount of tokens to stake\n    /// @param referrer Optional referrer address\n    function stake(uint256 amount, address referrer) external {\n        require(amount > 0, \"Cannot stake zero tokens\");\n        _transfer(msg.sender, address(this), amount);\n\n        Stake storage userStake = stakes[msg.sender];\n        uint256 currentTime = block.timestamp;\n\n        // Calculate rewards for existing stake\n        if (userStake.amount > 0) {\n            uint256 duration = currentTime - userStake.lastStakedTimestamp;\n            userStake.rewardAccumulated += calculateReward(userStake.amount, duration);\n        }\n\n        userStake.amount += amount;\n        userStake.lastStakedTimestamp = currentTime;\n\n        // Referral bonus\n        if (referrer != address(0) && referrer != msg.sender) {\n            uint256 bonus = (amount * REFERRAL_BONUS) / 100;\n            _mint(referrer, bonus);\n            userStake.referrer = referrer;\n        }\n\n        stakingPool.totalStaked += amount;\n\n        emit Staked(msg.sender, amount, referrer);\n    }\n\n    /// @notice Withdraw staked tokens with penalty if applicable\n    /// @param amount Amount to withdraw\n    function withdraw(uint256 amount) external {\n        Stake storage userStake = stakes[msg.sender];\n        require(userStake.amount >= amount, \"Insufficient staked balance\");\n\n        uint256 currentTime = block.timestamp;\n        uint256 duration = currentTime - userStake.lastStakedTimestamp;\n\n        uint256 penalty = 0;\n        if (duration < minStakeDuration) {\n            penalty = (amount * 20) / 100; // 20% penalty\n            _burn(address(this), penalty / 2); // Burn 50% of the penalty\n        }\n\n        uint256 netAmount = amount - penalty;\n        userStake.amount -= amount;\n        stakingPool.totalStaked -= amount;\n\n        _transfer(address(this), msg.sender, netAmount);\n\n        emit Withdrawn(msg.sender, netAmount, penalty);\n    }\n\n    /// @notice Create a governance proposal\n    /// @param description Description of the proposal\n    function createProposal(string memory description) external onlyOwner {\n        proposalCounter++;\n        proposals[proposalCounter] = Proposal({\n            description: description,\n            votesFor: 0,\n            votesAgainst: 0,\n            isApproved: false\n        });\n\n        emit ProposalCreated(proposalCounter, description);\n    }\n\n    /// @notice Vote on a governance proposal\n    /// @param proposalId ID of the proposal\n    /// @param voteFor True to vote for, false to vote against\n    function vote(uint256 proposalId, bool voteFor) external {\n        Proposal storage proposal = proposals[proposalId];\n        require(bytes(proposal.description).length > 0, \"Invalid proposal ID\");\n\n        uint256 votingWeight = stakes[msg.sender].amount;\n        require(votingWeight > 0, \"No staked tokens to vote\");\n\n        if (voteFor) {\n            proposal.votesFor += votingWeight;\n        } else {\n            proposal.votesAgainst += votingWeight;\n        }\n\n        proposal.isApproved = proposal.votesFor > proposal.votesAgainst;\n\n        emit Voted(proposalId, msg.sender, voteFor);\n    }\n\n    /// @notice Enter the lottery by staking tokens\n    /// @param amount Amount of tokens to stake for the lottery\n    function enterLottery(uint256 amount) external {\n        require(amount > 0, \"Cannot enter with zero tokens\");\n\n        _transfer(msg.sender, address(this), amount);\n        lottery.entries.push(msg.sender);\n        lottery.prizePool += amount;\n\n        emit LotteryEntered(msg.sender, amount);\n    }\n\n    /// @notice Draw a winner for the lottery\n    function drawLotteryWinner() external onlyOwner {\n        require(lottery.entries.length > 0, \"No participants in the lottery\");\n\n        uint256 randomIndex = uint256(\n            keccak256(abi.encodePacked(block.timestamp, block.difficulty))\n        ) % lottery.entries.length;\n        address winner = lottery.entries[randomIndex];\n\n        uint256 prize = lottery.prizePool;\n        lottery.prizePool = 0;\n        delete lottery.entries;\n\n        _transfer(address(this), winner, prize);\n\n        emit LotteryWinner(winner, prize);\n    }\n\n    /// @notice Get lottery participants\n    /// @return List of participants\n    function getLotteryEntries() external view returns (address[] memory) {\n        return lottery.entries;\n    }\n\n    /// @notice Get the prize pool for the lottery\n    /// @return Prize pool amount\n    function getLotteryPrizePool() external view returns (uint256) {\n        return lottery.prizePool;\n    }\n\n    /// @notice Calculate reward based on stake and duration\n    /// @param amount Amount staked\n    /// @param duration Duration of the stake\n    /// @return reward Calculated reward\n    function calculateReward(uint256 amount, uint256 duration)\n        public\n        view\n        returns (uint256 reward)\n    {\n        uint256 baseRate = (amount > 10_000 ether) ? 15 : (amount > 1_000 ether) ? 12 : 10;\n        uint256 multiplier = (duration > 30 days) ? 2 : 1;\n\n        reward = (amount * baseRate / 100) * multiplier;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/FresaCoin.sol": {
				"FresaCoin": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_initialSupply",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_rewardRate",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_lockDuration",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "LotteryEntered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "winner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "prize",
									"type": "uint256"
								}
							],
							"name": "LotteryWinner",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "description",
									"type": "string"
								}
							],
							"name": "ProposalCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "referrer",
									"type": "address"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "voter",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "voteFor",
									"type": "bool"
								}
							],
							"name": "Voted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "penalty",
									"type": "uint256"
								}
							],
							"name": "Withdrawn",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "REFERRAL_BONUS",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "duration",
									"type": "uint256"
								}
							],
							"name": "calculateReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "description",
									"type": "string"
								}
							],
							"name": "createProposal",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "drawLotteryWinner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "enterLottery",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getLotteryEntries",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getLotteryPrizePool",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lottery",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "prizePool",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "minStakeDuration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proposalCounter",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "proposals",
							"outputs": [
								{
									"internalType": "string",
									"name": "description",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "votesFor",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "votesAgainst",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isApproved",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "referrer",
									"type": "address"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "stakes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewardAccumulated",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastStakedTimestamp",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "referrer",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingPool",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "rewardRate",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lockDuration",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalStaked",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "voteFor",
									"type": "bool"
								}
							],
							"name": "vote",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"calculateReward(uint256,uint256)": {
								"params": {
									"amount": "Amount staked",
									"duration": "Duration of the stake"
								},
								"returns": {
									"reward": "Calculated reward"
								}
							},
							"constructor": {
								"params": {
									"_initialSupply": "Initial token supply",
									"_lockDuration": "Lock duration for staking",
									"_rewardRate": "Reward rate for staking"
								}
							},
							"createProposal(string)": {
								"params": {
									"description": "Description of the proposal"
								}
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"enterLottery(uint256)": {
								"params": {
									"amount": "Amount of tokens to stake for the lottery"
								}
							},
							"getLotteryEntries()": {
								"returns": {
									"_0": "List of participants"
								}
							},
							"getLotteryPrizePool()": {
								"returns": {
									"_0": "Prize pool amount"
								}
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"stake(uint256,address)": {
								"params": {
									"amount": "Amount of tokens to stake",
									"referrer": "Optional referrer address"
								}
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"vote(uint256,bool)": {
								"params": {
									"proposalId": "ID of the proposal",
									"voteFor": "True to vote for, false to vote against"
								}
							},
							"withdraw(uint256)": {
								"params": {
									"amount": "Amount to withdraw"
								}
							}
						},
						"title": "FresaCoin - Ethereum version ",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/FresaCoin.sol\":209:7687  contract FresaCoin is ERC20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/FresaCoin.sol\":1460:1466  7 days */\n  0x093a80\n    /* \"contracts/FresaCoin.sol\":1426:1466  uint256 public minStakeDuration = 7 days */\n  0x0e\n  sstore\n    /* \"contracts/FresaCoin.sol\":2228:2555  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/FresaCoin.sol\":2374:2384  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x09\n  dup2\n  mstore\n  0x20\n  add\n  0x4672657361436f696e0000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x05\n  dup2\n  mstore\n  0x20\n  add\n  0x4652455341000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1675:1680  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1672  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1700:1707  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_16)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/FresaCoin.sol\":2396:2429  _mint(msg.sender, _initialSupply) */\n  tag_18\n    /* \"contracts/FresaCoin.sol\":2402:2412  msg.sender */\n  caller\n    /* \"contracts/FresaCoin.sol\":2414:2428  _initialSupply */\n  dup5\n    /* \"contracts/FresaCoin.sol\":2396:2401  _mint */\n  shl(0x20, tag_19)\n    /* \"contracts/FresaCoin.sol\":2396:2429  _mint(msg.sender, _initialSupply) */\n  0x20\n  shr\n  jump\t// in\ntag_18:\n    /* \"contracts/FresaCoin.sol\":2487:2498  _rewardRate */\n  dup2\n    /* \"contracts/FresaCoin.sol\":2462:2473  stakingPool */\n  0x0a\n    /* \"contracts/FresaCoin.sol\":2462:2484  stakingPool.rewardRate */\n  0x00\n  add\n    /* \"contracts/FresaCoin.sol\":2462:2498  stakingPool.rewardRate = _rewardRate */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/FresaCoin.sol\":2535:2548  _lockDuration */\n  dup1\n    /* \"contracts/FresaCoin.sol\":2508:2519  stakingPool */\n  0x0a\n    /* \"contracts/FresaCoin.sol\":2508:2532  stakingPool.lockDuration */\n  0x01\n  add\n    /* \"contracts/FresaCoin.sol\":2508:2548  stakingPool.lockDuration = _lockDuration */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/FresaCoin.sol\":2228:2555  constructor(... */\n  pop\n  pop\n  pop\n    /* \"contracts/FresaCoin.sol\":209:7687  contract FresaCoin is ERC20, Ownable {... */\n  jump(tag_20)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\ntag_19:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7547:7548  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n  tag_23\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_24\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_24:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\ntag_23:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  tag_25\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n  shl(0x20, tag_26)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_25:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_26:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  tag_28\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_29\n  swap2\n  swap1\n  tag_30\n  jump\t// in\ntag_29:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  jump(tag_31)\ntag_28:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n  iszero\n  tag_32\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_33\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_34\n  jump\t// in\ntag_33:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\ntag_32:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\ntag_31:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  tag_35\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  jump(tag_36)\ntag_35:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\ntag_36:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  mload(0x40)\n  tag_37\n  swap2\n  swap1\n  tag_38\n  jump\t// in\ntag_37:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_40:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:411   */\ntag_42:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":400:405   */\n  dup2\n    /* \"#utility.yul\":389:405   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:411   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":417:539   */\ntag_43:\n    /* \"#utility.yul\":490:514   */\n  tag_75\n    /* \"#utility.yul\":508:513   */\n  dup2\n    /* \"#utility.yul\":490:514   */\n  tag_42\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":483:488   */\n  dup2\n    /* \"#utility.yul\":480:515   */\n  eq\n    /* \"#utility.yul\":470:533   */\n  tag_76\n  jumpi\n    /* \"#utility.yul\":529:530   */\n  0x00\n    /* \"#utility.yul\":526:527   */\n  0x00\n    /* \"#utility.yul\":519:531   */\n  revert\n    /* \"#utility.yul\":470:533   */\ntag_76:\n    /* \"#utility.yul\":417:539   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":545:688   */\ntag_44:\n    /* \"#utility.yul\":602:607   */\n  0x00\n    /* \"#utility.yul\":633:639   */\n  dup2\n    /* \"#utility.yul\":627:640   */\n  mload\n    /* \"#utility.yul\":618:640   */\n  swap1\n  pop\n    /* \"#utility.yul\":649:682   */\n  tag_78\n    /* \"#utility.yul\":676:681   */\n  dup2\n    /* \"#utility.yul\":649:682   */\n  tag_43\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":545:688   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":694:1357   */\ntag_3:\n    /* \"#utility.yul\":782:788   */\n  0x00\n    /* \"#utility.yul\":790:796   */\n  0x00\n    /* \"#utility.yul\":798:804   */\n  0x00\n    /* \"#utility.yul\":847:849   */\n  0x60\n    /* \"#utility.yul\":835:844   */\n  dup5\n    /* \"#utility.yul\":826:833   */\n  dup7\n    /* \"#utility.yul\":822:845   */\n  sub\n    /* \"#utility.yul\":818:850   */\n  slt\n    /* \"#utility.yul\":815:934   */\n  iszero\n  tag_80\n  jumpi\n    /* \"#utility.yul\":853:932   */\n  tag_81\n  tag_40\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":815:934   */\ntag_80:\n    /* \"#utility.yul\":973:974   */\n  0x00\n    /* \"#utility.yul\":998:1062   */\n  tag_82\n    /* \"#utility.yul\":1054:1061   */\n  dup7\n    /* \"#utility.yul\":1045:1051   */\n  dup3\n    /* \"#utility.yul\":1034:1043   */\n  dup8\n    /* \"#utility.yul\":1030:1052   */\n  add\n    /* \"#utility.yul\":998:1062   */\n  tag_44\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":988:1062   */\n  swap4\n  pop\n    /* \"#utility.yul\":944:1072   */\n  pop\n    /* \"#utility.yul\":1111:1113   */\n  0x20\n    /* \"#utility.yul\":1137:1201   */\n  tag_83\n    /* \"#utility.yul\":1193:1200   */\n  dup7\n    /* \"#utility.yul\":1184:1190   */\n  dup3\n    /* \"#utility.yul\":1173:1182   */\n  dup8\n    /* \"#utility.yul\":1169:1191   */\n  add\n    /* \"#utility.yul\":1137:1201   */\n  tag_44\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":1127:1201   */\n  swap3\n  pop\n    /* \"#utility.yul\":1082:1211   */\n  pop\n    /* \"#utility.yul\":1250:1252   */\n  0x40\n    /* \"#utility.yul\":1276:1340   */\n  tag_84\n    /* \"#utility.yul\":1332:1339   */\n  dup7\n    /* \"#utility.yul\":1323:1329   */\n  dup3\n    /* \"#utility.yul\":1312:1321   */\n  dup8\n    /* \"#utility.yul\":1308:1330   */\n  add\n    /* \"#utility.yul\":1276:1340   */\n  tag_44\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":1266:1340   */\n  swap2\n  pop\n    /* \"#utility.yul\":1221:1350   */\n  pop\n    /* \"#utility.yul\":694:1357   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":1363:1462   */\ntag_45:\n    /* \"#utility.yul\":1415:1421   */\n  0x00\n    /* \"#utility.yul\":1449:1454   */\n  dup2\n    /* \"#utility.yul\":1443:1455   */\n  mload\n    /* \"#utility.yul\":1433:1455   */\n  swap1\n  pop\n    /* \"#utility.yul\":1363:1462   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1468:1648   */\ntag_46:\n    /* \"#utility.yul\":1516:1593   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1513:1514   */\n  0x00\n    /* \"#utility.yul\":1506:1594   */\n  mstore\n    /* \"#utility.yul\":1613:1617   */\n  0x41\n    /* \"#utility.yul\":1610:1611   */\n  0x04\n    /* \"#utility.yul\":1603:1618   */\n  mstore\n    /* \"#utility.yul\":1637:1641   */\n  0x24\n    /* \"#utility.yul\":1634:1635   */\n  0x00\n    /* \"#utility.yul\":1627:1642   */\n  revert\n    /* \"#utility.yul\":1654:1834   */\ntag_47:\n    /* \"#utility.yul\":1702:1779   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1699:1700   */\n  0x00\n    /* \"#utility.yul\":1692:1780   */\n  mstore\n    /* \"#utility.yul\":1799:1803   */\n  0x22\n    /* \"#utility.yul\":1796:1797   */\n  0x04\n    /* \"#utility.yul\":1789:1804   */\n  mstore\n    /* \"#utility.yul\":1823:1827   */\n  0x24\n    /* \"#utility.yul\":1820:1821   */\n  0x00\n    /* \"#utility.yul\":1813:1828   */\n  revert\n    /* \"#utility.yul\":1840:2160   */\ntag_48:\n    /* \"#utility.yul\":1884:1890   */\n  0x00\n    /* \"#utility.yul\":1921:1922   */\n  0x02\n    /* \"#utility.yul\":1915:1919   */\n  dup3\n    /* \"#utility.yul\":1911:1923   */\n  div\n    /* \"#utility.yul\":1901:1923   */\n  swap1\n  pop\n    /* \"#utility.yul\":1968:1969   */\n  0x01\n    /* \"#utility.yul\":1962:1966   */\n  dup3\n    /* \"#utility.yul\":1958:1970   */\n  and\n    /* \"#utility.yul\":1989:2007   */\n  dup1\n    /* \"#utility.yul\":1979:2060   */\n  tag_89\n  jumpi\n    /* \"#utility.yul\":2045:2049   */\n  0x7f\n    /* \"#utility.yul\":2037:2043   */\n  dup3\n    /* \"#utility.yul\":2033:2050   */\n  and\n    /* \"#utility.yul\":2023:2050   */\n  swap2\n  pop\n    /* \"#utility.yul\":1979:2060   */\ntag_89:\n    /* \"#utility.yul\":2107:2109   */\n  0x20\n    /* \"#utility.yul\":2099:2105   */\n  dup3\n    /* \"#utility.yul\":2096:2110   */\n  lt\n    /* \"#utility.yul\":2076:2094   */\n  dup2\n    /* \"#utility.yul\":2073:2111   */\n  sub\n    /* \"#utility.yul\":2070:2154   */\n  tag_90\n  jumpi\n    /* \"#utility.yul\":2126:2144   */\n  tag_91\n  tag_47\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":2070:2154   */\ntag_90:\n    /* \"#utility.yul\":1891:2160   */\n  pop\n    /* \"#utility.yul\":1840:2160   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2166:2307   */\ntag_49:\n    /* \"#utility.yul\":2215:2219   */\n  0x00\n    /* \"#utility.yul\":2238:2241   */\n  dup2\n    /* \"#utility.yul\":2230:2241   */\n  swap1\n  pop\n    /* \"#utility.yul\":2261:2264   */\n  dup2\n    /* \"#utility.yul\":2258:2259   */\n  0x00\n    /* \"#utility.yul\":2251:2265   */\n  mstore\n    /* \"#utility.yul\":2295:2299   */\n  0x20\n    /* \"#utility.yul\":2292:2293   */\n  0x00\n    /* \"#utility.yul\":2282:2300   */\n  keccak256\n    /* \"#utility.yul\":2274:2300   */\n  swap1\n  pop\n    /* \"#utility.yul\":2166:2307   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2313:2406   */\ntag_50:\n    /* \"#utility.yul\":2350:2356   */\n  0x00\n    /* \"#utility.yul\":2397:2399   */\n  0x20\n    /* \"#utility.yul\":2392:2394   */\n  0x1f\n    /* \"#utility.yul\":2385:2390   */\n  dup4\n    /* \"#utility.yul\":2381:2395   */\n  add\n    /* \"#utility.yul\":2377:2400   */\n  div\n    /* \"#utility.yul\":2367:2400   */\n  swap1\n  pop\n    /* \"#utility.yul\":2313:2406   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2412:2519   */\ntag_51:\n    /* \"#utility.yul\":2456:2464   */\n  0x00\n    /* \"#utility.yul\":2506:2511   */\n  dup3\n    /* \"#utility.yul\":2500:2504   */\n  dup3\n    /* \"#utility.yul\":2496:2512   */\n  shl\n    /* \"#utility.yul\":2475:2512   */\n  swap1\n  pop\n    /* \"#utility.yul\":2412:2519   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2525:2918   */\ntag_52:\n    /* \"#utility.yul\":2594:2600   */\n  0x00\n    /* \"#utility.yul\":2644:2645   */\n  0x08\n    /* \"#utility.yul\":2632:2642   */\n  dup4\n    /* \"#utility.yul\":2628:2646   */\n  mul\n    /* \"#utility.yul\":2667:2764   */\n  tag_96\n    /* \"#utility.yul\":2697:2763   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2686:2695   */\n  dup3\n    /* \"#utility.yul\":2667:2764   */\n  tag_51\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":2785:2824   */\n  tag_97\n    /* \"#utility.yul\":2815:2823   */\n  dup7\n    /* \"#utility.yul\":2804:2813   */\n  dup4\n    /* \"#utility.yul\":2785:2824   */\n  tag_51\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":2773:2824   */\n  swap6\n  pop\n    /* \"#utility.yul\":2857:2861   */\n  dup1\n    /* \"#utility.yul\":2853:2862   */\n  not\n    /* \"#utility.yul\":2846:2851   */\n  dup5\n    /* \"#utility.yul\":2842:2863   */\n  and\n    /* \"#utility.yul\":2833:2863   */\n  swap4\n  pop\n    /* \"#utility.yul\":2906:2910   */\n  dup1\n    /* \"#utility.yul\":2896:2904   */\n  dup7\n    /* \"#utility.yul\":2892:2911   */\n  and\n    /* \"#utility.yul\":2885:2890   */\n  dup5\n    /* \"#utility.yul\":2882:2912   */\n  or\n    /* \"#utility.yul\":2872:2912   */\n  swap3\n  pop\n    /* \"#utility.yul\":2601:2918   */\n  pop\n  pop\n    /* \"#utility.yul\":2525:2918   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2924:2984   */\ntag_53:\n    /* \"#utility.yul\":2952:2955   */\n  0x00\n    /* \"#utility.yul\":2973:2978   */\n  dup2\n    /* \"#utility.yul\":2966:2978   */\n  swap1\n  pop\n    /* \"#utility.yul\":2924:2984   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2990:3132   */\ntag_54:\n    /* \"#utility.yul\":3040:3049   */\n  0x00\n    /* \"#utility.yul\":3073:3126   */\n  tag_100\n    /* \"#utility.yul\":3091:3125   */\n  tag_101\n    /* \"#utility.yul\":3100:3124   */\n  tag_102\n    /* \"#utility.yul\":3118:3123   */\n  dup5\n    /* \"#utility.yul\":3100:3124   */\n  tag_42\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":3091:3125   */\n  tag_53\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":3073:3126   */\n  tag_42\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":3060:3126   */\n  swap1\n  pop\n    /* \"#utility.yul\":2990:3132   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3138:3213   */\ntag_55:\n    /* \"#utility.yul\":3181:3184   */\n  0x00\n    /* \"#utility.yul\":3202:3207   */\n  dup2\n    /* \"#utility.yul\":3195:3207   */\n  swap1\n  pop\n    /* \"#utility.yul\":3138:3213   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3219:3488   */\ntag_56:\n    /* \"#utility.yul\":3329:3368   */\n  tag_105\n    /* \"#utility.yul\":3360:3367   */\n  dup4\n    /* \"#utility.yul\":3329:3368   */\n  tag_54\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":3390:3481   */\n  tag_106\n    /* \"#utility.yul\":3439:3480   */\n  tag_107\n    /* \"#utility.yul\":3463:3479   */\n  dup3\n    /* \"#utility.yul\":3439:3480   */\n  tag_55\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":3431:3437   */\n  dup5\n    /* \"#utility.yul\":3424:3428   */\n  dup5\n    /* \"#utility.yul\":3418:3429   */\n  sload\n    /* \"#utility.yul\":3390:3481   */\n  tag_52\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":3384:3388   */\n  dup3\n    /* \"#utility.yul\":3377:3482   */\n  sstore\n    /* \"#utility.yul\":3295:3488   */\n  pop\n    /* \"#utility.yul\":3219:3488   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3494:3567   */\ntag_57:\n    /* \"#utility.yul\":3539:3542   */\n  0x00\n    /* \"#utility.yul\":3560:3561   */\n  0x00\n    /* \"#utility.yul\":3553:3561   */\n  swap1\n  pop\n    /* \"#utility.yul\":3494:3567   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3573:3762   */\ntag_58:\n    /* \"#utility.yul\":3650:3682   */\n  tag_110\n  tag_57\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":3691:3756   */\n  tag_111\n    /* \"#utility.yul\":3749:3755   */\n  dup2\n    /* \"#utility.yul\":3741:3747   */\n  dup5\n    /* \"#utility.yul\":3735:3739   */\n  dup5\n    /* \"#utility.yul\":3691:3756   */\n  tag_56\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":3626:3762   */\n  pop\n    /* \"#utility.yul\":3573:3762   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3768:3954   */\ntag_59:\n    /* \"#utility.yul\":3828:3948   */\ntag_113:\n    /* \"#utility.yul\":3845:3848   */\n  dup2\n    /* \"#utility.yul\":3838:3843   */\n  dup2\n    /* \"#utility.yul\":3835:3849   */\n  lt\n    /* \"#utility.yul\":3828:3948   */\n  iszero\n  tag_115\n  jumpi\n    /* \"#utility.yul\":3899:3938   */\n  tag_116\n    /* \"#utility.yul\":3936:3937   */\n  0x00\n    /* \"#utility.yul\":3929:3934   */\n  dup3\n    /* \"#utility.yul\":3899:3938   */\n  tag_58\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":3872:3873   */\n  0x01\n    /* \"#utility.yul\":3865:3870   */\n  dup2\n    /* \"#utility.yul\":3861:3874   */\n  add\n    /* \"#utility.yul\":3852:3874   */\n  swap1\n  pop\n    /* \"#utility.yul\":3828:3948   */\n  jump(tag_113)\ntag_115:\n    /* \"#utility.yul\":3768:3954   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3960:4503   */\ntag_60:\n    /* \"#utility.yul\":4061:4063   */\n  0x1f\n    /* \"#utility.yul\":4056:4059   */\n  dup3\n    /* \"#utility.yul\":4053:4064   */\n  gt\n    /* \"#utility.yul\":4050:4496   */\n  iszero\n  tag_118\n  jumpi\n    /* \"#utility.yul\":4095:4133   */\n  tag_119\n    /* \"#utility.yul\":4127:4132   */\n  dup2\n    /* \"#utility.yul\":4095:4133   */\n  tag_49\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":4179:4208   */\n  tag_120\n    /* \"#utility.yul\":4197:4207   */\n  dup5\n    /* \"#utility.yul\":4179:4208   */\n  tag_50\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":4169:4177   */\n  dup2\n    /* \"#utility.yul\":4165:4209   */\n  add\n    /* \"#utility.yul\":4362:4364   */\n  0x20\n    /* \"#utility.yul\":4350:4360   */\n  dup6\n    /* \"#utility.yul\":4347:4365   */\n  lt\n    /* \"#utility.yul\":4344:4393   */\n  iszero\n  tag_121\n  jumpi\n    /* \"#utility.yul\":4383:4391   */\n  dup2\n    /* \"#utility.yul\":4368:4391   */\n  swap1\n  pop\n    /* \"#utility.yul\":4344:4393   */\ntag_121:\n    /* \"#utility.yul\":4406:4486   */\n  tag_122\n    /* \"#utility.yul\":4462:4484   */\n  tag_123\n    /* \"#utility.yul\":4480:4483   */\n  dup6\n    /* \"#utility.yul\":4462:4484   */\n  tag_50\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":4452:4460   */\n  dup4\n    /* \"#utility.yul\":4448:4485   */\n  add\n    /* \"#utility.yul\":4435:4446   */\n  dup3\n    /* \"#utility.yul\":4406:4486   */\n  tag_59\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":4065:4496   */\n  pop\n  pop\n    /* \"#utility.yul\":4050:4496   */\ntag_118:\n    /* \"#utility.yul\":3960:4503   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4509:4626   */\ntag_61:\n    /* \"#utility.yul\":4563:4571   */\n  0x00\n    /* \"#utility.yul\":4613:4618   */\n  dup3\n    /* \"#utility.yul\":4607:4611   */\n  dup3\n    /* \"#utility.yul\":4603:4619   */\n  shr\n    /* \"#utility.yul\":4582:4619   */\n  swap1\n  pop\n    /* \"#utility.yul\":4509:4626   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4632:4801   */\ntag_62:\n    /* \"#utility.yul\":4676:4682   */\n  0x00\n    /* \"#utility.yul\":4709:4760   */\n  tag_126\n    /* \"#utility.yul\":4757:4758   */\n  0x00\n    /* \"#utility.yul\":4753:4759   */\n  not\n    /* \"#utility.yul\":4745:4750   */\n  dup5\n    /* \"#utility.yul\":4742:4743   */\n  0x08\n    /* \"#utility.yul\":4738:4751   */\n  mul\n    /* \"#utility.yul\":4709:4760   */\n  tag_61\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":4705:4761   */\n  not\n    /* \"#utility.yul\":4790:4794   */\n  dup1\n    /* \"#utility.yul\":4784:4788   */\n  dup4\n    /* \"#utility.yul\":4780:4795   */\n  and\n    /* \"#utility.yul\":4770:4795   */\n  swap2\n  pop\n    /* \"#utility.yul\":4683:4801   */\n  pop\n    /* \"#utility.yul\":4632:4801   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4806:5101   */\ntag_63:\n    /* \"#utility.yul\":4882:4886   */\n  0x00\n    /* \"#utility.yul\":5028:5057   */\n  tag_128\n    /* \"#utility.yul\":5053:5056   */\n  dup4\n    /* \"#utility.yul\":5047:5051   */\n  dup4\n    /* \"#utility.yul\":5028:5057   */\n  tag_62\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":5020:5057   */\n  swap2\n  pop\n    /* \"#utility.yul\":5090:5093   */\n  dup3\n    /* \"#utility.yul\":5087:5088   */\n  0x02\n    /* \"#utility.yul\":5083:5094   */\n  mul\n    /* \"#utility.yul\":5077:5081   */\n  dup3\n    /* \"#utility.yul\":5074:5095   */\n  or\n    /* \"#utility.yul\":5066:5095   */\n  swap1\n  pop\n    /* \"#utility.yul\":4806:5101   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5106:6501   */\ntag_9:\n    /* \"#utility.yul\":5223:5260   */\n  tag_130\n    /* \"#utility.yul\":5256:5259   */\n  dup3\n    /* \"#utility.yul\":5223:5260   */\n  tag_45\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":5325:5343   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5317:5323   */\n  dup2\n    /* \"#utility.yul\":5314:5344   */\n  gt\n    /* \"#utility.yul\":5311:5367   */\n  iszero\n  tag_131\n  jumpi\n    /* \"#utility.yul\":5347:5365   */\n  tag_132\n  tag_46\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":5311:5367   */\ntag_131:\n    /* \"#utility.yul\":5391:5429   */\n  tag_133\n    /* \"#utility.yul\":5423:5427   */\n  dup3\n    /* \"#utility.yul\":5417:5428   */\n  sload\n    /* \"#utility.yul\":5391:5429   */\n  tag_48\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":5476:5543   */\n  tag_134\n    /* \"#utility.yul\":5536:5542   */\n  dup3\n    /* \"#utility.yul\":5528:5534   */\n  dup3\n    /* \"#utility.yul\":5522:5526   */\n  dup6\n    /* \"#utility.yul\":5476:5543   */\n  tag_60\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":5570:5571   */\n  0x00\n    /* \"#utility.yul\":5594:5598   */\n  0x20\n    /* \"#utility.yul\":5581:5598   */\n  swap1\n  pop\n    /* \"#utility.yul\":5626:5628   */\n  0x1f\n    /* \"#utility.yul\":5618:5624   */\n  dup4\n    /* \"#utility.yul\":5615:5629   */\n  gt\n    /* \"#utility.yul\":5643:5644   */\n  0x01\n    /* \"#utility.yul\":5638:6256   */\n  dup2\n  eq\n  tag_136\n  jumpi\n    /* \"#utility.yul\":6300:6301   */\n  0x00\n    /* \"#utility.yul\":6317:6323   */\n  dup5\n    /* \"#utility.yul\":6314:6391   */\n  iszero\n  tag_137\n  jumpi\n    /* \"#utility.yul\":6366:6375   */\n  dup3\n    /* \"#utility.yul\":6361:6364   */\n  dup8\n    /* \"#utility.yul\":6357:6376   */\n  add\n    /* \"#utility.yul\":6351:6377   */\n  mload\n    /* \"#utility.yul\":6342:6377   */\n  swap1\n  pop\n    /* \"#utility.yul\":6314:6391   */\ntag_137:\n    /* \"#utility.yul\":6417:6484   */\n  tag_138\n    /* \"#utility.yul\":6477:6483   */\n  dup6\n    /* \"#utility.yul\":6470:6475   */\n  dup3\n    /* \"#utility.yul\":6417:6484   */\n  tag_63\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":6411:6415   */\n  dup7\n    /* \"#utility.yul\":6404:6485   */\n  sstore\n    /* \"#utility.yul\":6273:6495   */\n  pop\n    /* \"#utility.yul\":5608:6495   */\n  jump(tag_135)\n    /* \"#utility.yul\":5638:6256   */\ntag_136:\n    /* \"#utility.yul\":5690:5694   */\n  0x1f\n    /* \"#utility.yul\":5686:5695   */\n  not\n    /* \"#utility.yul\":5678:5684   */\n  dup5\n    /* \"#utility.yul\":5674:5696   */\n  and\n    /* \"#utility.yul\":5724:5761   */\n  tag_139\n    /* \"#utility.yul\":5756:5760   */\n  dup7\n    /* \"#utility.yul\":5724:5761   */\n  tag_49\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":5783:5784   */\n  0x00\n    /* \"#utility.yul\":5797:6005   */\ntag_140:\n    /* \"#utility.yul\":5811:5818   */\n  dup3\n    /* \"#utility.yul\":5808:5809   */\n  dup2\n    /* \"#utility.yul\":5805:5819   */\n  lt\n    /* \"#utility.yul\":5797:6005   */\n  iszero\n  tag_142\n  jumpi\n    /* \"#utility.yul\":5890:5899   */\n  dup5\n    /* \"#utility.yul\":5885:5888   */\n  dup10\n    /* \"#utility.yul\":5881:5900   */\n  add\n    /* \"#utility.yul\":5875:5901   */\n  mload\n    /* \"#utility.yul\":5867:5873   */\n  dup3\n    /* \"#utility.yul\":5860:5902   */\n  sstore\n    /* \"#utility.yul\":5941:5942   */\n  0x01\n    /* \"#utility.yul\":5933:5939   */\n  dup3\n    /* \"#utility.yul\":5929:5943   */\n  add\n    /* \"#utility.yul\":5919:5943   */\n  swap2\n  pop\n    /* \"#utility.yul\":5988:5990   */\n  0x20\n    /* \"#utility.yul\":5977:5986   */\n  dup6\n    /* \"#utility.yul\":5973:5991   */\n  add\n    /* \"#utility.yul\":5960:5991   */\n  swap5\n  pop\n    /* \"#utility.yul\":5834:5838   */\n  0x20\n    /* \"#utility.yul\":5831:5832   */\n  dup2\n    /* \"#utility.yul\":5827:5839   */\n  add\n    /* \"#utility.yul\":5822:5839   */\n  swap1\n  pop\n    /* \"#utility.yul\":5797:6005   */\n  jump(tag_140)\ntag_142:\n    /* \"#utility.yul\":6033:6039   */\n  dup7\n    /* \"#utility.yul\":6024:6031   */\n  dup4\n    /* \"#utility.yul\":6021:6040   */\n  lt\n    /* \"#utility.yul\":6018:6197   */\n  iszero\n  tag_143\n  jumpi\n    /* \"#utility.yul\":6091:6100   */\n  dup5\n    /* \"#utility.yul\":6086:6089   */\n  dup10\n    /* \"#utility.yul\":6082:6101   */\n  add\n    /* \"#utility.yul\":6076:6102   */\n  mload\n    /* \"#utility.yul\":6134:6182   */\n  tag_144\n    /* \"#utility.yul\":6176:6180   */\n  0x1f\n    /* \"#utility.yul\":6168:6174   */\n  dup10\n    /* \"#utility.yul\":6164:6181   */\n  and\n    /* \"#utility.yul\":6153:6162   */\n  dup3\n    /* \"#utility.yul\":6134:6182   */\n  tag_62\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":6126:6132   */\n  dup4\n    /* \"#utility.yul\":6119:6183   */\n  sstore\n    /* \"#utility.yul\":6041:6197   */\n  pop\n    /* \"#utility.yul\":6018:6197   */\ntag_143:\n    /* \"#utility.yul\":6243:6244   */\n  0x01\n    /* \"#utility.yul\":6239:6240   */\n  0x02\n    /* \"#utility.yul\":6231:6237   */\n  dup9\n    /* \"#utility.yul\":6227:6241   */\n  mul\n    /* \"#utility.yul\":6223:6245   */\n  add\n    /* \"#utility.yul\":6217:6221   */\n  dup9\n    /* \"#utility.yul\":6210:6246   */\n  sstore\n    /* \"#utility.yul\":5645:6256   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5608:6495   */\ntag_135:\n  pop\n    /* \"#utility.yul\":5198:6501   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5106:6501   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6507:6633   */\ntag_64:\n    /* \"#utility.yul\":6544:6551   */\n  0x00\n    /* \"#utility.yul\":6584:6626   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":6577:6582   */\n  dup3\n    /* \"#utility.yul\":6573:6627   */\n  and\n    /* \"#utility.yul\":6562:6627   */\n  swap1\n  pop\n    /* \"#utility.yul\":6507:6633   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6639:6735   */\ntag_65:\n    /* \"#utility.yul\":6676:6683   */\n  0x00\n    /* \"#utility.yul\":6705:6729   */\n  tag_147\n    /* \"#utility.yul\":6723:6728   */\n  dup3\n    /* \"#utility.yul\":6705:6729   */\n  tag_64\n  jump\t// in\ntag_147:\n    /* \"#utility.yul\":6694:6729   */\n  swap1\n  pop\n    /* \"#utility.yul\":6639:6735   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6741:6859   */\ntag_66:\n    /* \"#utility.yul\":6828:6852   */\n  tag_149\n    /* \"#utility.yul\":6846:6851   */\n  dup2\n    /* \"#utility.yul\":6828:6852   */\n  tag_65\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":6823:6826   */\n  dup3\n    /* \"#utility.yul\":6816:6853   */\n  mstore\n    /* \"#utility.yul\":6741:6859   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6865:7087   */\ntag_14:\n    /* \"#utility.yul\":6958:6962   */\n  0x00\n    /* \"#utility.yul\":6996:6998   */\n  0x20\n    /* \"#utility.yul\":6985:6994   */\n  dup3\n    /* \"#utility.yul\":6981:6999   */\n  add\n    /* \"#utility.yul\":6973:6999   */\n  swap1\n  pop\n    /* \"#utility.yul\":7009:7080   */\n  tag_151\n    /* \"#utility.yul\":7077:7078   */\n  0x00\n    /* \"#utility.yul\":7066:7075   */\n  dup4\n    /* \"#utility.yul\":7062:7079   */\n  add\n    /* \"#utility.yul\":7053:7059   */\n  dup5\n    /* \"#utility.yul\":7009:7080   */\n  tag_66\n  jump\t// in\ntag_151:\n    /* \"#utility.yul\":6865:7087   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7093:7273   */\ntag_67:\n    /* \"#utility.yul\":7141:7218   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":7138:7139   */\n  0x00\n    /* \"#utility.yul\":7131:7219   */\n  mstore\n    /* \"#utility.yul\":7238:7242   */\n  0x11\n    /* \"#utility.yul\":7235:7236   */\n  0x04\n    /* \"#utility.yul\":7228:7243   */\n  mstore\n    /* \"#utility.yul\":7262:7266   */\n  0x24\n    /* \"#utility.yul\":7259:7260   */\n  0x00\n    /* \"#utility.yul\":7252:7267   */\n  revert\n    /* \"#utility.yul\":7279:7470   */\ntag_30:\n    /* \"#utility.yul\":7319:7322   */\n  0x00\n    /* \"#utility.yul\":7338:7358   */\n  tag_154\n    /* \"#utility.yul\":7356:7357   */\n  dup3\n    /* \"#utility.yul\":7338:7358   */\n  tag_42\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":7333:7358   */\n  swap2\n  pop\n    /* \"#utility.yul\":7372:7392   */\n  tag_155\n    /* \"#utility.yul\":7390:7391   */\n  dup4\n    /* \"#utility.yul\":7372:7392   */\n  tag_42\n  jump\t// in\ntag_155:\n    /* \"#utility.yul\":7367:7392   */\n  swap3\n  pop\n    /* \"#utility.yul\":7415:7416   */\n  dup3\n    /* \"#utility.yul\":7412:7413   */\n  dup3\n    /* \"#utility.yul\":7408:7417   */\n  add\n    /* \"#utility.yul\":7401:7417   */\n  swap1\n  pop\n    /* \"#utility.yul\":7436:7439   */\n  dup1\n    /* \"#utility.yul\":7433:7434   */\n  dup3\n    /* \"#utility.yul\":7430:7440   */\n  gt\n    /* \"#utility.yul\":7427:7463   */\n  iszero\n  tag_156\n  jumpi\n    /* \"#utility.yul\":7443:7461   */\n  tag_157\n  tag_67\n  jump\t// in\ntag_157:\n    /* \"#utility.yul\":7427:7463   */\ntag_156:\n    /* \"#utility.yul\":7279:7470   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7476:7594   */\ntag_68:\n    /* \"#utility.yul\":7563:7587   */\n  tag_159\n    /* \"#utility.yul\":7581:7586   */\n  dup2\n    /* \"#utility.yul\":7563:7587   */\n  tag_42\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":7558:7561   */\n  dup3\n    /* \"#utility.yul\":7551:7588   */\n  mstore\n    /* \"#utility.yul\":7476:7594   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7600:8042   */\ntag_34:\n    /* \"#utility.yul\":7749:7753   */\n  0x00\n    /* \"#utility.yul\":7787:7789   */\n  0x60\n    /* \"#utility.yul\":7776:7785   */\n  dup3\n    /* \"#utility.yul\":7772:7790   */\n  add\n    /* \"#utility.yul\":7764:7790   */\n  swap1\n  pop\n    /* \"#utility.yul\":7800:7871   */\n  tag_161\n    /* \"#utility.yul\":7868:7869   */\n  0x00\n    /* \"#utility.yul\":7857:7866   */\n  dup4\n    /* \"#utility.yul\":7853:7870   */\n  add\n    /* \"#utility.yul\":7844:7850   */\n  dup7\n    /* \"#utility.yul\":7800:7871   */\n  tag_66\n  jump\t// in\ntag_161:\n    /* \"#utility.yul\":7881:7953   */\n  tag_162\n    /* \"#utility.yul\":7949:7951   */\n  0x20\n    /* \"#utility.yul\":7938:7947   */\n  dup4\n    /* \"#utility.yul\":7934:7952   */\n  add\n    /* \"#utility.yul\":7925:7931   */\n  dup6\n    /* \"#utility.yul\":7881:7953   */\n  tag_68\n  jump\t// in\ntag_162:\n    /* \"#utility.yul\":7963:8035   */\n  tag_163\n    /* \"#utility.yul\":8031:8033   */\n  0x40\n    /* \"#utility.yul\":8020:8029   */\n  dup4\n    /* \"#utility.yul\":8016:8034   */\n  add\n    /* \"#utility.yul\":8007:8013   */\n  dup5\n    /* \"#utility.yul\":7963:8035   */\n  tag_68\n  jump\t// in\ntag_163:\n    /* \"#utility.yul\":7600:8042   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8048:8270   */\ntag_38:\n    /* \"#utility.yul\":8141:8145   */\n  0x00\n    /* \"#utility.yul\":8179:8181   */\n  0x20\n    /* \"#utility.yul\":8168:8177   */\n  dup3\n    /* \"#utility.yul\":8164:8182   */\n  add\n    /* \"#utility.yul\":8156:8182   */\n  swap1\n  pop\n    /* \"#utility.yul\":8192:8263   */\n  tag_165\n    /* \"#utility.yul\":8260:8261   */\n  0x00\n    /* \"#utility.yul\":8249:8258   */\n  dup4\n    /* \"#utility.yul\":8245:8262   */\n  add\n    /* \"#utility.yul\":8236:8242   */\n  dup5\n    /* \"#utility.yul\":8192:8263   */\n  tag_68\n  jump\t// in\ntag_165:\n    /* \"#utility.yul\":8048:8270   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/FresaCoin.sol\":209:7687  contract FresaCoin is ERC20, Ownable {... */\ntag_20:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/FresaCoin.sol\":209:7687  contract FresaCoin is ERC20, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x5fec5c64\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xb3a55a66\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xcdb12c83\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xcdb12c83\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xe1913c81\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_30\n      jumpi\n      jump(tag_2)\n    tag_33:\n      dup1\n      0xb3a55a66\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xba13a572\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xc9d27afe\n      eq\n      tag_26\n      jumpi\n      jump(tag_2)\n    tag_32:\n      dup1\n      0x7acb7757\n      gt\n      tag_34\n      jumpi\n      dup1\n      0x7acb7757\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_34:\n      dup1\n      0x5fec5c64\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_31:\n      dup1\n      0x18160ddd\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x313ce567\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x3fd43098\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x49c2a1a6\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x576b5002\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_36:\n      dup1\n      0x18160ddd\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0x0c0512e9\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x0c0512e9\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x0c56ae3b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x13ed0846\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x16934fc4\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_37:\n      dup1\n      0x013cf08b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/FresaCoin.sol\":1184:1229  mapping(uint256 => Proposal) public proposals */\n    tag_3:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_42\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FresaCoin.sol\":1364:1394  uint256 public proposalCounter */\n    tag_6:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FresaCoin.sol\":1306:1336  StakingPool public stakingPool */\n    tag_7:\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_60\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FresaCoin.sol\":7345:7685  function calculateReward(uint256 amount, uint256 duration)... */\n    tag_8:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FresaCoin.sol\":1113:1152  mapping(address => Stake) public stakes */\n    tag_9:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      tag_70\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_71\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_10:\n      tag_73\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_11:\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      tag_79\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FresaCoin.sol\":3781:4537  function withdraw(uint256 amount) external {... */\n    tag_12:\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_82:\n      tag_83\n      jump\t// in\n    tag_81:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_13:\n      tag_84\n      tag_85\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_86\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FresaCoin.sol\":5874:6174  function enterLottery(uint256 amount) external {... */\n    tag_14:\n      tag_88\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_89:\n      tag_90\n      jump\t// in\n    tag_88:\n      stop\n        /* \"contracts/FresaCoin.sol\":4643:4990  function createProposal(string memory description) external onlyOwner {... */\n    tag_15:\n      tag_91\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_92\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n      tag_94\n      jump\t// in\n    tag_91:\n      stop\n        /* \"contracts/FresaCoin.sol\":6226:6767  function drawLotteryWinner() external onlyOwner {... */\n    tag_16:\n      tag_95\n      tag_96\n      jump\t// in\n    tag_95:\n      stop\n        /* \"contracts/FresaCoin.sol\":1426:1466  uint256 public minStakeDuration = 7 days */\n    tag_17:\n      tag_97\n      tag_98\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      tag_99\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_18:\n      tag_100\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_101\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_101:\n      tag_102\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      tag_103\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_19:\n      tag_104\n      tag_105\n      jump\t// in\n    tag_104:\n      stop\n        /* \"contracts/FresaCoin.sol\":2704:3668  function stake(uint256 amount, address referrer) external {... */\n    tag_20:\n      tag_106\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_107\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_107:\n      tag_109\n      jump\t// in\n    tag_106:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_21:\n      tag_110\n      tag_111\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      tag_112\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_22:\n      tag_114\n      tag_115\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      tag_116\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_23:\n      tag_117\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_118\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_118:\n      tag_119\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      tag_120\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FresaCoin.sol\":6851:6960  function getLotteryEntries() external view returns (address[] memory) {... */\n    tag_24:\n      tag_121\n      tag_122\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      tag_123\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FresaCoin.sol\":1259:1281  Lottery public lottery */\n    tag_25:\n      tag_125\n      tag_126\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      tag_127\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FresaCoin.sol\":5150:5752  function vote(uint256 proposalId, bool voteFor) external {... */\n    tag_26:\n      tag_128\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_129\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_129:\n      tag_131\n      jump\t// in\n    tag_128:\n      stop\n        /* \"contracts/FresaCoin.sol\":7051:7155  function getLotteryPrizePool() external view returns (uint256) {... */\n    tag_27:\n      tag_132\n      tag_133\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      tag_134\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_28:\n      tag_135\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_136\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_136:\n      tag_138\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      tag_139\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FresaCoin.sol\":1500:1542  uint256 public constant REFERRAL_BONUS = 5 */\n    tag_29:\n      tag_140\n      tag_141\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      tag_142\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_30:\n      tag_143\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_144\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_144:\n      tag_145\n      jump\t// in\n    tag_143:\n      stop\n        /* \"contracts/FresaCoin.sol\":1184:1229  mapping(uint256 => Proposal) public proposals */\n    tag_41:\n      mstore(0x20, 0x07)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      dup1\n      sload\n      tag_146\n      swap1\n      tag_147\n      jump\t// in\n    tag_146:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_148\n      swap1\n      tag_147\n      jump\t// in\n    tag_148:\n      dup1\n      iszero\n      tag_149\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_150\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_149)\n    tag_150:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_151:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_151\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_149:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      pop\n      dup5\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1824:1837  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1856:1861  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1849:1861  return _name */\n      dup1\n      sload\n      tag_153\n      swap1\n      tag_147\n      jump\t// in\n    tag_153:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_154\n      swap1\n      tag_147\n      jump\t// in\n    tag_154:\n      dup1\n      iszero\n      tag_155\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_156\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_155)\n    tag_156:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_157:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_157\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_155:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4071:4075  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4100  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      tag_159\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4113  _msgSender */\n      tag_160\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      jump\t// in\n    tag_159:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4115  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      tag_161\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4134:4139  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4141:4148  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4150:4155  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4133  _approve */\n      tag_162\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      jump\t// in\n    tag_161:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4173:4177  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4166:4177  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/FresaCoin.sol\":1364:1394  uint256 public proposalCounter */\n    tag_55:\n      sload(0x0d)\n      dup2\n      jump\t// out\n        /* \"contracts/FresaCoin.sol\":1306:1336  StakingPool public stakingPool */\n    tag_59:\n      0x0a\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"contracts/FresaCoin.sol\":7345:7685  function calculateReward(uint256 amount, uint256 duration)... */\n    tag_65:\n        /* \"contracts/FresaCoin.sol\":7449:7463  uint256 reward */\n      0x00\n        /* \"contracts/FresaCoin.sol\":7479:7495  uint256 baseRate */\n      0x00\n        /* \"contracts/FresaCoin.sol\":7508:7520  10_000 ether */\n      0x021e19e0c9bab2400000\n        /* \"contracts/FresaCoin.sol\":7499:7505  amount */\n      dup5\n        /* \"contracts/FresaCoin.sol\":7499:7520  amount > 10_000 ether */\n      gt\n        /* \"contracts/FresaCoin.sol\":7498:7561  (amount > 10_000 ether) ? 15 : (amount > 1_000 ether) ? 12 : 10 */\n      tag_164\n      jumpi\n        /* \"contracts/FresaCoin.sol\":7539:7550  1_000 ether */\n      0x3635c9adc5dea00000\n        /* \"contracts/FresaCoin.sol\":7530:7536  amount */\n      dup5\n        /* \"contracts/FresaCoin.sol\":7530:7550  amount > 1_000 ether */\n      gt\n        /* \"contracts/FresaCoin.sol\":7529:7561  (amount > 1_000 ether) ? 12 : 10 */\n      tag_165\n      jumpi\n        /* \"contracts/FresaCoin.sol\":7559:7561  10 */\n      0x0a\n        /* \"contracts/FresaCoin.sol\":7529:7561  (amount > 1_000 ether) ? 12 : 10 */\n      jump(tag_166)\n    tag_165:\n        /* \"contracts/FresaCoin.sol\":7554:7556  12 */\n      0x0c\n        /* \"contracts/FresaCoin.sol\":7529:7561  (amount > 1_000 ether) ? 12 : 10 */\n    tag_166:\n        /* \"contracts/FresaCoin.sol\":7498:7561  (amount > 10_000 ether) ? 15 : (amount > 1_000 ether) ? 12 : 10 */\n      jump(tag_167)\n    tag_164:\n        /* \"contracts/FresaCoin.sol\":7524:7526  15 */\n      0x0f\n        /* \"contracts/FresaCoin.sol\":7498:7561  (amount > 10_000 ether) ? 15 : (amount > 1_000 ether) ? 12 : 10 */\n    tag_167:\n        /* \"contracts/FresaCoin.sol\":7479:7561  uint256 baseRate = (amount > 10_000 ether) ? 15 : (amount > 1_000 ether) ? 12 : 10 */\n      0xff\n      and\n      swap1\n      pop\n        /* \"contracts/FresaCoin.sol\":7571:7589  uint256 multiplier */\n      0x00\n        /* \"contracts/FresaCoin.sol\":7604:7611  30 days */\n      0x278d00\n        /* \"contracts/FresaCoin.sol\":7593:7601  duration */\n      dup5\n        /* \"contracts/FresaCoin.sol\":7593:7611  duration > 30 days */\n      gt\n        /* \"contracts/FresaCoin.sol\":7592:7620  (duration > 30 days) ? 2 : 1 */\n      tag_168\n      jumpi\n        /* \"contracts/FresaCoin.sol\":7619:7620  1 */\n      0x01\n        /* \"contracts/FresaCoin.sol\":7592:7620  (duration > 30 days) ? 2 : 1 */\n      jump(tag_169)\n    tag_168:\n        /* \"contracts/FresaCoin.sol\":7615:7616  2 */\n      0x02\n        /* \"contracts/FresaCoin.sol\":7592:7620  (duration > 30 days) ? 2 : 1 */\n    tag_169:\n        /* \"contracts/FresaCoin.sol\":7571:7620  uint256 multiplier = (duration > 30 days) ? 2 : 1 */\n      0xff\n      and\n      swap1\n      pop\n        /* \"contracts/FresaCoin.sol\":7668:7678  multiplier */\n      dup1\n        /* \"contracts/FresaCoin.sol\":7661:7664  100 */\n      0x64\n        /* \"contracts/FresaCoin.sol\":7650:7658  baseRate */\n      dup4\n        /* \"contracts/FresaCoin.sol\":7641:7647  amount */\n      dup8\n        /* \"contracts/FresaCoin.sol\":7641:7658  amount * baseRate */\n      tag_170\n      swap2\n      swap1\n      tag_171\n      jump\t// in\n    tag_170:\n        /* \"contracts/FresaCoin.sol\":7641:7664  amount * baseRate / 100 */\n      tag_172\n      swap2\n      swap1\n      tag_173\n      jump\t// in\n    tag_172:\n        /* \"contracts/FresaCoin.sol\":7640:7678  (amount * baseRate / 100) * multiplier */\n      tag_174\n      swap2\n      swap1\n      tag_171\n      jump\t// in\n    tag_174:\n        /* \"contracts/FresaCoin.sol\":7631:7678  reward = (amount * baseRate / 100) * multiplier */\n      swap3\n      pop\n        /* \"contracts/FresaCoin.sol\":7469:7685  {... */\n      pop\n      pop\n        /* \"contracts/FresaCoin.sol\":7345:7685  function calculateReward(uint256 amount, uint256 duration)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/FresaCoin.sol\":1113:1152  mapping(address => Stake) public stakes */\n    tag_70:\n      mstore(0x20, 0x06)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      pop\n      dup5\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2908  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2920:2939  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_79:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4863:4867  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4894  address spender */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      tag_177\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4907  _msgSender */\n      tag_160\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      jump\t// in\n    tag_177:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4909  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      tag_178\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4935:4939  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4941:4948  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4950:4955  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4934  _spendAllowance */\n      tag_179\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_178:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      tag_180\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4976:4980  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4982:4984  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4986:4991  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4975  _transfer */\n      tag_181\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      jump\t// in\n    tag_180:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5009:5013  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5002:5013  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/FresaCoin.sol\":3781:4537  function withdraw(uint256 amount) external {... */\n    tag_83:\n        /* \"contracts/FresaCoin.sol\":3834:3857  Stake storage userStake */\n      0x00\n        /* \"contracts/FresaCoin.sol\":3860:3866  stakes */\n      0x06\n        /* \"contracts/FresaCoin.sol\":3860:3878  stakes[msg.sender] */\n      0x00\n        /* \"contracts/FresaCoin.sol\":3867:3877  msg.sender */\n      caller\n        /* \"contracts/FresaCoin.sol\":3860:3878  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/FresaCoin.sol\":3834:3878  Stake storage userStake = stakes[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/FresaCoin.sol\":3916:3922  amount */\n      dup2\n        /* \"contracts/FresaCoin.sol\":3896:3905  userStake */\n      dup2\n        /* \"contracts/FresaCoin.sol\":3896:3912  userStake.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/FresaCoin.sol\":3896:3922  userStake.amount >= amount */\n      lt\n      iszero\n        /* \"contracts/FresaCoin.sol\":3888:3954  require(userStake.amount >= amount, \"Insufficient staked balance\") */\n      tag_183\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_184\n      swap1\n      tag_185\n      jump\t// in\n    tag_184:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_183:\n        /* \"contracts/FresaCoin.sol\":3965:3984  uint256 currentTime */\n      0x00\n        /* \"contracts/FresaCoin.sol\":3987:4002  block.timestamp */\n      timestamp\n        /* \"contracts/FresaCoin.sol\":3965:4002  uint256 currentTime = block.timestamp */\n      swap1\n      pop\n        /* \"contracts/FresaCoin.sol\":4012:4028  uint256 duration */\n      0x00\n        /* \"contracts/FresaCoin.sol\":4045:4054  userStake */\n      dup3\n        /* \"contracts/FresaCoin.sol\":4045:4074  userStake.lastStakedTimestamp */\n      0x02\n      add\n      sload\n        /* \"contracts/FresaCoin.sol\":4031:4042  currentTime */\n      dup3\n        /* \"contracts/FresaCoin.sol\":4031:4074  currentTime - userStake.lastStakedTimestamp */\n      tag_186\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_186:\n        /* \"contracts/FresaCoin.sol\":4012:4074  uint256 duration = currentTime - userStake.lastStakedTimestamp */\n      swap1\n      pop\n        /* \"contracts/FresaCoin.sol\":4085:4100  uint256 penalty */\n      0x00\n        /* \"contracts/FresaCoin.sol\":4103:4104  0 */\n      0x00\n        /* \"contracts/FresaCoin.sol\":4085:4104  uint256 penalty = 0 */\n      swap1\n      pop\n        /* \"contracts/FresaCoin.sol\":4129:4145  minStakeDuration */\n      sload(0x0e)\n        /* \"contracts/FresaCoin.sol\":4118:4126  duration */\n      dup3\n        /* \"contracts/FresaCoin.sol\":4118:4145  duration < minStakeDuration */\n      lt\n        /* \"contracts/FresaCoin.sol\":4114:4290  if (duration < minStakeDuration) {... */\n      iszero\n      tag_188\n      jumpi\n        /* \"contracts/FresaCoin.sol\":4187:4190  100 */\n      0x64\n        /* \"contracts/FresaCoin.sol\":4181:4183  20 */\n      0x14\n        /* \"contracts/FresaCoin.sol\":4172:4178  amount */\n      dup7\n        /* \"contracts/FresaCoin.sol\":4172:4183  amount * 20 */\n      tag_189\n      swap2\n      swap1\n      tag_171\n      jump\t// in\n    tag_189:\n        /* \"contracts/FresaCoin.sol\":4171:4190  (amount * 20) / 100 */\n      tag_190\n      swap2\n      swap1\n      tag_173\n      jump\t// in\n    tag_190:\n        /* \"contracts/FresaCoin.sol\":4161:4190  penalty = (amount * 20) / 100 */\n      swap1\n      pop\n        /* \"contracts/FresaCoin.sol\":4219:4252  _burn(address(this), penalty / 2) */\n      tag_191\n        /* \"contracts/FresaCoin.sol\":4233:4237  this */\n      address\n        /* \"contracts/FresaCoin.sol\":4250:4251  2 */\n      0x02\n        /* \"contracts/FresaCoin.sol\":4240:4247  penalty */\n      dup4\n        /* \"contracts/FresaCoin.sol\":4240:4251  penalty / 2 */\n      tag_192\n      swap2\n      swap1\n      tag_173\n      jump\t// in\n    tag_192:\n        /* \"contracts/FresaCoin.sol\":4219:4224  _burn */\n      tag_193\n        /* \"contracts/FresaCoin.sol\":4219:4252  _burn(address(this), penalty / 2) */\n      jump\t// in\n    tag_191:\n        /* \"contracts/FresaCoin.sol\":4114:4290  if (duration < minStakeDuration) {... */\n    tag_188:\n        /* \"contracts/FresaCoin.sol\":4300:4317  uint256 netAmount */\n      0x00\n        /* \"contracts/FresaCoin.sol\":4329:4336  penalty */\n      dup2\n        /* \"contracts/FresaCoin.sol\":4320:4326  amount */\n      dup7\n        /* \"contracts/FresaCoin.sol\":4320:4336  amount - penalty */\n      tag_194\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_194:\n        /* \"contracts/FresaCoin.sol\":4300:4336  uint256 netAmount = amount - penalty */\n      swap1\n      pop\n        /* \"contracts/FresaCoin.sol\":4366:4372  amount */\n      dup6\n        /* \"contracts/FresaCoin.sol\":4346:4355  userStake */\n      dup6\n        /* \"contracts/FresaCoin.sol\":4346:4362  userStake.amount */\n      0x00\n      add\n      0x00\n        /* \"contracts/FresaCoin.sol\":4346:4372  userStake.amount -= amount */\n      dup3\n      dup3\n      sload\n      tag_195\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_195:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/FresaCoin.sol\":4409:4415  amount */\n      dup6\n        /* \"contracts/FresaCoin.sol\":4382:4393  stakingPool */\n      0x0a\n        /* \"contracts/FresaCoin.sol\":4382:4405  stakingPool.totalStaked */\n      0x02\n      add\n      0x00\n        /* \"contracts/FresaCoin.sol\":4382:4415  stakingPool.totalStaked -= amount */\n      dup3\n      dup3\n      sload\n      tag_196\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_196:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/FresaCoin.sol\":4426:4473  _transfer(address(this), msg.sender, netAmount) */\n      tag_197\n        /* \"contracts/FresaCoin.sol\":4444:4448  this */\n      address\n        /* \"contracts/FresaCoin.sol\":4451:4461  msg.sender */\n      caller\n        /* \"contracts/FresaCoin.sol\":4463:4472  netAmount */\n      dup4\n        /* \"contracts/FresaCoin.sol\":4426:4435  _transfer */\n      tag_181\n        /* \"contracts/FresaCoin.sol\":4426:4473  _transfer(address(this), msg.sender, netAmount) */\n      jump\t// in\n    tag_197:\n        /* \"contracts/FresaCoin.sol\":4499:4509  msg.sender */\n      caller\n        /* \"contracts/FresaCoin.sol\":4489:4530  Withdrawn(msg.sender, netAmount, penalty) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x92ccf450a286a957af52509bc1c9939d1a6a481783e142e41e2499f0bb66ebc6\n        /* \"contracts/FresaCoin.sol\":4511:4520  netAmount */\n      dup3\n        /* \"contracts/FresaCoin.sol\":4522:4529  penalty */\n      dup5\n        /* \"contracts/FresaCoin.sol\":4489:4530  Withdrawn(msg.sender, netAmount, penalty) */\n      mload(0x40)\n      tag_198\n      swap3\n      swap2\n      swap1\n      tag_199\n      jump\t// in\n    tag_198:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/FresaCoin.sol\":3824:4537  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/FresaCoin.sol\":3781:4537  function withdraw(uint256 amount) external {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2756:2761  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2773:2782  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/FresaCoin.sol\":5874:6174  function enterLottery(uint256 amount) external {... */\n    tag_90:\n        /* \"contracts/FresaCoin.sol\":5948:5949  0 */\n      0x00\n        /* \"contracts/FresaCoin.sol\":5939:5945  amount */\n      dup2\n        /* \"contracts/FresaCoin.sol\":5939:5949  amount > 0 */\n      gt\n        /* \"contracts/FresaCoin.sol\":5931:5983  require(amount > 0, \"Cannot enter with zero tokens\") */\n      tag_202\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_203\n      swap1\n      tag_204\n      jump\t// in\n    tag_203:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_202:\n        /* \"contracts/FresaCoin.sol\":5994:6038  _transfer(msg.sender, address(this), amount) */\n      tag_205\n        /* \"contracts/FresaCoin.sol\":6004:6014  msg.sender */\n      caller\n        /* \"contracts/FresaCoin.sol\":6024:6028  this */\n      address\n        /* \"contracts/FresaCoin.sol\":6031:6037  amount */\n      dup4\n        /* \"contracts/FresaCoin.sol\":5994:6003  _transfer */\n      tag_181\n        /* \"contracts/FresaCoin.sol\":5994:6038  _transfer(msg.sender, address(this), amount) */\n      jump\t// in\n    tag_205:\n        /* \"contracts/FresaCoin.sol\":6048:6055  lottery */\n      0x08\n        /* \"contracts/FresaCoin.sol\":6048:6063  lottery.entries */\n      0x00\n      add\n        /* \"contracts/FresaCoin.sol\":6069:6079  msg.sender */\n      caller\n        /* \"contracts/FresaCoin.sol\":6048:6080  lottery.entries.push(msg.sender) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/FresaCoin.sol\":6111:6117  amount */\n      dup1\n        /* \"contracts/FresaCoin.sol\":6090:6097  lottery */\n      0x08\n        /* \"contracts/FresaCoin.sol\":6090:6107  lottery.prizePool */\n      0x01\n      add\n      0x00\n        /* \"contracts/FresaCoin.sol\":6090:6117  lottery.prizePool += amount */\n      dup3\n      dup3\n      sload\n      tag_207\n      swap2\n      swap1\n      tag_208\n      jump\t// in\n    tag_207:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/FresaCoin.sol\":6148:6158  msg.sender */\n      caller\n        /* \"contracts/FresaCoin.sol\":6133:6167  LotteryEntered(msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc28711c8dcc0cb3d25732e13809d1d8c2640669a0a3fb4f7729810a9caaffdff\n        /* \"contracts/FresaCoin.sol\":6160:6166  amount */\n      dup3\n        /* \"contracts/FresaCoin.sol\":6133:6167  LotteryEntered(msg.sender, amount) */\n      mload(0x40)\n      tag_209\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_209:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/FresaCoin.sol\":5874:6174  function enterLottery(uint256 amount) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/FresaCoin.sol\":4643:4990  function createProposal(string memory description) external onlyOwner {... */\n    tag_94:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_211\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_212\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_211:\n        /* \"contracts/FresaCoin.sol\":4723:4738  proposalCounter */\n      0x0d\n      0x00\n        /* \"contracts/FresaCoin.sol\":4723:4740  proposalCounter++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_214\n      swap1\n      tag_215\n      jump\t// in\n    tag_214:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/FresaCoin.sol\":4779:4922  Proposal({... */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/FresaCoin.sol\":4815:4826  description */\n      dup3\n        /* \"contracts/FresaCoin.sol\":4779:4922  Proposal({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/FresaCoin.sol\":4850:4851  0 */\n      0x00\n        /* \"contracts/FresaCoin.sol\":4779:4922  Proposal({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/FresaCoin.sol\":4879:4880  0 */\n      0x00\n        /* \"contracts/FresaCoin.sol\":4779:4922  Proposal({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/FresaCoin.sol\":4906:4911  false */\n      0x00\n        /* \"contracts/FresaCoin.sol\":4779:4922  Proposal({... */\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n        /* \"contracts/FresaCoin.sol\":4750:4759  proposals */\n      0x07\n        /* \"contracts/FresaCoin.sol\":4750:4776  proposals[proposalCounter] */\n      0x00\n        /* \"contracts/FresaCoin.sol\":4760:4775  proposalCounter */\n      sload(0x0d)\n        /* \"contracts/FresaCoin.sol\":4750:4776  proposals[proposalCounter] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/FresaCoin.sol\":4750:4922  proposals[proposalCounter] = Proposal({... */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      swap1\n      dup2\n      tag_216\n      swap2\n      swap1\n      tag_217\n      jump\t// in\n    tag_216:\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"contracts/FresaCoin.sol\":4954:4969  proposalCounter */\n      sload(0x0d)\n        /* \"contracts/FresaCoin.sol\":4938:4983  ProposalCreated(proposalCounter, description) */\n      0x9c770c289ab5bf7e57cb1d23c8ceae993aea46eb64847072fd3d78ca60d3e432\n        /* \"contracts/FresaCoin.sol\":4971:4982  description */\n      dup3\n        /* \"contracts/FresaCoin.sol\":4938:4983  ProposalCreated(proposalCounter, description) */\n      mload(0x40)\n      tag_218\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_218:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/FresaCoin.sol\":4643:4990  function createProposal(string memory description) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/FresaCoin.sol\":6226:6767  function drawLotteryWinner() external onlyOwner {... */\n    tag_96:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_220\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_212\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_220:\n        /* \"contracts/FresaCoin.sol\":6317:6318  0 */\n      0x00\n        /* \"contracts/FresaCoin.sol\":6292:6299  lottery */\n      0x08\n        /* \"contracts/FresaCoin.sol\":6292:6307  lottery.entries */\n      0x00\n      add\n        /* \"contracts/FresaCoin.sol\":6292:6314  lottery.entries.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/FresaCoin.sol\":6292:6318  lottery.entries.length > 0 */\n      gt\n        /* \"contracts/FresaCoin.sol\":6284:6353  require(lottery.entries.length > 0, \"No participants in the lottery\") */\n      tag_222\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_223\n      swap1\n      tag_224\n      jump\t// in\n    tag_223:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_222:\n        /* \"contracts/FresaCoin.sol\":6364:6383  uint256 randomIndex */\n      0x00\n        /* \"contracts/FresaCoin.sol\":6482:6489  lottery */\n      0x08\n        /* \"contracts/FresaCoin.sol\":6482:6497  lottery.entries */\n      0x00\n      add\n        /* \"contracts/FresaCoin.sol\":6482:6504  lottery.entries.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/FresaCoin.sol\":6434:6449  block.timestamp */\n      timestamp\n        /* \"contracts/FresaCoin.sol\":6451:6467  block.difficulty */\n      prevrandao\n        /* \"contracts/FresaCoin.sol\":6417:6468  abi.encodePacked(block.timestamp, block.difficulty) */\n      add(0x20, mload(0x40))\n      tag_225\n      swap3\n      swap2\n      swap1\n      tag_226\n      jump\t// in\n    tag_225:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/FresaCoin.sol\":6407:6469  keccak256(abi.encodePacked(block.timestamp, block.difficulty)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/FresaCoin.sol\":6386:6479  uint256(... */\n      0x00\n      shr\n        /* \"contracts/FresaCoin.sol\":6386:6504  uint256(... */\n      tag_227\n      swap2\n      swap1\n      tag_228\n      jump\t// in\n    tag_227:\n        /* \"contracts/FresaCoin.sol\":6364:6504  uint256 randomIndex = uint256(... */\n      swap1\n      pop\n        /* \"contracts/FresaCoin.sol\":6514:6528  address winner */\n      0x00\n        /* \"contracts/FresaCoin.sol\":6531:6538  lottery */\n      0x08\n        /* \"contracts/FresaCoin.sol\":6531:6546  lottery.entries */\n      0x00\n      add\n        /* \"contracts/FresaCoin.sol\":6547:6558  randomIndex */\n      dup3\n        /* \"contracts/FresaCoin.sol\":6531:6559  lottery.entries[randomIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_229\n      jumpi\n      tag_230\n      tag_231\n      jump\t// in\n    tag_230:\n    tag_229:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/FresaCoin.sol\":6514:6559  address winner = lottery.entries[randomIndex] */\n      swap1\n      pop\n        /* \"contracts/FresaCoin.sol\":6570:6583  uint256 prize */\n      0x00\n        /* \"contracts/FresaCoin.sol\":6586:6593  lottery */\n      0x08\n        /* \"contracts/FresaCoin.sol\":6586:6603  lottery.prizePool */\n      0x01\n      add\n      sload\n        /* \"contracts/FresaCoin.sol\":6570:6603  uint256 prize = lottery.prizePool */\n      swap1\n      pop\n        /* \"contracts/FresaCoin.sol\":6633:6634  0 */\n      0x00\n        /* \"contracts/FresaCoin.sol\":6613:6620  lottery */\n      0x08\n        /* \"contracts/FresaCoin.sol\":6613:6630  lottery.prizePool */\n      0x01\n      add\n        /* \"contracts/FresaCoin.sol\":6613:6634  lottery.prizePool = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/FresaCoin.sol\":6651:6658  lottery */\n      0x08\n        /* \"contracts/FresaCoin.sol\":6651:6666  lottery.entries */\n      0x00\n      add\n      0x00\n        /* \"contracts/FresaCoin.sol\":6644:6666  delete lottery.entries */\n      tag_233\n      swap2\n      swap1\n      tag_234\n      jump\t// in\n    tag_233:\n        /* \"contracts/FresaCoin.sol\":6677:6716  _transfer(address(this), winner, prize) */\n      tag_235\n        /* \"contracts/FresaCoin.sol\":6695:6699  this */\n      address\n        /* \"contracts/FresaCoin.sol\":6702:6708  winner */\n      dup4\n        /* \"contracts/FresaCoin.sol\":6710:6715  prize */\n      dup4\n        /* \"contracts/FresaCoin.sol\":6677:6686  _transfer */\n      tag_181\n        /* \"contracts/FresaCoin.sol\":6677:6716  _transfer(address(this), winner, prize) */\n      jump\t// in\n    tag_235:\n        /* \"contracts/FresaCoin.sol\":6746:6752  winner */\n      dup2\n        /* \"contracts/FresaCoin.sol\":6732:6760  LotteryWinner(winner, prize) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x275eaacf9e506f9c68b251c2f97cf723c4fb9a3b94e42a1dfb581543c135f0c0\n        /* \"contracts/FresaCoin.sol\":6754:6759  prize */\n      dup3\n        /* \"contracts/FresaCoin.sol\":6732:6760  LotteryWinner(winner, prize) */\n      mload(0x40)\n      tag_236\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_236:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/FresaCoin.sol\":6274:6767  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/FresaCoin.sol\":6226:6767  function drawLotteryWinner() external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/FresaCoin.sol\":1426:1466  uint256 public minStakeDuration = 7 days */\n    tag_98:\n      sload(0x0e)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_102:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3104  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3105:3112  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3088:3113  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_105:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_239\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_212\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_239:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_241\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_242\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_241:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/FresaCoin.sol\":2704:3668  function stake(uint256 amount, address referrer) external {... */\n    tag_109:\n        /* \"contracts/FresaCoin.sol\":2789:2790  0 */\n      0x00\n        /* \"contracts/FresaCoin.sol\":2780:2786  amount */\n      dup3\n        /* \"contracts/FresaCoin.sol\":2780:2790  amount > 0 */\n      gt\n        /* \"contracts/FresaCoin.sol\":2772:2819  require(amount > 0, \"Cannot stake zero tokens\") */\n      tag_244\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_245\n      swap1\n      tag_246\n      jump\t// in\n    tag_245:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_244:\n        /* \"contracts/FresaCoin.sol\":2829:2873  _transfer(msg.sender, address(this), amount) */\n      tag_247\n        /* \"contracts/FresaCoin.sol\":2839:2849  msg.sender */\n      caller\n        /* \"contracts/FresaCoin.sol\":2859:2863  this */\n      address\n        /* \"contracts/FresaCoin.sol\":2866:2872  amount */\n      dup5\n        /* \"contracts/FresaCoin.sol\":2829:2838  _transfer */\n      tag_181\n        /* \"contracts/FresaCoin.sol\":2829:2873  _transfer(msg.sender, address(this), amount) */\n      jump\t// in\n    tag_247:\n        /* \"contracts/FresaCoin.sol\":2884:2907  Stake storage userStake */\n      0x00\n        /* \"contracts/FresaCoin.sol\":2910:2916  stakes */\n      0x06\n        /* \"contracts/FresaCoin.sol\":2910:2928  stakes[msg.sender] */\n      0x00\n        /* \"contracts/FresaCoin.sol\":2917:2927  msg.sender */\n      caller\n        /* \"contracts/FresaCoin.sol\":2910:2928  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/FresaCoin.sol\":2884:2928  Stake storage userStake = stakes[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/FresaCoin.sol\":2938:2957  uint256 currentTime */\n      0x00\n        /* \"contracts/FresaCoin.sol\":2960:2975  block.timestamp */\n      timestamp\n        /* \"contracts/FresaCoin.sol\":2938:2975  uint256 currentTime = block.timestamp */\n      swap1\n      pop\n        /* \"contracts/FresaCoin.sol\":3057:3058  0 */\n      0x00\n        /* \"contracts/FresaCoin.sol\":3038:3047  userStake */\n      dup3\n        /* \"contracts/FresaCoin.sol\":3038:3054  userStake.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/FresaCoin.sol\":3038:3058  userStake.amount > 0 */\n      gt\n        /* \"contracts/FresaCoin.sol\":3034:3235  if (userStake.amount > 0) {... */\n      iszero\n      tag_248\n      jumpi\n        /* \"contracts/FresaCoin.sol\":3074:3090  uint256 duration */\n      0x00\n        /* \"contracts/FresaCoin.sol\":3107:3116  userStake */\n      dup3\n        /* \"contracts/FresaCoin.sol\":3107:3136  userStake.lastStakedTimestamp */\n      0x02\n      add\n      sload\n        /* \"contracts/FresaCoin.sol\":3093:3104  currentTime */\n      dup3\n        /* \"contracts/FresaCoin.sol\":3093:3136  currentTime - userStake.lastStakedTimestamp */\n      tag_249\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_249:\n        /* \"contracts/FresaCoin.sol\":3074:3136  uint256 duration = currentTime - userStake.lastStakedTimestamp */\n      swap1\n      pop\n        /* \"contracts/FresaCoin.sol\":3181:3224  calculateReward(userStake.amount, duration) */\n      tag_250\n        /* \"contracts/FresaCoin.sol\":3197:3206  userStake */\n      dup4\n        /* \"contracts/FresaCoin.sol\":3197:3213  userStake.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/FresaCoin.sol\":3215:3223  duration */\n      dup3\n        /* \"contracts/FresaCoin.sol\":3181:3196  calculateReward */\n      tag_65\n        /* \"contracts/FresaCoin.sol\":3181:3224  calculateReward(userStake.amount, duration) */\n      jump\t// in\n    tag_250:\n        /* \"contracts/FresaCoin.sol\":3150:3159  userStake */\n      dup4\n        /* \"contracts/FresaCoin.sol\":3150:3177  userStake.rewardAccumulated */\n      0x01\n      add\n      0x00\n        /* \"contracts/FresaCoin.sol\":3150:3224  userStake.rewardAccumulated += calculateReward(userStake.amount, duration) */\n      dup3\n      dup3\n      sload\n      tag_251\n      swap2\n      swap1\n      tag_208\n      jump\t// in\n    tag_251:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/FresaCoin.sol\":3060:3235  {... */\n      pop\n        /* \"contracts/FresaCoin.sol\":3034:3235  if (userStake.amount > 0) {... */\n    tag_248:\n        /* \"contracts/FresaCoin.sol\":3265:3271  amount */\n      dup4\n        /* \"contracts/FresaCoin.sol\":3245:3254  userStake */\n      dup3\n        /* \"contracts/FresaCoin.sol\":3245:3261  userStake.amount */\n      0x00\n      add\n      0x00\n        /* \"contracts/FresaCoin.sol\":3245:3271  userStake.amount += amount */\n      dup3\n      dup3\n      sload\n      tag_252\n      swap2\n      swap1\n      tag_208\n      jump\t// in\n    tag_252:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/FresaCoin.sol\":3313:3324  currentTime */\n      dup1\n        /* \"contracts/FresaCoin.sol\":3281:3290  userStake */\n      dup3\n        /* \"contracts/FresaCoin.sol\":3281:3310  userStake.lastStakedTimestamp */\n      0x02\n      add\n        /* \"contracts/FresaCoin.sol\":3281:3324  userStake.lastStakedTimestamp = currentTime */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/FresaCoin.sol\":3385:3386  0 */\n      0x00\n        /* \"contracts/FresaCoin.sol\":3365:3387  referrer != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/FresaCoin.sol\":3365:3373  referrer */\n      dup4\n        /* \"contracts/FresaCoin.sol\":3365:3387  referrer != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/FresaCoin.sol\":3365:3413  referrer != address(0) && referrer != msg.sender */\n      dup1\n      iszero\n      tag_253\n      jumpi\n      pop\n        /* \"contracts/FresaCoin.sol\":3403:3413  msg.sender */\n      caller\n        /* \"contracts/FresaCoin.sol\":3391:3413  referrer != msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/FresaCoin.sol\":3391:3399  referrer */\n      dup4\n        /* \"contracts/FresaCoin.sol\":3391:3413  referrer != msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/FresaCoin.sol\":3365:3413  referrer != address(0) && referrer != msg.sender */\n    tag_253:\n        /* \"contracts/FresaCoin.sol\":3361:3566  if (referrer != address(0) && referrer != msg.sender) {... */\n      iszero\n      tag_254\n      jumpi\n        /* \"contracts/FresaCoin.sol\":3429:3442  uint256 bonus */\n      0x00\n        /* \"contracts/FresaCoin.sol\":3473:3476  100 */\n      0x64\n        /* \"contracts/FresaCoin.sol\":1541:1542  5 */\n      0x05\n        /* \"contracts/FresaCoin.sol\":3446:3452  amount */\n      dup7\n        /* \"contracts/FresaCoin.sol\":3446:3469  amount * REFERRAL_BONUS */\n      tag_255\n      swap2\n      swap1\n      tag_171\n      jump\t// in\n    tag_255:\n        /* \"contracts/FresaCoin.sol\":3445:3476  (amount * REFERRAL_BONUS) / 100 */\n      tag_256\n      swap2\n      swap1\n      tag_173\n      jump\t// in\n    tag_256:\n        /* \"contracts/FresaCoin.sol\":3429:3476  uint256 bonus = (amount * REFERRAL_BONUS) / 100 */\n      swap1\n      pop\n        /* \"contracts/FresaCoin.sol\":3490:3512  _mint(referrer, bonus) */\n      tag_257\n        /* \"contracts/FresaCoin.sol\":3496:3504  referrer */\n      dup5\n        /* \"contracts/FresaCoin.sol\":3506:3511  bonus */\n      dup3\n        /* \"contracts/FresaCoin.sol\":3490:3495  _mint */\n      tag_258\n        /* \"contracts/FresaCoin.sol\":3490:3512  _mint(referrer, bonus) */\n      jump\t// in\n    tag_257:\n        /* \"contracts/FresaCoin.sol\":3547:3555  referrer */\n      dup4\n        /* \"contracts/FresaCoin.sol\":3526:3535  userStake */\n      dup4\n        /* \"contracts/FresaCoin.sol\":3526:3544  userStake.referrer */\n      0x03\n      add\n      0x00\n        /* \"contracts/FresaCoin.sol\":3526:3555  userStake.referrer = referrer */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/FresaCoin.sol\":3415:3566  {... */\n      pop\n        /* \"contracts/FresaCoin.sol\":3361:3566  if (referrer != address(0) && referrer != msg.sender) {... */\n    tag_254:\n        /* \"contracts/FresaCoin.sol\":3603:3609  amount */\n      dup4\n        /* \"contracts/FresaCoin.sol\":3576:3587  stakingPool */\n      0x0a\n        /* \"contracts/FresaCoin.sol\":3576:3599  stakingPool.totalStaked */\n      0x02\n      add\n      0x00\n        /* \"contracts/FresaCoin.sol\":3576:3609  stakingPool.totalStaked += amount */\n      dup3\n      dup3\n      sload\n      tag_259\n      swap2\n      swap1\n      tag_208\n      jump\t// in\n    tag_259:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/FresaCoin.sol\":3652:3660  referrer */\n      dup3\n        /* \"contracts/FresaCoin.sol\":3625:3661  Staked(msg.sender, amount, referrer) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/FresaCoin.sol\":3632:3642  msg.sender */\n      caller\n        /* \"contracts/FresaCoin.sol\":3625:3661  Staked(msg.sender, amount, referrer) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9f9e4044c5742cca66ca090b21552bac14645e68bad7a92364a9d9ff18111a1c\n        /* \"contracts/FresaCoin.sol\":3644:3650  amount */\n      dup7\n        /* \"contracts/FresaCoin.sol\":3625:3661  Staked(msg.sender, amount, referrer) */\n      mload(0x40)\n      tag_260\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_260:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/FresaCoin.sol\":2762:3668  {... */\n      pop\n      pop\n        /* \"contracts/FresaCoin.sol\":2704:3668  function stake(uint256 amount, address referrer) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_111:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_115:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2028:2041  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2060:2067  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2053:2067  return _symbol */\n      dup1\n      sload\n      tag_263\n      swap1\n      tag_147\n      jump\t// in\n    tag_263:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_264\n      swap1\n      tag_147\n      jump\t// in\n    tag_264:\n      dup1\n      iszero\n      tag_265\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_266\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_265)\n    tag_266:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_267:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_267\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_265:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_119:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3388  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3413  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      tag_269\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3426  _msgSender */\n      tag_160\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_269:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3428  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      tag_270\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3448:3453  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3457  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3459:3464  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3447  _transfer */\n      tag_181\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      jump\t// in\n    tag_270:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3482:3486  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3475:3486  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/FresaCoin.sol\":6851:6960  function getLotteryEntries() external view returns (address[] memory) {... */\n    tag_122:\n        /* \"contracts/FresaCoin.sol\":6903:6919  address[] memory */\n      0x60\n        /* \"contracts/FresaCoin.sol\":6938:6945  lottery */\n      0x08\n        /* \"contracts/FresaCoin.sol\":6938:6953  lottery.entries */\n      0x00\n      add\n        /* \"contracts/FresaCoin.sol\":6931:6953  return lottery.entries */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_272\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_273:\n      dup2\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_273\n      jumpi\n    tag_272:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/FresaCoin.sol\":6851:6960  function getLotteryEntries() external view returns (address[] memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/FresaCoin.sol\":1259:1281  Lottery public lottery */\n    tag_126:\n      0x08\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/FresaCoin.sol\":5150:5752  function vote(uint256 proposalId, bool voteFor) external {... */\n    tag_131:\n        /* \"contracts/FresaCoin.sol\":5217:5242  Proposal storage proposal */\n      0x00\n        /* \"contracts/FresaCoin.sol\":5245:5254  proposals */\n      0x07\n        /* \"contracts/FresaCoin.sol\":5245:5266  proposals[proposalId] */\n      0x00\n        /* \"contracts/FresaCoin.sol\":5255:5265  proposalId */\n      dup5\n        /* \"contracts/FresaCoin.sol\":5245:5266  proposals[proposalId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/FresaCoin.sol\":5217:5266  Proposal storage proposal = proposals[proposalId] */\n      swap1\n      pop\n        /* \"contracts/FresaCoin.sol\":5321:5322  0 */\n      0x00\n        /* \"contracts/FresaCoin.sol\":5290:5298  proposal */\n      dup2\n        /* \"contracts/FresaCoin.sol\":5290:5310  proposal.description */\n      0x00\n      add\n        /* \"contracts/FresaCoin.sol\":5284:5318  bytes(proposal.description).length */\n      dup1\n      sload\n      tag_275\n      swap1\n      tag_147\n      jump\t// in\n    tag_275:\n      swap1\n      pop\n        /* \"contracts/FresaCoin.sol\":5284:5322  bytes(proposal.description).length > 0 */\n      gt\n        /* \"contracts/FresaCoin.sol\":5276:5346  require(bytes(proposal.description).length > 0, \"Invalid proposal ID\") */\n      tag_276\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_277\n      swap1\n      tag_278\n      jump\t// in\n    tag_277:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_276:\n        /* \"contracts/FresaCoin.sol\":5357:5377  uint256 votingWeight */\n      0x00\n        /* \"contracts/FresaCoin.sol\":5380:5386  stakes */\n      0x06\n        /* \"contracts/FresaCoin.sol\":5380:5398  stakes[msg.sender] */\n      0x00\n        /* \"contracts/FresaCoin.sol\":5387:5397  msg.sender */\n      caller\n        /* \"contracts/FresaCoin.sol\":5380:5398  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/FresaCoin.sol\":5380:5405  stakes[msg.sender].amount */\n      0x00\n      add\n      sload\n        /* \"contracts/FresaCoin.sol\":5357:5405  uint256 votingWeight = stakes[msg.sender].amount */\n      swap1\n      pop\n        /* \"contracts/FresaCoin.sol\":5438:5439  0 */\n      0x00\n        /* \"contracts/FresaCoin.sol\":5423:5435  votingWeight */\n      dup2\n        /* \"contracts/FresaCoin.sol\":5423:5439  votingWeight > 0 */\n      gt\n        /* \"contracts/FresaCoin.sol\":5415:5468  require(votingWeight > 0, \"No staked tokens to vote\") */\n      tag_279\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_280\n      swap1\n      tag_281\n      jump\t// in\n    tag_280:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_279:\n        /* \"contracts/FresaCoin.sol\":5483:5490  voteFor */\n      dup3\n        /* \"contracts/FresaCoin.sol\":5479:5618  if (voteFor) {... */\n      iszero\n      tag_282\n      jumpi\n        /* \"contracts/FresaCoin.sol\":5527:5539  votingWeight */\n      dup1\n        /* \"contracts/FresaCoin.sol\":5506:5514  proposal */\n      dup3\n        /* \"contracts/FresaCoin.sol\":5506:5523  proposal.votesFor */\n      0x01\n      add\n      0x00\n        /* \"contracts/FresaCoin.sol\":5506:5539  proposal.votesFor += votingWeight */\n      dup3\n      dup3\n      sload\n      tag_283\n      swap2\n      swap1\n      tag_208\n      jump\t// in\n    tag_283:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/FresaCoin.sol\":5479:5618  if (voteFor) {... */\n      jump(tag_284)\n    tag_282:\n        /* \"contracts/FresaCoin.sol\":5595:5607  votingWeight */\n      dup1\n        /* \"contracts/FresaCoin.sol\":5570:5578  proposal */\n      dup3\n        /* \"contracts/FresaCoin.sol\":5570:5591  proposal.votesAgainst */\n      0x02\n      add\n      0x00\n        /* \"contracts/FresaCoin.sol\":5570:5607  proposal.votesAgainst += votingWeight */\n      dup3\n      dup3\n      sload\n      tag_285\n      swap2\n      swap1\n      tag_208\n      jump\t// in\n    tag_285:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/FresaCoin.sol\":5479:5618  if (voteFor) {... */\n    tag_284:\n        /* \"contracts/FresaCoin.sol\":5670:5678  proposal */\n      dup2\n        /* \"contracts/FresaCoin.sol\":5670:5691  proposal.votesAgainst */\n      0x02\n      add\n      sload\n        /* \"contracts/FresaCoin.sol\":5650:5658  proposal */\n      dup3\n        /* \"contracts/FresaCoin.sol\":5650:5667  proposal.votesFor */\n      0x01\n      add\n      sload\n        /* \"contracts/FresaCoin.sol\":5650:5691  proposal.votesFor > proposal.votesAgainst */\n      gt\n        /* \"contracts/FresaCoin.sol\":5628:5636  proposal */\n      dup3\n        /* \"contracts/FresaCoin.sol\":5628:5647  proposal.isApproved */\n      0x03\n      add\n      0x00\n        /* \"contracts/FresaCoin.sol\":5628:5691  proposal.isApproved = proposal.votesFor > proposal.votesAgainst */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/FresaCoin.sol\":5725:5735  msg.sender */\n      caller\n        /* \"contracts/FresaCoin.sol\":5707:5745  Voted(proposalId, msg.sender, voteFor) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/FresaCoin.sol\":5713:5723  proposalId */\n      dup5\n        /* \"contracts/FresaCoin.sol\":5707:5745  Voted(proposalId, msg.sender, voteFor) */\n      0xf2913dbe661ee2acc4a046d8fbcdc792373bda34c41c6086484b5345e5785e5f\n        /* \"contracts/FresaCoin.sol\":5737:5744  voteFor */\n      dup6\n        /* \"contracts/FresaCoin.sol\":5707:5745  Voted(proposalId, msg.sender, voteFor) */\n      mload(0x40)\n      tag_286\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_286:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/FresaCoin.sol\":5207:5752  {... */\n      pop\n      pop\n        /* \"contracts/FresaCoin.sol\":5150:5752  function vote(uint256 proposalId, bool voteFor) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/FresaCoin.sol\":7051:7155  function getLotteryPrizePool() external view returns (uint256) {... */\n    tag_133:\n        /* \"contracts/FresaCoin.sol\":7105:7112  uint256 */\n      0x00\n        /* \"contracts/FresaCoin.sol\":7131:7138  lottery */\n      0x08\n        /* \"contracts/FresaCoin.sol\":7131:7148  lottery.prizePool */\n      0x01\n      add\n      sload\n        /* \"contracts/FresaCoin.sol\":7124:7148  return lottery.prizePool */\n      swap1\n      pop\n        /* \"contracts/FresaCoin.sol\":7051:7155  function getLotteryPrizePool() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_138:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3638  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3669:3674  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3676:3683  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3684  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/FresaCoin.sol\":1500:1542  uint256 public constant REFERRAL_BONUS = 5 */\n    tag_141:\n        /* \"contracts/FresaCoin.sol\":1541:1542  5 */\n      0x05\n        /* \"contracts/FresaCoin.sol\":1500:1542  uint256 public constant REFERRAL_BONUS = 5 */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_145:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_290\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_212\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_290:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_292\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_293\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_293:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_292:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_294\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_242\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_294:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_160:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_162:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      tag_297\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8819:8824  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8826:8833  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8835:8840  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8842:8846  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8818  _approve */\n      tag_298\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_297:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10892  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_179:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10538  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      tag_300\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10551:10556  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10558:10565  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10550  allowance */\n      tag_138\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      jump\t// in\n    tag_300:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10566  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10600:10617  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10596  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10617  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10886  if (currentAllowance != type(uint256).max) {... */\n      tag_301\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10656:10661  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10637:10653  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10637:10661  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10633:10763  if (currentAllowance < value) {... */\n      iszero\n      tag_302\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10715:10722  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10724:10740  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10742:10747  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10688:10748  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_303\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_304\n      jump\t// in\n    tag_303:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10633:10763  if (currentAllowance < value) {... */\n    tag_302:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10861  _approve(owner, spender, currentAllowance - value, false) */\n      tag_305\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10813:10818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10820:10827  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10853  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10829:10845  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10829:10853  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10855:10860  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10812  _approve */\n      tag_298\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10861  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_305:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10886  if (currentAllowance != type(uint256).max) {... */\n    tag_301:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10892  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10892  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_181:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5492:5493  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5480  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n      tag_307\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5544:5545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_308\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_308:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n    tag_307:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5585:5586  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5573  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n      tag_309\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5639:5640  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_310\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_310:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n    tag_309:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      tag_311\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5670:5674  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5676:5678  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5680:5685  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5669  _update */\n      tag_312\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      jump\t// in\n    tag_311:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7984:8190  function _burn(address account, uint256 value) internal {... */\n    tag_193:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8073:8074  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8075  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8061  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8075  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8050:8139  if (account == address(0)) {... */\n      tag_314\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8125:8126  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8098:8128  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_315\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_315:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8050:8139  if (account == address(0)) {... */\n    tag_314:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8183  _update(account, address(0), value) */\n      tag_316\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8156:8163  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8173:8174  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8177:8182  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8155  _update */\n      tag_312\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8183  _update(account, address(0), value) */\n      jump\t// in\n    tag_316:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7984:8190  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_212:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_318\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_160\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_318:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_319\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_111\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_319:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_320\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_321\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_160\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_321:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_322\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_322:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_320:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_242:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n    tag_258:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7547:7548  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n      tag_325\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_326\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_326:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n    tag_325:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      tag_327\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n      tag_312\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      jump\t// in\n    tag_327:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_298:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9830:9831  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n      tag_329\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9884:9885  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_330\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_330:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n    tag_329:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9930:9931  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9918  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n      tag_331\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9983:9984  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_332\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_332:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n    tag_331:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10041  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10017  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10018:10023  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10025:10032  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10041  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10055:10064  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n      iszero\n      tag_333\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10101:10108  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10094:10099  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10115  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_334\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_334:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n    tag_333:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_312:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_336\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_337\n      swap2\n      swap1\n      tag_208\n      jump\t// in\n    tag_337:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      jump(tag_338)\n    tag_336:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n      iszero\n      tag_339\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_340\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_304\n      jump\t// in\n    tag_340:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n    tag_339:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n    tag_338:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      tag_341\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      jump(tag_342)\n    tag_341:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n    tag_342:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      mload(0x40)\n      tag_343\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_343:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_234:\n      pop\n      dup1\n      sload\n      0x00\n      dup3\n      sstore\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      dup2\n      add\n      swap1\n      tag_345\n      swap2\n      swap1\n      tag_346\n      jump\t// in\n    tag_345:\n      pop\n      jump\t// out\n    tag_346:\n    tag_347:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_348\n      jumpi\n      0x00\n      dup2\n      0x00\n      swap1\n      sstore\n      pop\n      0x01\n      add\n      jump(tag_347)\n    tag_348:\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_349:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_350:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_351:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      0x00\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_352:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_353:\n        /* \"#utility.yul\":490:514   */\n      tag_426\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_352\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_427\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      0x00\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_427:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_354:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_429\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_353\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_40:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_431\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_432\n      tag_350\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":766:885   */\n    tag_431:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_433\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_354\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1124   */\n    tag_355:\n        /* \"#utility.yul\":1077:1083   */\n      0x00\n        /* \"#utility.yul\":1111:1116   */\n      dup2\n        /* \"#utility.yul\":1105:1117   */\n      mload\n        /* \"#utility.yul\":1095:1117   */\n      swap1\n      pop\n        /* \"#utility.yul\":1025:1124   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1130:1299   */\n    tag_356:\n        /* \"#utility.yul\":1214:1225   */\n      0x00\n        /* \"#utility.yul\":1248:1254   */\n      dup3\n        /* \"#utility.yul\":1243:1246   */\n      dup3\n        /* \"#utility.yul\":1236:1255   */\n      mstore\n        /* \"#utility.yul\":1288:1292   */\n      0x20\n        /* \"#utility.yul\":1283:1286   */\n      dup3\n        /* \"#utility.yul\":1279:1293   */\n      add\n        /* \"#utility.yul\":1264:1293   */\n      swap1\n      pop\n        /* \"#utility.yul\":1130:1299   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1305:1444   */\n    tag_357:\n        /* \"#utility.yul\":1394:1400   */\n      dup3\n        /* \"#utility.yul\":1389:1392   */\n      dup2\n        /* \"#utility.yul\":1384:1387   */\n      dup4\n        /* \"#utility.yul\":1378:1401   */\n      mcopy\n        /* \"#utility.yul\":1435:1436   */\n      0x00\n        /* \"#utility.yul\":1426:1432   */\n      dup4\n        /* \"#utility.yul\":1421:1424   */\n      dup4\n        /* \"#utility.yul\":1417:1433   */\n      add\n        /* \"#utility.yul\":1410:1437   */\n      mstore\n        /* \"#utility.yul\":1305:1444   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1450:1552   */\n    tag_358:\n        /* \"#utility.yul\":1491:1497   */\n      0x00\n        /* \"#utility.yul\":1542:1544   */\n      0x1f\n        /* \"#utility.yul\":1538:1545   */\n      not\n        /* \"#utility.yul\":1533:1535   */\n      0x1f\n        /* \"#utility.yul\":1526:1531   */\n      dup4\n        /* \"#utility.yul\":1522:1536   */\n      add\n        /* \"#utility.yul\":1518:1546   */\n      and\n        /* \"#utility.yul\":1508:1546   */\n      swap1\n      pop\n        /* \"#utility.yul\":1450:1552   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1558:1935   */\n    tag_359:\n        /* \"#utility.yul\":1646:1649   */\n      0x00\n        /* \"#utility.yul\":1674:1713   */\n      tag_439\n        /* \"#utility.yul\":1707:1712   */\n      dup3\n        /* \"#utility.yul\":1674:1713   */\n      tag_355\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":1729:1800   */\n      tag_440\n        /* \"#utility.yul\":1793:1799   */\n      dup2\n        /* \"#utility.yul\":1788:1791   */\n      dup6\n        /* \"#utility.yul\":1729:1800   */\n      tag_356\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":1722:1800   */\n      swap4\n      pop\n        /* \"#utility.yul\":1809:1874   */\n      tag_441\n        /* \"#utility.yul\":1867:1873   */\n      dup2\n        /* \"#utility.yul\":1862:1865   */\n      dup6\n        /* \"#utility.yul\":1855:1859   */\n      0x20\n        /* \"#utility.yul\":1848:1853   */\n      dup7\n        /* \"#utility.yul\":1844:1860   */\n      add\n        /* \"#utility.yul\":1809:1874   */\n      tag_357\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":1899:1928   */\n      tag_442\n        /* \"#utility.yul\":1921:1927   */\n      dup2\n        /* \"#utility.yul\":1899:1928   */\n      tag_358\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":1894:1897   */\n      dup5\n        /* \"#utility.yul\":1890:1929   */\n      add\n        /* \"#utility.yul\":1883:1929   */\n      swap2\n      pop\n        /* \"#utility.yul\":1650:1935   */\n      pop\n        /* \"#utility.yul\":1558:1935   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1941:2059   */\n    tag_360:\n        /* \"#utility.yul\":2028:2052   */\n      tag_444\n        /* \"#utility.yul\":2046:2051   */\n      dup2\n        /* \"#utility.yul\":2028:2052   */\n      tag_352\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":2023:2026   */\n      dup3\n        /* \"#utility.yul\":2016:2053   */\n      mstore\n        /* \"#utility.yul\":1941:2059   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2065:2155   */\n    tag_361:\n        /* \"#utility.yul\":2099:2106   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2135:2148   */\n      iszero\n        /* \"#utility.yul\":2128:2149   */\n      iszero\n        /* \"#utility.yul\":2117:2149   */\n      swap1\n      pop\n        /* \"#utility.yul\":2065:2155   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2161:2270   */\n    tag_362:\n        /* \"#utility.yul\":2242:2263   */\n      tag_447\n        /* \"#utility.yul\":2257:2262   */\n      dup2\n        /* \"#utility.yul\":2242:2263   */\n      tag_361\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":2237:2240   */\n      dup3\n        /* \"#utility.yul\":2230:2264   */\n      mstore\n        /* \"#utility.yul\":2161:2270   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2276:2908   */\n    tag_43:\n        /* \"#utility.yul\":2467:2471   */\n      0x00\n        /* \"#utility.yul\":2505:2508   */\n      0x80\n        /* \"#utility.yul\":2494:2503   */\n      dup3\n        /* \"#utility.yul\":2490:2509   */\n      add\n        /* \"#utility.yul\":2482:2509   */\n      swap1\n      pop\n        /* \"#utility.yul\":2555:2564   */\n      dup2\n        /* \"#utility.yul\":2549:2553   */\n      dup2\n        /* \"#utility.yul\":2545:2565   */\n      sub\n        /* \"#utility.yul\":2541:2542   */\n      0x00\n        /* \"#utility.yul\":2530:2539   */\n      dup4\n        /* \"#utility.yul\":2526:2543   */\n      add\n        /* \"#utility.yul\":2519:2566   */\n      mstore\n        /* \"#utility.yul\":2583:2661   */\n      tag_449\n        /* \"#utility.yul\":2656:2660   */\n      dup2\n        /* \"#utility.yul\":2647:2653   */\n      dup8\n        /* \"#utility.yul\":2583:2661   */\n      tag_359\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":2575:2661   */\n      swap1\n      pop\n        /* \"#utility.yul\":2671:2743   */\n      tag_450\n        /* \"#utility.yul\":2739:2741   */\n      0x20\n        /* \"#utility.yul\":2728:2737   */\n      dup4\n        /* \"#utility.yul\":2724:2742   */\n      add\n        /* \"#utility.yul\":2715:2721   */\n      dup7\n        /* \"#utility.yul\":2671:2743   */\n      tag_360\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":2753:2825   */\n      tag_451\n        /* \"#utility.yul\":2821:2823   */\n      0x40\n        /* \"#utility.yul\":2810:2819   */\n      dup4\n        /* \"#utility.yul\":2806:2824   */\n      add\n        /* \"#utility.yul\":2797:2803   */\n      dup6\n        /* \"#utility.yul\":2753:2825   */\n      tag_360\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":2835:2901   */\n      tag_452\n        /* \"#utility.yul\":2897:2899   */\n      0x60\n        /* \"#utility.yul\":2886:2895   */\n      dup4\n        /* \"#utility.yul\":2882:2900   */\n      add\n        /* \"#utility.yul\":2873:2879   */\n      dup5\n        /* \"#utility.yul\":2835:2901   */\n      tag_362\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":2276:2908   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2914:3227   */\n    tag_47:\n        /* \"#utility.yul\":3027:3031   */\n      0x00\n        /* \"#utility.yul\":3065:3067   */\n      0x20\n        /* \"#utility.yul\":3054:3063   */\n      dup3\n        /* \"#utility.yul\":3050:3068   */\n      add\n        /* \"#utility.yul\":3042:3068   */\n      swap1\n      pop\n        /* \"#utility.yul\":3114:3123   */\n      dup2\n        /* \"#utility.yul\":3108:3112   */\n      dup2\n        /* \"#utility.yul\":3104:3124   */\n      sub\n        /* \"#utility.yul\":3100:3101   */\n      0x00\n        /* \"#utility.yul\":3089:3098   */\n      dup4\n        /* \"#utility.yul\":3085:3102   */\n      add\n        /* \"#utility.yul\":3078:3125   */\n      mstore\n        /* \"#utility.yul\":3142:3220   */\n      tag_454\n        /* \"#utility.yul\":3215:3219   */\n      dup2\n        /* \"#utility.yul\":3206:3212   */\n      dup5\n        /* \"#utility.yul\":3142:3220   */\n      tag_359\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":3134:3220   */\n      swap1\n      pop\n        /* \"#utility.yul\":2914:3227   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3233:3359   */\n    tag_363:\n        /* \"#utility.yul\":3270:3277   */\n      0x00\n        /* \"#utility.yul\":3310:3352   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3303:3308   */\n      dup3\n        /* \"#utility.yul\":3299:3353   */\n      and\n        /* \"#utility.yul\":3288:3353   */\n      swap1\n      pop\n        /* \"#utility.yul\":3233:3359   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3365:3461   */\n    tag_364:\n        /* \"#utility.yul\":3402:3409   */\n      0x00\n        /* \"#utility.yul\":3431:3455   */\n      tag_457\n        /* \"#utility.yul\":3449:3454   */\n      dup3\n        /* \"#utility.yul\":3431:3455   */\n      tag_363\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":3420:3455   */\n      swap1\n      pop\n        /* \"#utility.yul\":3365:3461   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3467:3589   */\n    tag_365:\n        /* \"#utility.yul\":3540:3564   */\n      tag_459\n        /* \"#utility.yul\":3558:3563   */\n      dup2\n        /* \"#utility.yul\":3540:3564   */\n      tag_364\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":3533:3538   */\n      dup2\n        /* \"#utility.yul\":3530:3565   */\n      eq\n        /* \"#utility.yul\":3520:3583   */\n      tag_460\n      jumpi\n        /* \"#utility.yul\":3579:3580   */\n      0x00\n        /* \"#utility.yul\":3576:3577   */\n      0x00\n        /* \"#utility.yul\":3569:3581   */\n      revert\n        /* \"#utility.yul\":3520:3583   */\n    tag_460:\n        /* \"#utility.yul\":3467:3589   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3595:3734   */\n    tag_366:\n        /* \"#utility.yul\":3641:3646   */\n      0x00\n        /* \"#utility.yul\":3679:3685   */\n      dup2\n        /* \"#utility.yul\":3666:3686   */\n      calldataload\n        /* \"#utility.yul\":3657:3686   */\n      swap1\n      pop\n        /* \"#utility.yul\":3695:3728   */\n      tag_462\n        /* \"#utility.yul\":3722:3727   */\n      dup2\n        /* \"#utility.yul\":3695:3728   */\n      tag_365\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":3595:3734   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3740:4214   */\n    tag_50:\n        /* \"#utility.yul\":3808:3814   */\n      0x00\n        /* \"#utility.yul\":3816:3822   */\n      0x00\n        /* \"#utility.yul\":3865:3867   */\n      0x40\n        /* \"#utility.yul\":3853:3862   */\n      dup4\n        /* \"#utility.yul\":3844:3851   */\n      dup6\n        /* \"#utility.yul\":3840:3863   */\n      sub\n        /* \"#utility.yul\":3836:3868   */\n      slt\n        /* \"#utility.yul\":3833:3952   */\n      iszero\n      tag_464\n      jumpi\n        /* \"#utility.yul\":3871:3950   */\n      tag_465\n      tag_350\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":3833:3952   */\n    tag_464:\n        /* \"#utility.yul\":3991:3992   */\n      0x00\n        /* \"#utility.yul\":4016:4069   */\n      tag_466\n        /* \"#utility.yul\":4061:4068   */\n      dup6\n        /* \"#utility.yul\":4052:4058   */\n      dup3\n        /* \"#utility.yul\":4041:4050   */\n      dup7\n        /* \"#utility.yul\":4037:4059   */\n      add\n        /* \"#utility.yul\":4016:4069   */\n      tag_366\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":4006:4069   */\n      swap3\n      pop\n        /* \"#utility.yul\":3962:4079   */\n      pop\n        /* \"#utility.yul\":4118:4120   */\n      0x20\n        /* \"#utility.yul\":4144:4197   */\n      tag_467\n        /* \"#utility.yul\":4189:4196   */\n      dup6\n        /* \"#utility.yul\":4180:4186   */\n      dup3\n        /* \"#utility.yul\":4169:4178   */\n      dup7\n        /* \"#utility.yul\":4165:4187   */\n      add\n        /* \"#utility.yul\":4144:4197   */\n      tag_354\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":4134:4197   */\n      swap2\n      pop\n        /* \"#utility.yul\":4089:4207   */\n      pop\n        /* \"#utility.yul\":3740:4214   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4220:4430   */\n    tag_53:\n        /* \"#utility.yul\":4307:4311   */\n      0x00\n        /* \"#utility.yul\":4345:4347   */\n      0x20\n        /* \"#utility.yul\":4334:4343   */\n      dup3\n        /* \"#utility.yul\":4330:4348   */\n      add\n        /* \"#utility.yul\":4322:4348   */\n      swap1\n      pop\n        /* \"#utility.yul\":4358:4423   */\n      tag_469\n        /* \"#utility.yul\":4420:4421   */\n      0x00\n        /* \"#utility.yul\":4409:4418   */\n      dup4\n        /* \"#utility.yul\":4405:4422   */\n      add\n        /* \"#utility.yul\":4396:4402   */\n      dup5\n        /* \"#utility.yul\":4358:4423   */\n      tag_362\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":4220:4430   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4436:4658   */\n    tag_57:\n        /* \"#utility.yul\":4529:4533   */\n      0x00\n        /* \"#utility.yul\":4567:4569   */\n      0x20\n        /* \"#utility.yul\":4556:4565   */\n      dup3\n        /* \"#utility.yul\":4552:4570   */\n      add\n        /* \"#utility.yul\":4544:4570   */\n      swap1\n      pop\n        /* \"#utility.yul\":4580:4651   */\n      tag_471\n        /* \"#utility.yul\":4648:4649   */\n      0x00\n        /* \"#utility.yul\":4637:4646   */\n      dup4\n        /* \"#utility.yul\":4633:4650   */\n      add\n        /* \"#utility.yul\":4624:4630   */\n      dup5\n        /* \"#utility.yul\":4580:4651   */\n      tag_360\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":4436:4658   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4664:5106   */\n    tag_61:\n        /* \"#utility.yul\":4813:4817   */\n      0x00\n        /* \"#utility.yul\":4851:4853   */\n      0x60\n        /* \"#utility.yul\":4840:4849   */\n      dup3\n        /* \"#utility.yul\":4836:4854   */\n      add\n        /* \"#utility.yul\":4828:4854   */\n      swap1\n      pop\n        /* \"#utility.yul\":4864:4935   */\n      tag_473\n        /* \"#utility.yul\":4932:4933   */\n      0x00\n        /* \"#utility.yul\":4921:4930   */\n      dup4\n        /* \"#utility.yul\":4917:4934   */\n      add\n        /* \"#utility.yul\":4908:4914   */\n      dup7\n        /* \"#utility.yul\":4864:4935   */\n      tag_360\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":4945:5017   */\n      tag_474\n        /* \"#utility.yul\":5013:5015   */\n      0x20\n        /* \"#utility.yul\":5002:5011   */\n      dup4\n        /* \"#utility.yul\":4998:5016   */\n      add\n        /* \"#utility.yul\":4989:4995   */\n      dup6\n        /* \"#utility.yul\":4945:5017   */\n      tag_360\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":5027:5099   */\n      tag_475\n        /* \"#utility.yul\":5095:5097   */\n      0x40\n        /* \"#utility.yul\":5084:5093   */\n      dup4\n        /* \"#utility.yul\":5080:5098   */\n      add\n        /* \"#utility.yul\":5071:5077   */\n      dup5\n        /* \"#utility.yul\":5027:5099   */\n      tag_360\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":4664:5106   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5112:5586   */\n    tag_64:\n        /* \"#utility.yul\":5180:5186   */\n      0x00\n        /* \"#utility.yul\":5188:5194   */\n      0x00\n        /* \"#utility.yul\":5237:5239   */\n      0x40\n        /* \"#utility.yul\":5225:5234   */\n      dup4\n        /* \"#utility.yul\":5216:5223   */\n      dup6\n        /* \"#utility.yul\":5212:5235   */\n      sub\n        /* \"#utility.yul\":5208:5240   */\n      slt\n        /* \"#utility.yul\":5205:5324   */\n      iszero\n      tag_477\n      jumpi\n        /* \"#utility.yul\":5243:5322   */\n      tag_478\n      tag_350\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":5205:5324   */\n    tag_477:\n        /* \"#utility.yul\":5363:5364   */\n      0x00\n        /* \"#utility.yul\":5388:5441   */\n      tag_479\n        /* \"#utility.yul\":5433:5440   */\n      dup6\n        /* \"#utility.yul\":5424:5430   */\n      dup3\n        /* \"#utility.yul\":5413:5422   */\n      dup7\n        /* \"#utility.yul\":5409:5431   */\n      add\n        /* \"#utility.yul\":5388:5441   */\n      tag_354\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":5378:5441   */\n      swap3\n      pop\n        /* \"#utility.yul\":5334:5451   */\n      pop\n        /* \"#utility.yul\":5490:5492   */\n      0x20\n        /* \"#utility.yul\":5516:5569   */\n      tag_480\n        /* \"#utility.yul\":5561:5568   */\n      dup6\n        /* \"#utility.yul\":5552:5558   */\n      dup3\n        /* \"#utility.yul\":5541:5550   */\n      dup7\n        /* \"#utility.yul\":5537:5559   */\n      add\n        /* \"#utility.yul\":5516:5569   */\n      tag_354\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":5506:5569   */\n      swap2\n      pop\n        /* \"#utility.yul\":5461:5579   */\n      pop\n        /* \"#utility.yul\":5112:5586   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5592:5921   */\n    tag_69:\n        /* \"#utility.yul\":5651:5657   */\n      0x00\n        /* \"#utility.yul\":5700:5702   */\n      0x20\n        /* \"#utility.yul\":5688:5697   */\n      dup3\n        /* \"#utility.yul\":5679:5686   */\n      dup5\n        /* \"#utility.yul\":5675:5698   */\n      sub\n        /* \"#utility.yul\":5671:5703   */\n      slt\n        /* \"#utility.yul\":5668:5787   */\n      iszero\n      tag_482\n      jumpi\n        /* \"#utility.yul\":5706:5785   */\n      tag_483\n      tag_350\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":5668:5787   */\n    tag_482:\n        /* \"#utility.yul\":5826:5827   */\n      0x00\n        /* \"#utility.yul\":5851:5904   */\n      tag_484\n        /* \"#utility.yul\":5896:5903   */\n      dup5\n        /* \"#utility.yul\":5887:5893   */\n      dup3\n        /* \"#utility.yul\":5876:5885   */\n      dup6\n        /* \"#utility.yul\":5872:5894   */\n      add\n        /* \"#utility.yul\":5851:5904   */\n      tag_366\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":5841:5904   */\n      swap2\n      pop\n        /* \"#utility.yul\":5797:5914   */\n      pop\n        /* \"#utility.yul\":5592:5921   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5927:6045   */\n    tag_367:\n        /* \"#utility.yul\":6014:6038   */\n      tag_486\n        /* \"#utility.yul\":6032:6037   */\n      dup2\n        /* \"#utility.yul\":6014:6038   */\n      tag_364\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":6009:6012   */\n      dup3\n        /* \"#utility.yul\":6002:6039   */\n      mstore\n        /* \"#utility.yul\":5927:6045   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6051:6604   */\n    tag_72:\n        /* \"#utility.yul\":6228:6232   */\n      0x00\n        /* \"#utility.yul\":6266:6269   */\n      0x80\n        /* \"#utility.yul\":6255:6264   */\n      dup3\n        /* \"#utility.yul\":6251:6270   */\n      add\n        /* \"#utility.yul\":6243:6270   */\n      swap1\n      pop\n        /* \"#utility.yul\":6280:6351   */\n      tag_488\n        /* \"#utility.yul\":6348:6349   */\n      0x00\n        /* \"#utility.yul\":6337:6346   */\n      dup4\n        /* \"#utility.yul\":6333:6350   */\n      add\n        /* \"#utility.yul\":6324:6330   */\n      dup8\n        /* \"#utility.yul\":6280:6351   */\n      tag_360\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":6361:6433   */\n      tag_489\n        /* \"#utility.yul\":6429:6431   */\n      0x20\n        /* \"#utility.yul\":6418:6427   */\n      dup4\n        /* \"#utility.yul\":6414:6432   */\n      add\n        /* \"#utility.yul\":6405:6411   */\n      dup7\n        /* \"#utility.yul\":6361:6433   */\n      tag_360\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":6443:6515   */\n      tag_490\n        /* \"#utility.yul\":6511:6513   */\n      0x40\n        /* \"#utility.yul\":6500:6509   */\n      dup4\n        /* \"#utility.yul\":6496:6514   */\n      add\n        /* \"#utility.yul\":6487:6493   */\n      dup6\n        /* \"#utility.yul\":6443:6515   */\n      tag_360\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":6525:6597   */\n      tag_491\n        /* \"#utility.yul\":6593:6595   */\n      0x60\n        /* \"#utility.yul\":6582:6591   */\n      dup4\n        /* \"#utility.yul\":6578:6596   */\n      add\n        /* \"#utility.yul\":6569:6575   */\n      dup5\n        /* \"#utility.yul\":6525:6597   */\n      tag_367\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":6051:6604   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6610:7229   */\n    tag_78:\n        /* \"#utility.yul\":6687:6693   */\n      0x00\n        /* \"#utility.yul\":6695:6701   */\n      0x00\n        /* \"#utility.yul\":6703:6709   */\n      0x00\n        /* \"#utility.yul\":6752:6754   */\n      0x60\n        /* \"#utility.yul\":6740:6749   */\n      dup5\n        /* \"#utility.yul\":6731:6738   */\n      dup7\n        /* \"#utility.yul\":6727:6750   */\n      sub\n        /* \"#utility.yul\":6723:6755   */\n      slt\n        /* \"#utility.yul\":6720:6839   */\n      iszero\n      tag_493\n      jumpi\n        /* \"#utility.yul\":6758:6837   */\n      tag_494\n      tag_350\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":6720:6839   */\n    tag_493:\n        /* \"#utility.yul\":6878:6879   */\n      0x00\n        /* \"#utility.yul\":6903:6956   */\n      tag_495\n        /* \"#utility.yul\":6948:6955   */\n      dup7\n        /* \"#utility.yul\":6939:6945   */\n      dup3\n        /* \"#utility.yul\":6928:6937   */\n      dup8\n        /* \"#utility.yul\":6924:6946   */\n      add\n        /* \"#utility.yul\":6903:6956   */\n      tag_366\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":6893:6956   */\n      swap4\n      pop\n        /* \"#utility.yul\":6849:6966   */\n      pop\n        /* \"#utility.yul\":7005:7007   */\n      0x20\n        /* \"#utility.yul\":7031:7084   */\n      tag_496\n        /* \"#utility.yul\":7076:7083   */\n      dup7\n        /* \"#utility.yul\":7067:7073   */\n      dup3\n        /* \"#utility.yul\":7056:7065   */\n      dup8\n        /* \"#utility.yul\":7052:7074   */\n      add\n        /* \"#utility.yul\":7031:7084   */\n      tag_366\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":7021:7084   */\n      swap3\n      pop\n        /* \"#utility.yul\":6976:7094   */\n      pop\n        /* \"#utility.yul\":7133:7135   */\n      0x40\n        /* \"#utility.yul\":7159:7212   */\n      tag_497\n        /* \"#utility.yul\":7204:7211   */\n      dup7\n        /* \"#utility.yul\":7195:7201   */\n      dup3\n        /* \"#utility.yul\":7184:7193   */\n      dup8\n        /* \"#utility.yul\":7180:7202   */\n      add\n        /* \"#utility.yul\":7159:7212   */\n      tag_354\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":7149:7212   */\n      swap2\n      pop\n        /* \"#utility.yul\":7104:7222   */\n      pop\n        /* \"#utility.yul\":6610:7229   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":7235:7321   */\n    tag_368:\n        /* \"#utility.yul\":7270:7277   */\n      0x00\n        /* \"#utility.yul\":7310:7314   */\n      0xff\n        /* \"#utility.yul\":7303:7308   */\n      dup3\n        /* \"#utility.yul\":7299:7315   */\n      and\n        /* \"#utility.yul\":7288:7315   */\n      swap1\n      pop\n        /* \"#utility.yul\":7235:7321   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7327:7439   */\n    tag_369:\n        /* \"#utility.yul\":7410:7432   */\n      tag_500\n        /* \"#utility.yul\":7426:7431   */\n      dup2\n        /* \"#utility.yul\":7410:7432   */\n      tag_368\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":7405:7408   */\n      dup3\n        /* \"#utility.yul\":7398:7433   */\n      mstore\n        /* \"#utility.yul\":7327:7439   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7445:7659   */\n    tag_87:\n        /* \"#utility.yul\":7534:7538   */\n      0x00\n        /* \"#utility.yul\":7572:7574   */\n      0x20\n        /* \"#utility.yul\":7561:7570   */\n      dup3\n        /* \"#utility.yul\":7557:7575   */\n      add\n        /* \"#utility.yul\":7549:7575   */\n      swap1\n      pop\n        /* \"#utility.yul\":7585:7652   */\n      tag_502\n        /* \"#utility.yul\":7649:7650   */\n      0x00\n        /* \"#utility.yul\":7638:7647   */\n      dup4\n        /* \"#utility.yul\":7634:7651   */\n      add\n        /* \"#utility.yul\":7625:7631   */\n      dup5\n        /* \"#utility.yul\":7585:7652   */\n      tag_369\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":7445:7659   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7665:7782   */\n    tag_370:\n        /* \"#utility.yul\":7774:7775   */\n      0x00\n        /* \"#utility.yul\":7771:7772   */\n      0x00\n        /* \"#utility.yul\":7764:7776   */\n      revert\n        /* \"#utility.yul\":7788:7905   */\n    tag_371:\n        /* \"#utility.yul\":7897:7898   */\n      0x00\n        /* \"#utility.yul\":7894:7895   */\n      0x00\n        /* \"#utility.yul\":7887:7899   */\n      revert\n        /* \"#utility.yul\":7911:8091   */\n    tag_372:\n        /* \"#utility.yul\":7959:8036   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7956:7957   */\n      0x00\n        /* \"#utility.yul\":7949:8037   */\n      mstore\n        /* \"#utility.yul\":8056:8060   */\n      0x41\n        /* \"#utility.yul\":8053:8054   */\n      0x04\n        /* \"#utility.yul\":8046:8061   */\n      mstore\n        /* \"#utility.yul\":8080:8084   */\n      0x24\n        /* \"#utility.yul\":8077:8078   */\n      0x00\n        /* \"#utility.yul\":8070:8085   */\n      revert\n        /* \"#utility.yul\":8097:8378   */\n    tag_373:\n        /* \"#utility.yul\":8180:8207   */\n      tag_507\n        /* \"#utility.yul\":8202:8206   */\n      dup3\n        /* \"#utility.yul\":8180:8207   */\n      tag_358\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":8172:8178   */\n      dup2\n        /* \"#utility.yul\":8168:8208   */\n      add\n        /* \"#utility.yul\":8310:8316   */\n      dup2\n        /* \"#utility.yul\":8298:8308   */\n      dup2\n        /* \"#utility.yul\":8295:8317   */\n      lt\n        /* \"#utility.yul\":8274:8292   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8262:8272   */\n      dup3\n        /* \"#utility.yul\":8259:8293   */\n      gt\n        /* \"#utility.yul\":8256:8318   */\n      or\n        /* \"#utility.yul\":8253:8341   */\n      iszero\n      tag_508\n      jumpi\n        /* \"#utility.yul\":8321:8339   */\n      tag_509\n      tag_372\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":8253:8341   */\n    tag_508:\n        /* \"#utility.yul\":8361:8371   */\n      dup1\n        /* \"#utility.yul\":8357:8359   */\n      0x40\n        /* \"#utility.yul\":8350:8372   */\n      mstore\n        /* \"#utility.yul\":8140:8378   */\n      pop\n        /* \"#utility.yul\":8097:8378   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8384:8513   */\n    tag_374:\n        /* \"#utility.yul\":8418:8424   */\n      0x00\n        /* \"#utility.yul\":8445:8465   */\n      tag_511\n      tag_349\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":8435:8465   */\n      swap1\n      pop\n        /* \"#utility.yul\":8474:8507   */\n      tag_512\n        /* \"#utility.yul\":8502:8506   */\n      dup3\n        /* \"#utility.yul\":8494:8500   */\n      dup3\n        /* \"#utility.yul\":8474:8507   */\n      tag_373\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":8384:8513   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8519:8827   */\n    tag_375:\n        /* \"#utility.yul\":8581:8585   */\n      0x00\n        /* \"#utility.yul\":8671:8689   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8663:8669   */\n      dup3\n        /* \"#utility.yul\":8660:8690   */\n      gt\n        /* \"#utility.yul\":8657:8713   */\n      iszero\n      tag_514\n      jumpi\n        /* \"#utility.yul\":8693:8711   */\n      tag_515\n      tag_372\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":8657:8713   */\n    tag_514:\n        /* \"#utility.yul\":8731:8760   */\n      tag_516\n        /* \"#utility.yul\":8753:8759   */\n      dup3\n        /* \"#utility.yul\":8731:8760   */\n      tag_358\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":8723:8760   */\n      swap1\n      pop\n        /* \"#utility.yul\":8815:8819   */\n      0x20\n        /* \"#utility.yul\":8809:8813   */\n      dup2\n        /* \"#utility.yul\":8805:8820   */\n      add\n        /* \"#utility.yul\":8797:8820   */\n      swap1\n      pop\n        /* \"#utility.yul\":8519:8827   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8833:8981   */\n    tag_376:\n        /* \"#utility.yul\":8931:8937   */\n      dup3\n        /* \"#utility.yul\":8926:8929   */\n      dup2\n        /* \"#utility.yul\":8921:8924   */\n      dup4\n        /* \"#utility.yul\":8908:8938   */\n      calldatacopy\n        /* \"#utility.yul\":8972:8973   */\n      0x00\n        /* \"#utility.yul\":8963:8969   */\n      dup4\n        /* \"#utility.yul\":8958:8961   */\n      dup4\n        /* \"#utility.yul\":8954:8970   */\n      add\n        /* \"#utility.yul\":8947:8974   */\n      mstore\n        /* \"#utility.yul\":8833:8981   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8987:9412   */\n    tag_377:\n        /* \"#utility.yul\":9065:9070   */\n      0x00\n        /* \"#utility.yul\":9090:9156   */\n      tag_519\n        /* \"#utility.yul\":9106:9155   */\n      tag_520\n        /* \"#utility.yul\":9148:9154   */\n      dup5\n        /* \"#utility.yul\":9106:9155   */\n      tag_375\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":9090:9156   */\n      tag_374\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":9081:9156   */\n      swap1\n      pop\n        /* \"#utility.yul\":9179:9185   */\n      dup3\n        /* \"#utility.yul\":9172:9177   */\n      dup2\n        /* \"#utility.yul\":9165:9186   */\n      mstore\n        /* \"#utility.yul\":9217:9221   */\n      0x20\n        /* \"#utility.yul\":9210:9215   */\n      dup2\n        /* \"#utility.yul\":9206:9222   */\n      add\n        /* \"#utility.yul\":9255:9258   */\n      dup5\n        /* \"#utility.yul\":9246:9252   */\n      dup5\n        /* \"#utility.yul\":9241:9244   */\n      dup5\n        /* \"#utility.yul\":9237:9253   */\n      add\n        /* \"#utility.yul\":9234:9259   */\n      gt\n        /* \"#utility.yul\":9231:9343   */\n      iszero\n      tag_521\n      jumpi\n        /* \"#utility.yul\":9262:9341   */\n      tag_522\n      tag_371\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":9231:9343   */\n    tag_521:\n        /* \"#utility.yul\":9352:9406   */\n      tag_523\n        /* \"#utility.yul\":9399:9405   */\n      dup5\n        /* \"#utility.yul\":9394:9397   */\n      dup3\n        /* \"#utility.yul\":9389:9392   */\n      dup6\n        /* \"#utility.yul\":9352:9406   */\n      tag_376\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":9071:9412   */\n      pop\n        /* \"#utility.yul\":8987:9412   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9432:9772   */\n    tag_378:\n        /* \"#utility.yul\":9488:9493   */\n      0x00\n        /* \"#utility.yul\":9537:9540   */\n      dup3\n        /* \"#utility.yul\":9530:9534   */\n      0x1f\n        /* \"#utility.yul\":9522:9528   */\n      dup4\n        /* \"#utility.yul\":9518:9535   */\n      add\n        /* \"#utility.yul\":9514:9541   */\n      slt\n        /* \"#utility.yul\":9504:9626   */\n      tag_525\n      jumpi\n        /* \"#utility.yul\":9545:9624   */\n      tag_526\n      tag_370\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":9504:9626   */\n    tag_525:\n        /* \"#utility.yul\":9662:9668   */\n      dup2\n        /* \"#utility.yul\":9649:9669   */\n      calldataload\n        /* \"#utility.yul\":9687:9766   */\n      tag_527\n        /* \"#utility.yul\":9762:9765   */\n      dup5\n        /* \"#utility.yul\":9754:9760   */\n      dup3\n        /* \"#utility.yul\":9747:9751   */\n      0x20\n        /* \"#utility.yul\":9739:9745   */\n      dup7\n        /* \"#utility.yul\":9735:9752   */\n      add\n        /* \"#utility.yul\":9687:9766   */\n      tag_377\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":9678:9766   */\n      swap2\n      pop\n        /* \"#utility.yul\":9494:9772   */\n      pop\n        /* \"#utility.yul\":9432:9772   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9778:10287   */\n    tag_93:\n        /* \"#utility.yul\":9847:9853   */\n      0x00\n        /* \"#utility.yul\":9896:9898   */\n      0x20\n        /* \"#utility.yul\":9884:9893   */\n      dup3\n        /* \"#utility.yul\":9875:9882   */\n      dup5\n        /* \"#utility.yul\":9871:9894   */\n      sub\n        /* \"#utility.yul\":9867:9899   */\n      slt\n        /* \"#utility.yul\":9864:9983   */\n      iszero\n      tag_529\n      jumpi\n        /* \"#utility.yul\":9902:9981   */\n      tag_530\n      tag_350\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":9864:9983   */\n    tag_529:\n        /* \"#utility.yul\":10050:10051   */\n      0x00\n        /* \"#utility.yul\":10039:10048   */\n      dup3\n        /* \"#utility.yul\":10035:10052   */\n      add\n        /* \"#utility.yul\":10022:10053   */\n      calldataload\n        /* \"#utility.yul\":10080:10098   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10072:10078   */\n      dup2\n        /* \"#utility.yul\":10069:10099   */\n      gt\n        /* \"#utility.yul\":10066:10183   */\n      iszero\n      tag_531\n      jumpi\n        /* \"#utility.yul\":10102:10181   */\n      tag_532\n      tag_351\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":10066:10183   */\n    tag_531:\n        /* \"#utility.yul\":10207:10270   */\n      tag_533\n        /* \"#utility.yul\":10262:10269   */\n      dup5\n        /* \"#utility.yul\":10253:10259   */\n      dup3\n        /* \"#utility.yul\":10242:10251   */\n      dup6\n        /* \"#utility.yul\":10238:10260   */\n      add\n        /* \"#utility.yul\":10207:10270   */\n      tag_378\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":10197:10270   */\n      swap2\n      pop\n        /* \"#utility.yul\":9993:10280   */\n      pop\n        /* \"#utility.yul\":9778:10287   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10293:10767   */\n    tag_108:\n        /* \"#utility.yul\":10361:10367   */\n      0x00\n        /* \"#utility.yul\":10369:10375   */\n      0x00\n        /* \"#utility.yul\":10418:10420   */\n      0x40\n        /* \"#utility.yul\":10406:10415   */\n      dup4\n        /* \"#utility.yul\":10397:10404   */\n      dup6\n        /* \"#utility.yul\":10393:10416   */\n      sub\n        /* \"#utility.yul\":10389:10421   */\n      slt\n        /* \"#utility.yul\":10386:10505   */\n      iszero\n      tag_535\n      jumpi\n        /* \"#utility.yul\":10424:10503   */\n      tag_536\n      tag_350\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":10386:10505   */\n    tag_535:\n        /* \"#utility.yul\":10544:10545   */\n      0x00\n        /* \"#utility.yul\":10569:10622   */\n      tag_537\n        /* \"#utility.yul\":10614:10621   */\n      dup6\n        /* \"#utility.yul\":10605:10611   */\n      dup3\n        /* \"#utility.yul\":10594:10603   */\n      dup7\n        /* \"#utility.yul\":10590:10612   */\n      add\n        /* \"#utility.yul\":10569:10622   */\n      tag_354\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":10559:10622   */\n      swap3\n      pop\n        /* \"#utility.yul\":10515:10632   */\n      pop\n        /* \"#utility.yul\":10671:10673   */\n      0x20\n        /* \"#utility.yul\":10697:10750   */\n      tag_538\n        /* \"#utility.yul\":10742:10749   */\n      dup6\n        /* \"#utility.yul\":10733:10739   */\n      dup3\n        /* \"#utility.yul\":10722:10731   */\n      dup7\n        /* \"#utility.yul\":10718:10740   */\n      add\n        /* \"#utility.yul\":10697:10750   */\n      tag_366\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":10687:10750   */\n      swap2\n      pop\n        /* \"#utility.yul\":10642:10760   */\n      pop\n        /* \"#utility.yul\":10293:10767   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10773:10995   */\n    tag_113:\n        /* \"#utility.yul\":10866:10870   */\n      0x00\n        /* \"#utility.yul\":10904:10906   */\n      0x20\n        /* \"#utility.yul\":10893:10902   */\n      dup3\n        /* \"#utility.yul\":10889:10907   */\n      add\n        /* \"#utility.yul\":10881:10907   */\n      swap1\n      pop\n        /* \"#utility.yul\":10917:10988   */\n      tag_540\n        /* \"#utility.yul\":10985:10986   */\n      0x00\n        /* \"#utility.yul\":10974:10983   */\n      dup4\n        /* \"#utility.yul\":10970:10987   */\n      add\n        /* \"#utility.yul\":10961:10967   */\n      dup5\n        /* \"#utility.yul\":10917:10988   */\n      tag_367\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":10773:10995   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11001:11115   */\n    tag_379:\n        /* \"#utility.yul\":11068:11074   */\n      0x00\n        /* \"#utility.yul\":11102:11107   */\n      dup2\n        /* \"#utility.yul\":11096:11108   */\n      mload\n        /* \"#utility.yul\":11086:11108   */\n      swap1\n      pop\n        /* \"#utility.yul\":11001:11115   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11121:11305   */\n    tag_380:\n        /* \"#utility.yul\":11220:11231   */\n      0x00\n        /* \"#utility.yul\":11254:11260   */\n      dup3\n        /* \"#utility.yul\":11249:11252   */\n      dup3\n        /* \"#utility.yul\":11242:11261   */\n      mstore\n        /* \"#utility.yul\":11294:11298   */\n      0x20\n        /* \"#utility.yul\":11289:11292   */\n      dup3\n        /* \"#utility.yul\":11285:11299   */\n      add\n        /* \"#utility.yul\":11270:11299   */\n      swap1\n      pop\n        /* \"#utility.yul\":11121:11305   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11311:11443   */\n    tag_381:\n        /* \"#utility.yul\":11378:11382   */\n      0x00\n        /* \"#utility.yul\":11401:11404   */\n      dup2\n        /* \"#utility.yul\":11393:11404   */\n      swap1\n      pop\n        /* \"#utility.yul\":11431:11435   */\n      0x20\n        /* \"#utility.yul\":11426:11429   */\n      dup3\n        /* \"#utility.yul\":11422:11436   */\n      add\n        /* \"#utility.yul\":11414:11436   */\n      swap1\n      pop\n        /* \"#utility.yul\":11311:11443   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11449:11557   */\n    tag_382:\n        /* \"#utility.yul\":11526:11550   */\n      tag_545\n        /* \"#utility.yul\":11544:11549   */\n      dup2\n        /* \"#utility.yul\":11526:11550   */\n      tag_364\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":11521:11524   */\n      dup3\n        /* \"#utility.yul\":11514:11551   */\n      mstore\n        /* \"#utility.yul\":11449:11557   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11563:11742   */\n    tag_383:\n        /* \"#utility.yul\":11632:11642   */\n      0x00\n        /* \"#utility.yul\":11653:11699   */\n      tag_547\n        /* \"#utility.yul\":11695:11698   */\n      dup4\n        /* \"#utility.yul\":11687:11693   */\n      dup4\n        /* \"#utility.yul\":11653:11699   */\n      tag_382\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":11731:11735   */\n      0x20\n        /* \"#utility.yul\":11726:11729   */\n      dup4\n        /* \"#utility.yul\":11722:11736   */\n      add\n        /* \"#utility.yul\":11708:11736   */\n      swap1\n      pop\n        /* \"#utility.yul\":11563:11742   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11748:11861   */\n    tag_384:\n        /* \"#utility.yul\":11818:11822   */\n      0x00\n        /* \"#utility.yul\":11850:11854   */\n      0x20\n        /* \"#utility.yul\":11845:11848   */\n      dup3\n        /* \"#utility.yul\":11841:11855   */\n      add\n        /* \"#utility.yul\":11833:11855   */\n      swap1\n      pop\n        /* \"#utility.yul\":11748:11861   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11897:12629   */\n    tag_385:\n        /* \"#utility.yul\":12016:12019   */\n      0x00\n        /* \"#utility.yul\":12045:12099   */\n      tag_550\n        /* \"#utility.yul\":12093:12098   */\n      dup3\n        /* \"#utility.yul\":12045:12099   */\n      tag_379\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":12115:12201   */\n      tag_551\n        /* \"#utility.yul\":12194:12200   */\n      dup2\n        /* \"#utility.yul\":12189:12192   */\n      dup6\n        /* \"#utility.yul\":12115:12201   */\n      tag_380\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":12108:12201   */\n      swap4\n      pop\n        /* \"#utility.yul\":12225:12281   */\n      tag_552\n        /* \"#utility.yul\":12275:12280   */\n      dup4\n        /* \"#utility.yul\":12225:12281   */\n      tag_381\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":12304:12311   */\n      dup1\n        /* \"#utility.yul\":12335:12336   */\n      0x00\n        /* \"#utility.yul\":12320:12604   */\n    tag_553:\n        /* \"#utility.yul\":12345:12351   */\n      dup4\n        /* \"#utility.yul\":12342:12343   */\n      dup2\n        /* \"#utility.yul\":12339:12352   */\n      lt\n        /* \"#utility.yul\":12320:12604   */\n      iszero\n      tag_555\n      jumpi\n        /* \"#utility.yul\":12421:12427   */\n      dup2\n        /* \"#utility.yul\":12415:12428   */\n      mload\n        /* \"#utility.yul\":12448:12511   */\n      tag_556\n        /* \"#utility.yul\":12507:12510   */\n      dup9\n        /* \"#utility.yul\":12492:12505   */\n      dup3\n        /* \"#utility.yul\":12448:12511   */\n      tag_383\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":12441:12511   */\n      swap8\n      pop\n        /* \"#utility.yul\":12534:12594   */\n      tag_557\n        /* \"#utility.yul\":12587:12593   */\n      dup4\n        /* \"#utility.yul\":12534:12594   */\n      tag_384\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":12524:12594   */\n      swap3\n      pop\n        /* \"#utility.yul\":12380:12604   */\n      pop\n        /* \"#utility.yul\":12367:12368   */\n      0x01\n        /* \"#utility.yul\":12364:12365   */\n      dup2\n        /* \"#utility.yul\":12360:12369   */\n      add\n        /* \"#utility.yul\":12355:12369   */\n      swap1\n      pop\n        /* \"#utility.yul\":12320:12604   */\n      jump(tag_553)\n    tag_555:\n        /* \"#utility.yul\":12324:12338   */\n      pop\n        /* \"#utility.yul\":12620:12623   */\n      dup6\n        /* \"#utility.yul\":12613:12623   */\n      swap4\n      pop\n        /* \"#utility.yul\":12021:12629   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":11897:12629   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12635:13008   */\n    tag_124:\n        /* \"#utility.yul\":12778:12782   */\n      0x00\n        /* \"#utility.yul\":12816:12818   */\n      0x20\n        /* \"#utility.yul\":12805:12814   */\n      dup3\n        /* \"#utility.yul\":12801:12819   */\n      add\n        /* \"#utility.yul\":12793:12819   */\n      swap1\n      pop\n        /* \"#utility.yul\":12865:12874   */\n      dup2\n        /* \"#utility.yul\":12859:12863   */\n      dup2\n        /* \"#utility.yul\":12855:12875   */\n      sub\n        /* \"#utility.yul\":12851:12852   */\n      0x00\n        /* \"#utility.yul\":12840:12849   */\n      dup4\n        /* \"#utility.yul\":12836:12853   */\n      add\n        /* \"#utility.yul\":12829:12876   */\n      mstore\n        /* \"#utility.yul\":12893:13001   */\n      tag_559\n        /* \"#utility.yul\":12996:13000   */\n      dup2\n        /* \"#utility.yul\":12987:12993   */\n      dup5\n        /* \"#utility.yul\":12893:13001   */\n      tag_385\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":12885:13001   */\n      swap1\n      pop\n        /* \"#utility.yul\":12635:13008   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13014:13130   */\n    tag_386:\n        /* \"#utility.yul\":13084:13105   */\n      tag_561\n        /* \"#utility.yul\":13099:13104   */\n      dup2\n        /* \"#utility.yul\":13084:13105   */\n      tag_361\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":13077:13082   */\n      dup2\n        /* \"#utility.yul\":13074:13106   */\n      eq\n        /* \"#utility.yul\":13064:13124   */\n      tag_562\n      jumpi\n        /* \"#utility.yul\":13120:13121   */\n      0x00\n        /* \"#utility.yul\":13117:13118   */\n      0x00\n        /* \"#utility.yul\":13110:13122   */\n      revert\n        /* \"#utility.yul\":13064:13124   */\n    tag_562:\n        /* \"#utility.yul\":13014:13130   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13136:13269   */\n    tag_387:\n        /* \"#utility.yul\":13179:13184   */\n      0x00\n        /* \"#utility.yul\":13217:13223   */\n      dup2\n        /* \"#utility.yul\":13204:13224   */\n      calldataload\n        /* \"#utility.yul\":13195:13224   */\n      swap1\n      pop\n        /* \"#utility.yul\":13233:13263   */\n      tag_564\n        /* \"#utility.yul\":13257:13262   */\n      dup2\n        /* \"#utility.yul\":13233:13263   */\n      tag_386\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":13136:13269   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13275:13743   */\n    tag_130:\n        /* \"#utility.yul\":13340:13346   */\n      0x00\n        /* \"#utility.yul\":13348:13354   */\n      0x00\n        /* \"#utility.yul\":13397:13399   */\n      0x40\n        /* \"#utility.yul\":13385:13394   */\n      dup4\n        /* \"#utility.yul\":13376:13383   */\n      dup6\n        /* \"#utility.yul\":13372:13395   */\n      sub\n        /* \"#utility.yul\":13368:13400   */\n      slt\n        /* \"#utility.yul\":13365:13484   */\n      iszero\n      tag_566\n      jumpi\n        /* \"#utility.yul\":13403:13482   */\n      tag_567\n      tag_350\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":13365:13484   */\n    tag_566:\n        /* \"#utility.yul\":13523:13524   */\n      0x00\n        /* \"#utility.yul\":13548:13601   */\n      tag_568\n        /* \"#utility.yul\":13593:13600   */\n      dup6\n        /* \"#utility.yul\":13584:13590   */\n      dup3\n        /* \"#utility.yul\":13573:13582   */\n      dup7\n        /* \"#utility.yul\":13569:13591   */\n      add\n        /* \"#utility.yul\":13548:13601   */\n      tag_354\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":13538:13601   */\n      swap3\n      pop\n        /* \"#utility.yul\":13494:13611   */\n      pop\n        /* \"#utility.yul\":13650:13652   */\n      0x20\n        /* \"#utility.yul\":13676:13726   */\n      tag_569\n        /* \"#utility.yul\":13718:13725   */\n      dup6\n        /* \"#utility.yul\":13709:13715   */\n      dup3\n        /* \"#utility.yul\":13698:13707   */\n      dup7\n        /* \"#utility.yul\":13694:13716   */\n      add\n        /* \"#utility.yul\":13676:13726   */\n      tag_387\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":13666:13726   */\n      swap2\n      pop\n        /* \"#utility.yul\":13621:13736   */\n      pop\n        /* \"#utility.yul\":13275:13743   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13749:14223   */\n    tag_137:\n        /* \"#utility.yul\":13817:13823   */\n      0x00\n        /* \"#utility.yul\":13825:13831   */\n      0x00\n        /* \"#utility.yul\":13874:13876   */\n      0x40\n        /* \"#utility.yul\":13862:13871   */\n      dup4\n        /* \"#utility.yul\":13853:13860   */\n      dup6\n        /* \"#utility.yul\":13849:13872   */\n      sub\n        /* \"#utility.yul\":13845:13877   */\n      slt\n        /* \"#utility.yul\":13842:13961   */\n      iszero\n      tag_571\n      jumpi\n        /* \"#utility.yul\":13880:13959   */\n      tag_572\n      tag_350\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":13842:13961   */\n    tag_571:\n        /* \"#utility.yul\":14000:14001   */\n      0x00\n        /* \"#utility.yul\":14025:14078   */\n      tag_573\n        /* \"#utility.yul\":14070:14077   */\n      dup6\n        /* \"#utility.yul\":14061:14067   */\n      dup3\n        /* \"#utility.yul\":14050:14059   */\n      dup7\n        /* \"#utility.yul\":14046:14068   */\n      add\n        /* \"#utility.yul\":14025:14078   */\n      tag_366\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":14015:14078   */\n      swap3\n      pop\n        /* \"#utility.yul\":13971:14088   */\n      pop\n        /* \"#utility.yul\":14127:14129   */\n      0x20\n        /* \"#utility.yul\":14153:14206   */\n      tag_574\n        /* \"#utility.yul\":14198:14205   */\n      dup6\n        /* \"#utility.yul\":14189:14195   */\n      dup3\n        /* \"#utility.yul\":14178:14187   */\n      dup7\n        /* \"#utility.yul\":14174:14196   */\n      add\n        /* \"#utility.yul\":14153:14206   */\n      tag_366\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":14143:14206   */\n      swap2\n      pop\n        /* \"#utility.yul\":14098:14216   */\n      pop\n        /* \"#utility.yul\":13749:14223   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14229:14409   */\n    tag_388:\n        /* \"#utility.yul\":14277:14354   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14274:14275   */\n      0x00\n        /* \"#utility.yul\":14267:14355   */\n      mstore\n        /* \"#utility.yul\":14374:14378   */\n      0x22\n        /* \"#utility.yul\":14371:14372   */\n      0x04\n        /* \"#utility.yul\":14364:14379   */\n      mstore\n        /* \"#utility.yul\":14398:14402   */\n      0x24\n        /* \"#utility.yul\":14395:14396   */\n      0x00\n        /* \"#utility.yul\":14388:14403   */\n      revert\n        /* \"#utility.yul\":14415:14735   */\n    tag_147:\n        /* \"#utility.yul\":14459:14465   */\n      0x00\n        /* \"#utility.yul\":14496:14497   */\n      0x02\n        /* \"#utility.yul\":14490:14494   */\n      dup3\n        /* \"#utility.yul\":14486:14498   */\n      div\n        /* \"#utility.yul\":14476:14498   */\n      swap1\n      pop\n        /* \"#utility.yul\":14543:14544   */\n      0x01\n        /* \"#utility.yul\":14537:14541   */\n      dup3\n        /* \"#utility.yul\":14533:14545   */\n      and\n        /* \"#utility.yul\":14564:14582   */\n      dup1\n        /* \"#utility.yul\":14554:14635   */\n      tag_577\n      jumpi\n        /* \"#utility.yul\":14620:14624   */\n      0x7f\n        /* \"#utility.yul\":14612:14618   */\n      dup3\n        /* \"#utility.yul\":14608:14625   */\n      and\n        /* \"#utility.yul\":14598:14625   */\n      swap2\n      pop\n        /* \"#utility.yul\":14554:14635   */\n    tag_577:\n        /* \"#utility.yul\":14682:14684   */\n      0x20\n        /* \"#utility.yul\":14674:14680   */\n      dup3\n        /* \"#utility.yul\":14671:14685   */\n      lt\n        /* \"#utility.yul\":14651:14669   */\n      dup2\n        /* \"#utility.yul\":14648:14686   */\n      sub\n        /* \"#utility.yul\":14645:14729   */\n      tag_578\n      jumpi\n        /* \"#utility.yul\":14701:14719   */\n      tag_579\n      tag_388\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":14645:14729   */\n    tag_578:\n        /* \"#utility.yul\":14466:14735   */\n      pop\n        /* \"#utility.yul\":14415:14735   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14741:14921   */\n    tag_389:\n        /* \"#utility.yul\":14789:14866   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14786:14787   */\n      0x00\n        /* \"#utility.yul\":14779:14867   */\n      mstore\n        /* \"#utility.yul\":14886:14890   */\n      0x11\n        /* \"#utility.yul\":14883:14884   */\n      0x04\n        /* \"#utility.yul\":14876:14891   */\n      mstore\n        /* \"#utility.yul\":14910:14914   */\n      0x24\n        /* \"#utility.yul\":14907:14908   */\n      0x00\n        /* \"#utility.yul\":14900:14915   */\n      revert\n        /* \"#utility.yul\":14927:15337   */\n    tag_171:\n        /* \"#utility.yul\":14967:14974   */\n      0x00\n        /* \"#utility.yul\":14990:15010   */\n      tag_582\n        /* \"#utility.yul\":15008:15009   */\n      dup3\n        /* \"#utility.yul\":14990:15010   */\n      tag_352\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":14985:15010   */\n      swap2\n      pop\n        /* \"#utility.yul\":15024:15044   */\n      tag_583\n        /* \"#utility.yul\":15042:15043   */\n      dup4\n        /* \"#utility.yul\":15024:15044   */\n      tag_352\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":15019:15044   */\n      swap3\n      pop\n        /* \"#utility.yul\":15079:15080   */\n      dup3\n        /* \"#utility.yul\":15076:15077   */\n      dup3\n        /* \"#utility.yul\":15072:15081   */\n      mul\n        /* \"#utility.yul\":15101:15131   */\n      tag_584\n        /* \"#utility.yul\":15119:15130   */\n      dup2\n        /* \"#utility.yul\":15101:15131   */\n      tag_352\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":15090:15131   */\n      swap2\n      pop\n        /* \"#utility.yul\":15280:15281   */\n      dup3\n        /* \"#utility.yul\":15271:15278   */\n      dup3\n        /* \"#utility.yul\":15267:15282   */\n      div\n        /* \"#utility.yul\":15264:15265   */\n      dup5\n        /* \"#utility.yul\":15261:15283   */\n      eq\n        /* \"#utility.yul\":15241:15242   */\n      dup4\n        /* \"#utility.yul\":15234:15243   */\n      iszero\n        /* \"#utility.yul\":15214:15297   */\n      or\n        /* \"#utility.yul\":15191:15330   */\n      tag_585\n      jumpi\n        /* \"#utility.yul\":15310:15328   */\n      tag_586\n      tag_389\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":15191:15330   */\n    tag_585:\n        /* \"#utility.yul\":14975:15337   */\n      pop\n        /* \"#utility.yul\":14927:15337   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15343:15523   */\n    tag_390:\n        /* \"#utility.yul\":15391:15468   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15388:15389   */\n      0x00\n        /* \"#utility.yul\":15381:15469   */\n      mstore\n        /* \"#utility.yul\":15488:15492   */\n      0x12\n        /* \"#utility.yul\":15485:15486   */\n      0x04\n        /* \"#utility.yul\":15478:15493   */\n      mstore\n        /* \"#utility.yul\":15512:15516   */\n      0x24\n        /* \"#utility.yul\":15509:15510   */\n      0x00\n        /* \"#utility.yul\":15502:15517   */\n      revert\n        /* \"#utility.yul\":15529:15714   */\n    tag_173:\n        /* \"#utility.yul\":15569:15570   */\n      0x00\n        /* \"#utility.yul\":15586:15606   */\n      tag_589\n        /* \"#utility.yul\":15604:15605   */\n      dup3\n        /* \"#utility.yul\":15586:15606   */\n      tag_352\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":15581:15606   */\n      swap2\n      pop\n        /* \"#utility.yul\":15620:15640   */\n      tag_590\n        /* \"#utility.yul\":15638:15639   */\n      dup4\n        /* \"#utility.yul\":15620:15640   */\n      tag_352\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":15615:15640   */\n      swap3\n      pop\n        /* \"#utility.yul\":15659:15660   */\n      dup3\n        /* \"#utility.yul\":15649:15684   */\n      tag_591\n      jumpi\n        /* \"#utility.yul\":15664:15682   */\n      tag_592\n      tag_390\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":15649:15684   */\n    tag_591:\n        /* \"#utility.yul\":15706:15707   */\n      dup3\n        /* \"#utility.yul\":15703:15704   */\n      dup3\n        /* \"#utility.yul\":15699:15708   */\n      div\n        /* \"#utility.yul\":15694:15708   */\n      swap1\n      pop\n        /* \"#utility.yul\":15529:15714   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15720:15897   */\n    tag_391:\n        /* \"#utility.yul\":15860:15889   */\n      0x496e73756666696369656e74207374616b65642062616c616e63650000000000\n        /* \"#utility.yul\":15856:15857   */\n      0x00\n        /* \"#utility.yul\":15848:15854   */\n      dup3\n        /* \"#utility.yul\":15844:15858   */\n      add\n        /* \"#utility.yul\":15837:15890   */\n      mstore\n        /* \"#utility.yul\":15720:15897   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15903:16269   */\n    tag_392:\n        /* \"#utility.yul\":16045:16048   */\n      0x00\n        /* \"#utility.yul\":16066:16133   */\n      tag_595\n        /* \"#utility.yul\":16130:16132   */\n      0x1b\n        /* \"#utility.yul\":16125:16128   */\n      dup4\n        /* \"#utility.yul\":16066:16133   */\n      tag_356\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":16059:16133   */\n      swap2\n      pop\n        /* \"#utility.yul\":16142:16235   */\n      tag_596\n        /* \"#utility.yul\":16231:16234   */\n      dup3\n        /* \"#utility.yul\":16142:16235   */\n      tag_391\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":16260:16262   */\n      0x20\n        /* \"#utility.yul\":16255:16258   */\n      dup3\n        /* \"#utility.yul\":16251:16263   */\n      add\n        /* \"#utility.yul\":16244:16263   */\n      swap1\n      pop\n        /* \"#utility.yul\":15903:16269   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16275:16694   */\n    tag_185:\n        /* \"#utility.yul\":16441:16445   */\n      0x00\n        /* \"#utility.yul\":16479:16481   */\n      0x20\n        /* \"#utility.yul\":16468:16477   */\n      dup3\n        /* \"#utility.yul\":16464:16482   */\n      add\n        /* \"#utility.yul\":16456:16482   */\n      swap1\n      pop\n        /* \"#utility.yul\":16528:16537   */\n      dup2\n        /* \"#utility.yul\":16522:16526   */\n      dup2\n        /* \"#utility.yul\":16518:16538   */\n      sub\n        /* \"#utility.yul\":16514:16515   */\n      0x00\n        /* \"#utility.yul\":16503:16512   */\n      dup4\n        /* \"#utility.yul\":16499:16516   */\n      add\n        /* \"#utility.yul\":16492:16539   */\n      mstore\n        /* \"#utility.yul\":16556:16687   */\n      tag_598\n        /* \"#utility.yul\":16682:16686   */\n      dup2\n        /* \"#utility.yul\":16556:16687   */\n      tag_392\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":16548:16687   */\n      swap1\n      pop\n        /* \"#utility.yul\":16275:16694   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16700:16894   */\n    tag_187:\n        /* \"#utility.yul\":16740:16744   */\n      0x00\n        /* \"#utility.yul\":16760:16780   */\n      tag_600\n        /* \"#utility.yul\":16778:16779   */\n      dup3\n        /* \"#utility.yul\":16760:16780   */\n      tag_352\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":16755:16780   */\n      swap2\n      pop\n        /* \"#utility.yul\":16794:16814   */\n      tag_601\n        /* \"#utility.yul\":16812:16813   */\n      dup4\n        /* \"#utility.yul\":16794:16814   */\n      tag_352\n      jump\t// in\n    tag_601:\n        /* \"#utility.yul\":16789:16814   */\n      swap3\n      pop\n        /* \"#utility.yul\":16838:16839   */\n      dup3\n        /* \"#utility.yul\":16835:16836   */\n      dup3\n        /* \"#utility.yul\":16831:16840   */\n      sub\n        /* \"#utility.yul\":16823:16840   */\n      swap1\n      pop\n        /* \"#utility.yul\":16862:16863   */\n      dup2\n        /* \"#utility.yul\":16856:16860   */\n      dup2\n        /* \"#utility.yul\":16853:16864   */\n      gt\n        /* \"#utility.yul\":16850:16887   */\n      iszero\n      tag_602\n      jumpi\n        /* \"#utility.yul\":16867:16885   */\n      tag_603\n      tag_389\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":16850:16887   */\n    tag_602:\n        /* \"#utility.yul\":16700:16894   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16900:17232   */\n    tag_199:\n        /* \"#utility.yul\":17021:17025   */\n      0x00\n        /* \"#utility.yul\":17059:17061   */\n      0x40\n        /* \"#utility.yul\":17048:17057   */\n      dup3\n        /* \"#utility.yul\":17044:17062   */\n      add\n        /* \"#utility.yul\":17036:17062   */\n      swap1\n      pop\n        /* \"#utility.yul\":17072:17143   */\n      tag_605\n        /* \"#utility.yul\":17140:17141   */\n      0x00\n        /* \"#utility.yul\":17129:17138   */\n      dup4\n        /* \"#utility.yul\":17125:17142   */\n      add\n        /* \"#utility.yul\":17116:17122   */\n      dup6\n        /* \"#utility.yul\":17072:17143   */\n      tag_360\n      jump\t// in\n    tag_605:\n        /* \"#utility.yul\":17153:17225   */\n      tag_606\n        /* \"#utility.yul\":17221:17223   */\n      0x20\n        /* \"#utility.yul\":17210:17219   */\n      dup4\n        /* \"#utility.yul\":17206:17224   */\n      add\n        /* \"#utility.yul\":17197:17203   */\n      dup5\n        /* \"#utility.yul\":17153:17225   */\n      tag_360\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":16900:17232   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17238:17417   */\n    tag_393:\n        /* \"#utility.yul\":17378:17409   */\n      0x43616e6e6f7420656e7465722077697468207a65726f20746f6b656e73000000\n        /* \"#utility.yul\":17374:17375   */\n      0x00\n        /* \"#utility.yul\":17366:17372   */\n      dup3\n        /* \"#utility.yul\":17362:17376   */\n      add\n        /* \"#utility.yul\":17355:17410   */\n      mstore\n        /* \"#utility.yul\":17238:17417   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17423:17789   */\n    tag_394:\n        /* \"#utility.yul\":17565:17568   */\n      0x00\n        /* \"#utility.yul\":17586:17653   */\n      tag_609\n        /* \"#utility.yul\":17650:17652   */\n      0x1d\n        /* \"#utility.yul\":17645:17648   */\n      dup4\n        /* \"#utility.yul\":17586:17653   */\n      tag_356\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":17579:17653   */\n      swap2\n      pop\n        /* \"#utility.yul\":17662:17755   */\n      tag_610\n        /* \"#utility.yul\":17751:17754   */\n      dup3\n        /* \"#utility.yul\":17662:17755   */\n      tag_393\n      jump\t// in\n    tag_610:\n        /* \"#utility.yul\":17780:17782   */\n      0x20\n        /* \"#utility.yul\":17775:17778   */\n      dup3\n        /* \"#utility.yul\":17771:17783   */\n      add\n        /* \"#utility.yul\":17764:17783   */\n      swap1\n      pop\n        /* \"#utility.yul\":17423:17789   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17795:18214   */\n    tag_204:\n        /* \"#utility.yul\":17961:17965   */\n      0x00\n        /* \"#utility.yul\":17999:18001   */\n      0x20\n        /* \"#utility.yul\":17988:17997   */\n      dup3\n        /* \"#utility.yul\":17984:18002   */\n      add\n        /* \"#utility.yul\":17976:18002   */\n      swap1\n      pop\n        /* \"#utility.yul\":18048:18057   */\n      dup2\n        /* \"#utility.yul\":18042:18046   */\n      dup2\n        /* \"#utility.yul\":18038:18058   */\n      sub\n        /* \"#utility.yul\":18034:18035   */\n      0x00\n        /* \"#utility.yul\":18023:18032   */\n      dup4\n        /* \"#utility.yul\":18019:18036   */\n      add\n        /* \"#utility.yul\":18012:18059   */\n      mstore\n        /* \"#utility.yul\":18076:18207   */\n      tag_612\n        /* \"#utility.yul\":18202:18206   */\n      dup2\n        /* \"#utility.yul\":18076:18207   */\n      tag_394\n      jump\t// in\n    tag_612:\n        /* \"#utility.yul\":18068:18207   */\n      swap1\n      pop\n        /* \"#utility.yul\":17795:18214   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18220:18411   */\n    tag_208:\n        /* \"#utility.yul\":18260:18263   */\n      0x00\n        /* \"#utility.yul\":18279:18299   */\n      tag_614\n        /* \"#utility.yul\":18297:18298   */\n      dup3\n        /* \"#utility.yul\":18279:18299   */\n      tag_352\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":18274:18299   */\n      swap2\n      pop\n        /* \"#utility.yul\":18313:18333   */\n      tag_615\n        /* \"#utility.yul\":18331:18332   */\n      dup4\n        /* \"#utility.yul\":18313:18333   */\n      tag_352\n      jump\t// in\n    tag_615:\n        /* \"#utility.yul\":18308:18333   */\n      swap3\n      pop\n        /* \"#utility.yul\":18356:18357   */\n      dup3\n        /* \"#utility.yul\":18353:18354   */\n      dup3\n        /* \"#utility.yul\":18349:18358   */\n      add\n        /* \"#utility.yul\":18342:18358   */\n      swap1\n      pop\n        /* \"#utility.yul\":18377:18380   */\n      dup1\n        /* \"#utility.yul\":18374:18375   */\n      dup3\n        /* \"#utility.yul\":18371:18381   */\n      gt\n        /* \"#utility.yul\":18368:18404   */\n      iszero\n      tag_616\n      jumpi\n        /* \"#utility.yul\":18384:18402   */\n      tag_617\n      tag_389\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":18368:18404   */\n    tag_616:\n        /* \"#utility.yul\":18220:18411   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18417:18650   */\n    tag_215:\n        /* \"#utility.yul\":18456:18459   */\n      0x00\n        /* \"#utility.yul\":18479:18503   */\n      tag_619\n        /* \"#utility.yul\":18497:18502   */\n      dup3\n        /* \"#utility.yul\":18479:18503   */\n      tag_352\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":18470:18503   */\n      swap2\n      pop\n        /* \"#utility.yul\":18525:18591   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":18518:18523   */\n      dup3\n        /* \"#utility.yul\":18515:18592   */\n      sub\n        /* \"#utility.yul\":18512:18615   */\n      tag_620\n      jumpi\n        /* \"#utility.yul\":18595:18613   */\n      tag_621\n      tag_389\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":18512:18615   */\n    tag_620:\n        /* \"#utility.yul\":18642:18643   */\n      0x01\n        /* \"#utility.yul\":18635:18640   */\n      dup3\n        /* \"#utility.yul\":18631:18644   */\n      add\n        /* \"#utility.yul\":18624:18644   */\n      swap1\n      pop\n        /* \"#utility.yul\":18417:18650   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18656:18797   */\n    tag_395:\n        /* \"#utility.yul\":18705:18709   */\n      0x00\n        /* \"#utility.yul\":18728:18731   */\n      dup2\n        /* \"#utility.yul\":18720:18731   */\n      swap1\n      pop\n        /* \"#utility.yul\":18751:18754   */\n      dup2\n        /* \"#utility.yul\":18748:18749   */\n      0x00\n        /* \"#utility.yul\":18741:18755   */\n      mstore\n        /* \"#utility.yul\":18785:18789   */\n      0x20\n        /* \"#utility.yul\":18782:18783   */\n      0x00\n        /* \"#utility.yul\":18772:18790   */\n      keccak256\n        /* \"#utility.yul\":18764:18790   */\n      swap1\n      pop\n        /* \"#utility.yul\":18656:18797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18803:18896   */\n    tag_396:\n        /* \"#utility.yul\":18840:18846   */\n      0x00\n        /* \"#utility.yul\":18887:18889   */\n      0x20\n        /* \"#utility.yul\":18882:18884   */\n      0x1f\n        /* \"#utility.yul\":18875:18880   */\n      dup4\n        /* \"#utility.yul\":18871:18885   */\n      add\n        /* \"#utility.yul\":18867:18890   */\n      div\n        /* \"#utility.yul\":18857:18890   */\n      swap1\n      pop\n        /* \"#utility.yul\":18803:18896   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18902:19009   */\n    tag_397:\n        /* \"#utility.yul\":18946:18954   */\n      0x00\n        /* \"#utility.yul\":18996:19001   */\n      dup3\n        /* \"#utility.yul\":18990:18994   */\n      dup3\n        /* \"#utility.yul\":18986:19002   */\n      shl\n        /* \"#utility.yul\":18965:19002   */\n      swap1\n      pop\n        /* \"#utility.yul\":18902:19009   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19015:19408   */\n    tag_398:\n        /* \"#utility.yul\":19084:19090   */\n      0x00\n        /* \"#utility.yul\":19134:19135   */\n      0x08\n        /* \"#utility.yul\":19122:19132   */\n      dup4\n        /* \"#utility.yul\":19118:19136   */\n      mul\n        /* \"#utility.yul\":19157:19254   */\n      tag_626\n        /* \"#utility.yul\":19187:19253   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":19176:19185   */\n      dup3\n        /* \"#utility.yul\":19157:19254   */\n      tag_397\n      jump\t// in\n    tag_626:\n        /* \"#utility.yul\":19275:19314   */\n      tag_627\n        /* \"#utility.yul\":19305:19313   */\n      dup7\n        /* \"#utility.yul\":19294:19303   */\n      dup4\n        /* \"#utility.yul\":19275:19314   */\n      tag_397\n      jump\t// in\n    tag_627:\n        /* \"#utility.yul\":19263:19314   */\n      swap6\n      pop\n        /* \"#utility.yul\":19347:19351   */\n      dup1\n        /* \"#utility.yul\":19343:19352   */\n      not\n        /* \"#utility.yul\":19336:19341   */\n      dup5\n        /* \"#utility.yul\":19332:19353   */\n      and\n        /* \"#utility.yul\":19323:19353   */\n      swap4\n      pop\n        /* \"#utility.yul\":19396:19400   */\n      dup1\n        /* \"#utility.yul\":19386:19394   */\n      dup7\n        /* \"#utility.yul\":19382:19401   */\n      and\n        /* \"#utility.yul\":19375:19380   */\n      dup5\n        /* \"#utility.yul\":19372:19402   */\n      or\n        /* \"#utility.yul\":19362:19402   */\n      swap3\n      pop\n        /* \"#utility.yul\":19091:19408   */\n      pop\n      pop\n        /* \"#utility.yul\":19015:19408   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19414:19474   */\n    tag_399:\n        /* \"#utility.yul\":19442:19445   */\n      0x00\n        /* \"#utility.yul\":19463:19468   */\n      dup2\n        /* \"#utility.yul\":19456:19468   */\n      swap1\n      pop\n        /* \"#utility.yul\":19414:19474   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19480:19622   */\n    tag_400:\n        /* \"#utility.yul\":19530:19539   */\n      0x00\n        /* \"#utility.yul\":19563:19616   */\n      tag_630\n        /* \"#utility.yul\":19581:19615   */\n      tag_631\n        /* \"#utility.yul\":19590:19614   */\n      tag_632\n        /* \"#utility.yul\":19608:19613   */\n      dup5\n        /* \"#utility.yul\":19590:19614   */\n      tag_352\n      jump\t// in\n    tag_632:\n        /* \"#utility.yul\":19581:19615   */\n      tag_399\n      jump\t// in\n    tag_631:\n        /* \"#utility.yul\":19563:19616   */\n      tag_352\n      jump\t// in\n    tag_630:\n        /* \"#utility.yul\":19550:19616   */\n      swap1\n      pop\n        /* \"#utility.yul\":19480:19622   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19628:19703   */\n    tag_401:\n        /* \"#utility.yul\":19671:19674   */\n      0x00\n        /* \"#utility.yul\":19692:19697   */\n      dup2\n        /* \"#utility.yul\":19685:19697   */\n      swap1\n      pop\n        /* \"#utility.yul\":19628:19703   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19709:19978   */\n    tag_402:\n        /* \"#utility.yul\":19819:19858   */\n      tag_635\n        /* \"#utility.yul\":19850:19857   */\n      dup4\n        /* \"#utility.yul\":19819:19858   */\n      tag_400\n      jump\t// in\n    tag_635:\n        /* \"#utility.yul\":19880:19971   */\n      tag_636\n        /* \"#utility.yul\":19929:19970   */\n      tag_637\n        /* \"#utility.yul\":19953:19969   */\n      dup3\n        /* \"#utility.yul\":19929:19970   */\n      tag_401\n      jump\t// in\n    tag_637:\n        /* \"#utility.yul\":19921:19927   */\n      dup5\n        /* \"#utility.yul\":19914:19918   */\n      dup5\n        /* \"#utility.yul\":19908:19919   */\n      sload\n        /* \"#utility.yul\":19880:19971   */\n      tag_398\n      jump\t// in\n    tag_636:\n        /* \"#utility.yul\":19874:19878   */\n      dup3\n        /* \"#utility.yul\":19867:19972   */\n      sstore\n        /* \"#utility.yul\":19785:19978   */\n      pop\n        /* \"#utility.yul\":19709:19978   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19984:20057   */\n    tag_403:\n        /* \"#utility.yul\":20029:20032   */\n      0x00\n        /* \"#utility.yul\":20050:20051   */\n      0x00\n        /* \"#utility.yul\":20043:20051   */\n      swap1\n      pop\n        /* \"#utility.yul\":19984:20057   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":20063:20252   */\n    tag_404:\n        /* \"#utility.yul\":20140:20172   */\n      tag_640\n      tag_403\n      jump\t// in\n    tag_640:\n        /* \"#utility.yul\":20181:20246   */\n      tag_641\n        /* \"#utility.yul\":20239:20245   */\n      dup2\n        /* \"#utility.yul\":20231:20237   */\n      dup5\n        /* \"#utility.yul\":20225:20229   */\n      dup5\n        /* \"#utility.yul\":20181:20246   */\n      tag_402\n      jump\t// in\n    tag_641:\n        /* \"#utility.yul\":20116:20252   */\n      pop\n        /* \"#utility.yul\":20063:20252   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20258:20444   */\n    tag_405:\n        /* \"#utility.yul\":20318:20438   */\n    tag_643:\n        /* \"#utility.yul\":20335:20338   */\n      dup2\n        /* \"#utility.yul\":20328:20333   */\n      dup2\n        /* \"#utility.yul\":20325:20339   */\n      lt\n        /* \"#utility.yul\":20318:20438   */\n      iszero\n      tag_645\n      jumpi\n        /* \"#utility.yul\":20389:20428   */\n      tag_646\n        /* \"#utility.yul\":20426:20427   */\n      0x00\n        /* \"#utility.yul\":20419:20424   */\n      dup3\n        /* \"#utility.yul\":20389:20428   */\n      tag_404\n      jump\t// in\n    tag_646:\n        /* \"#utility.yul\":20362:20363   */\n      0x01\n        /* \"#utility.yul\":20355:20360   */\n      dup2\n        /* \"#utility.yul\":20351:20364   */\n      add\n        /* \"#utility.yul\":20342:20364   */\n      swap1\n      pop\n        /* \"#utility.yul\":20318:20438   */\n      jump(tag_643)\n    tag_645:\n        /* \"#utility.yul\":20258:20444   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20450:20993   */\n    tag_406:\n        /* \"#utility.yul\":20551:20553   */\n      0x1f\n        /* \"#utility.yul\":20546:20549   */\n      dup3\n        /* \"#utility.yul\":20543:20554   */\n      gt\n        /* \"#utility.yul\":20540:20986   */\n      iszero\n      tag_648\n      jumpi\n        /* \"#utility.yul\":20585:20623   */\n      tag_649\n        /* \"#utility.yul\":20617:20622   */\n      dup2\n        /* \"#utility.yul\":20585:20623   */\n      tag_395\n      jump\t// in\n    tag_649:\n        /* \"#utility.yul\":20669:20698   */\n      tag_650\n        /* \"#utility.yul\":20687:20697   */\n      dup5\n        /* \"#utility.yul\":20669:20698   */\n      tag_396\n      jump\t// in\n    tag_650:\n        /* \"#utility.yul\":20659:20667   */\n      dup2\n        /* \"#utility.yul\":20655:20699   */\n      add\n        /* \"#utility.yul\":20852:20854   */\n      0x20\n        /* \"#utility.yul\":20840:20850   */\n      dup6\n        /* \"#utility.yul\":20837:20855   */\n      lt\n        /* \"#utility.yul\":20834:20883   */\n      iszero\n      tag_651\n      jumpi\n        /* \"#utility.yul\":20873:20881   */\n      dup2\n        /* \"#utility.yul\":20858:20881   */\n      swap1\n      pop\n        /* \"#utility.yul\":20834:20883   */\n    tag_651:\n        /* \"#utility.yul\":20896:20976   */\n      tag_652\n        /* \"#utility.yul\":20952:20974   */\n      tag_653\n        /* \"#utility.yul\":20970:20973   */\n      dup6\n        /* \"#utility.yul\":20952:20974   */\n      tag_396\n      jump\t// in\n    tag_653:\n        /* \"#utility.yul\":20942:20950   */\n      dup4\n        /* \"#utility.yul\":20938:20975   */\n      add\n        /* \"#utility.yul\":20925:20936   */\n      dup3\n        /* \"#utility.yul\":20896:20976   */\n      tag_405\n      jump\t// in\n    tag_652:\n        /* \"#utility.yul\":20555:20986   */\n      pop\n      pop\n        /* \"#utility.yul\":20540:20986   */\n    tag_648:\n        /* \"#utility.yul\":20450:20993   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20999:21116   */\n    tag_407:\n        /* \"#utility.yul\":21053:21061   */\n      0x00\n        /* \"#utility.yul\":21103:21108   */\n      dup3\n        /* \"#utility.yul\":21097:21101   */\n      dup3\n        /* \"#utility.yul\":21093:21109   */\n      shr\n        /* \"#utility.yul\":21072:21109   */\n      swap1\n      pop\n        /* \"#utility.yul\":20999:21116   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21122:21291   */\n    tag_408:\n        /* \"#utility.yul\":21166:21172   */\n      0x00\n        /* \"#utility.yul\":21199:21250   */\n      tag_656\n        /* \"#utility.yul\":21247:21248   */\n      0x00\n        /* \"#utility.yul\":21243:21249   */\n      not\n        /* \"#utility.yul\":21235:21240   */\n      dup5\n        /* \"#utility.yul\":21232:21233   */\n      0x08\n        /* \"#utility.yul\":21228:21241   */\n      mul\n        /* \"#utility.yul\":21199:21250   */\n      tag_407\n      jump\t// in\n    tag_656:\n        /* \"#utility.yul\":21195:21251   */\n      not\n        /* \"#utility.yul\":21280:21284   */\n      dup1\n        /* \"#utility.yul\":21274:21278   */\n      dup4\n        /* \"#utility.yul\":21270:21285   */\n      and\n        /* \"#utility.yul\":21260:21285   */\n      swap2\n      pop\n        /* \"#utility.yul\":21173:21291   */\n      pop\n        /* \"#utility.yul\":21122:21291   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21296:21591   */\n    tag_409:\n        /* \"#utility.yul\":21372:21376   */\n      0x00\n        /* \"#utility.yul\":21518:21547   */\n      tag_658\n        /* \"#utility.yul\":21543:21546   */\n      dup4\n        /* \"#utility.yul\":21537:21541   */\n      dup4\n        /* \"#utility.yul\":21518:21547   */\n      tag_408\n      jump\t// in\n    tag_658:\n        /* \"#utility.yul\":21510:21547   */\n      swap2\n      pop\n        /* \"#utility.yul\":21580:21583   */\n      dup3\n        /* \"#utility.yul\":21577:21578   */\n      0x02\n        /* \"#utility.yul\":21573:21584   */\n      mul\n        /* \"#utility.yul\":21567:21571   */\n      dup3\n        /* \"#utility.yul\":21564:21585   */\n      or\n        /* \"#utility.yul\":21556:21585   */\n      swap1\n      pop\n        /* \"#utility.yul\":21296:21591   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21596:22991   */\n    tag_217:\n        /* \"#utility.yul\":21713:21750   */\n      tag_660\n        /* \"#utility.yul\":21746:21749   */\n      dup3\n        /* \"#utility.yul\":21713:21750   */\n      tag_355\n      jump\t// in\n    tag_660:\n        /* \"#utility.yul\":21815:21833   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":21807:21813   */\n      dup2\n        /* \"#utility.yul\":21804:21834   */\n      gt\n        /* \"#utility.yul\":21801:21857   */\n      iszero\n      tag_661\n      jumpi\n        /* \"#utility.yul\":21837:21855   */\n      tag_662\n      tag_372\n      jump\t// in\n    tag_662:\n        /* \"#utility.yul\":21801:21857   */\n    tag_661:\n        /* \"#utility.yul\":21881:21919   */\n      tag_663\n        /* \"#utility.yul\":21913:21917   */\n      dup3\n        /* \"#utility.yul\":21907:21918   */\n      sload\n        /* \"#utility.yul\":21881:21919   */\n      tag_147\n      jump\t// in\n    tag_663:\n        /* \"#utility.yul\":21966:22033   */\n      tag_664\n        /* \"#utility.yul\":22026:22032   */\n      dup3\n        /* \"#utility.yul\":22018:22024   */\n      dup3\n        /* \"#utility.yul\":22012:22016   */\n      dup6\n        /* \"#utility.yul\":21966:22033   */\n      tag_406\n      jump\t// in\n    tag_664:\n        /* \"#utility.yul\":22060:22061   */\n      0x00\n        /* \"#utility.yul\":22084:22088   */\n      0x20\n        /* \"#utility.yul\":22071:22088   */\n      swap1\n      pop\n        /* \"#utility.yul\":22116:22118   */\n      0x1f\n        /* \"#utility.yul\":22108:22114   */\n      dup4\n        /* \"#utility.yul\":22105:22119   */\n      gt\n        /* \"#utility.yul\":22133:22134   */\n      0x01\n        /* \"#utility.yul\":22128:22746   */\n      dup2\n      eq\n      tag_666\n      jumpi\n        /* \"#utility.yul\":22790:22791   */\n      0x00\n        /* \"#utility.yul\":22807:22813   */\n      dup5\n        /* \"#utility.yul\":22804:22881   */\n      iszero\n      tag_667\n      jumpi\n        /* \"#utility.yul\":22856:22865   */\n      dup3\n        /* \"#utility.yul\":22851:22854   */\n      dup8\n        /* \"#utility.yul\":22847:22866   */\n      add\n        /* \"#utility.yul\":22841:22867   */\n      mload\n        /* \"#utility.yul\":22832:22867   */\n      swap1\n      pop\n        /* \"#utility.yul\":22804:22881   */\n    tag_667:\n        /* \"#utility.yul\":22907:22974   */\n      tag_668\n        /* \"#utility.yul\":22967:22973   */\n      dup6\n        /* \"#utility.yul\":22960:22965   */\n      dup3\n        /* \"#utility.yul\":22907:22974   */\n      tag_409\n      jump\t// in\n    tag_668:\n        /* \"#utility.yul\":22901:22905   */\n      dup7\n        /* \"#utility.yul\":22894:22975   */\n      sstore\n        /* \"#utility.yul\":22763:22985   */\n      pop\n        /* \"#utility.yul\":22098:22985   */\n      jump(tag_665)\n        /* \"#utility.yul\":22128:22746   */\n    tag_666:\n        /* \"#utility.yul\":22180:22184   */\n      0x1f\n        /* \"#utility.yul\":22176:22185   */\n      not\n        /* \"#utility.yul\":22168:22174   */\n      dup5\n        /* \"#utility.yul\":22164:22186   */\n      and\n        /* \"#utility.yul\":22214:22251   */\n      tag_669\n        /* \"#utility.yul\":22246:22250   */\n      dup7\n        /* \"#utility.yul\":22214:22251   */\n      tag_395\n      jump\t// in\n    tag_669:\n        /* \"#utility.yul\":22273:22274   */\n      0x00\n        /* \"#utility.yul\":22287:22495   */\n    tag_670:\n        /* \"#utility.yul\":22301:22308   */\n      dup3\n        /* \"#utility.yul\":22298:22299   */\n      dup2\n        /* \"#utility.yul\":22295:22309   */\n      lt\n        /* \"#utility.yul\":22287:22495   */\n      iszero\n      tag_672\n      jumpi\n        /* \"#utility.yul\":22380:22389   */\n      dup5\n        /* \"#utility.yul\":22375:22378   */\n      dup10\n        /* \"#utility.yul\":22371:22390   */\n      add\n        /* \"#utility.yul\":22365:22391   */\n      mload\n        /* \"#utility.yul\":22357:22363   */\n      dup3\n        /* \"#utility.yul\":22350:22392   */\n      sstore\n        /* \"#utility.yul\":22431:22432   */\n      0x01\n        /* \"#utility.yul\":22423:22429   */\n      dup3\n        /* \"#utility.yul\":22419:22433   */\n      add\n        /* \"#utility.yul\":22409:22433   */\n      swap2\n      pop\n        /* \"#utility.yul\":22478:22480   */\n      0x20\n        /* \"#utility.yul\":22467:22476   */\n      dup6\n        /* \"#utility.yul\":22463:22481   */\n      add\n        /* \"#utility.yul\":22450:22481   */\n      swap5\n      pop\n        /* \"#utility.yul\":22324:22328   */\n      0x20\n        /* \"#utility.yul\":22321:22322   */\n      dup2\n        /* \"#utility.yul\":22317:22329   */\n      add\n        /* \"#utility.yul\":22312:22329   */\n      swap1\n      pop\n        /* \"#utility.yul\":22287:22495   */\n      jump(tag_670)\n    tag_672:\n        /* \"#utility.yul\":22523:22529   */\n      dup7\n        /* \"#utility.yul\":22514:22521   */\n      dup4\n        /* \"#utility.yul\":22511:22530   */\n      lt\n        /* \"#utility.yul\":22508:22687   */\n      iszero\n      tag_673\n      jumpi\n        /* \"#utility.yul\":22581:22590   */\n      dup5\n        /* \"#utility.yul\":22576:22579   */\n      dup10\n        /* \"#utility.yul\":22572:22591   */\n      add\n        /* \"#utility.yul\":22566:22592   */\n      mload\n        /* \"#utility.yul\":22624:22672   */\n      tag_674\n        /* \"#utility.yul\":22666:22670   */\n      0x1f\n        /* \"#utility.yul\":22658:22664   */\n      dup10\n        /* \"#utility.yul\":22654:22671   */\n      and\n        /* \"#utility.yul\":22643:22652   */\n      dup3\n        /* \"#utility.yul\":22624:22672   */\n      tag_408\n      jump\t// in\n    tag_674:\n        /* \"#utility.yul\":22616:22622   */\n      dup4\n        /* \"#utility.yul\":22609:22673   */\n      sstore\n        /* \"#utility.yul\":22531:22687   */\n      pop\n        /* \"#utility.yul\":22508:22687   */\n    tag_673:\n        /* \"#utility.yul\":22733:22734   */\n      0x01\n        /* \"#utility.yul\":22729:22730   */\n      0x02\n        /* \"#utility.yul\":22721:22727   */\n      dup9\n        /* \"#utility.yul\":22717:22731   */\n      mul\n        /* \"#utility.yul\":22713:22735   */\n      add\n        /* \"#utility.yul\":22707:22711   */\n      dup9\n        /* \"#utility.yul\":22700:22736   */\n      sstore\n        /* \"#utility.yul\":22135:22746   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":22098:22985   */\n    tag_665:\n      pop\n        /* \"#utility.yul\":21688:22991   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":21596:22991   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22997:23177   */\n    tag_410:\n        /* \"#utility.yul\":23137:23169   */\n      0x4e6f207061727469636970616e747320696e20746865206c6f74746572790000\n        /* \"#utility.yul\":23133:23134   */\n      0x00\n        /* \"#utility.yul\":23125:23131   */\n      dup3\n        /* \"#utility.yul\":23121:23135   */\n      add\n        /* \"#utility.yul\":23114:23170   */\n      mstore\n        /* \"#utility.yul\":22997:23177   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23183:23549   */\n    tag_411:\n        /* \"#utility.yul\":23325:23328   */\n      0x00\n        /* \"#utility.yul\":23346:23413   */\n      tag_677\n        /* \"#utility.yul\":23410:23412   */\n      0x1e\n        /* \"#utility.yul\":23405:23408   */\n      dup4\n        /* \"#utility.yul\":23346:23413   */\n      tag_356\n      jump\t// in\n    tag_677:\n        /* \"#utility.yul\":23339:23413   */\n      swap2\n      pop\n        /* \"#utility.yul\":23422:23515   */\n      tag_678\n        /* \"#utility.yul\":23511:23514   */\n      dup3\n        /* \"#utility.yul\":23422:23515   */\n      tag_410\n      jump\t// in\n    tag_678:\n        /* \"#utility.yul\":23540:23542   */\n      0x20\n        /* \"#utility.yul\":23535:23538   */\n      dup3\n        /* \"#utility.yul\":23531:23543   */\n      add\n        /* \"#utility.yul\":23524:23543   */\n      swap1\n      pop\n        /* \"#utility.yul\":23183:23549   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23555:23974   */\n    tag_224:\n        /* \"#utility.yul\":23721:23725   */\n      0x00\n        /* \"#utility.yul\":23759:23761   */\n      0x20\n        /* \"#utility.yul\":23748:23757   */\n      dup3\n        /* \"#utility.yul\":23744:23762   */\n      add\n        /* \"#utility.yul\":23736:23762   */\n      swap1\n      pop\n        /* \"#utility.yul\":23808:23817   */\n      dup2\n        /* \"#utility.yul\":23802:23806   */\n      dup2\n        /* \"#utility.yul\":23798:23818   */\n      sub\n        /* \"#utility.yul\":23794:23795   */\n      0x00\n        /* \"#utility.yul\":23783:23792   */\n      dup4\n        /* \"#utility.yul\":23779:23796   */\n      add\n        /* \"#utility.yul\":23772:23819   */\n      mstore\n        /* \"#utility.yul\":23836:23967   */\n      tag_680\n        /* \"#utility.yul\":23962:23966   */\n      dup2\n        /* \"#utility.yul\":23836:23967   */\n      tag_411\n      jump\t// in\n    tag_680:\n        /* \"#utility.yul\":23828:23967   */\n      swap1\n      pop\n        /* \"#utility.yul\":23555:23974   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23980:24059   */\n    tag_412:\n        /* \"#utility.yul\":24019:24026   */\n      0x00\n        /* \"#utility.yul\":24048:24053   */\n      dup2\n        /* \"#utility.yul\":24037:24053   */\n      swap1\n      pop\n        /* \"#utility.yul\":23980:24059   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24065:24222   */\n    tag_413:\n        /* \"#utility.yul\":24170:24215   */\n      tag_683\n        /* \"#utility.yul\":24190:24214   */\n      tag_684\n        /* \"#utility.yul\":24208:24213   */\n      dup3\n        /* \"#utility.yul\":24190:24214   */\n      tag_352\n      jump\t// in\n    tag_684:\n        /* \"#utility.yul\":24170:24215   */\n      tag_412\n      jump\t// in\n    tag_683:\n        /* \"#utility.yul\":24165:24168   */\n      dup3\n        /* \"#utility.yul\":24158:24216   */\n      mstore\n        /* \"#utility.yul\":24065:24222   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24228:24625   */\n    tag_226:\n        /* \"#utility.yul\":24368:24371   */\n      0x00\n        /* \"#utility.yul\":24383:24458   */\n      tag_686\n        /* \"#utility.yul\":24454:24457   */\n      dup3\n        /* \"#utility.yul\":24445:24451   */\n      dup6\n        /* \"#utility.yul\":24383:24458   */\n      tag_413\n      jump\t// in\n    tag_686:\n        /* \"#utility.yul\":24483:24485   */\n      0x20\n        /* \"#utility.yul\":24478:24481   */\n      dup3\n        /* \"#utility.yul\":24474:24486   */\n      add\n        /* \"#utility.yul\":24467:24486   */\n      swap2\n      pop\n        /* \"#utility.yul\":24496:24571   */\n      tag_687\n        /* \"#utility.yul\":24567:24570   */\n      dup3\n        /* \"#utility.yul\":24558:24564   */\n      dup5\n        /* \"#utility.yul\":24496:24571   */\n      tag_413\n      jump\t// in\n    tag_687:\n        /* \"#utility.yul\":24596:24598   */\n      0x20\n        /* \"#utility.yul\":24591:24594   */\n      dup3\n        /* \"#utility.yul\":24587:24599   */\n      add\n        /* \"#utility.yul\":24580:24599   */\n      swap2\n      pop\n        /* \"#utility.yul\":24616:24619   */\n      dup2\n        /* \"#utility.yul\":24609:24619   */\n      swap1\n      pop\n        /* \"#utility.yul\":24228:24625   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24631:24807   */\n    tag_228:\n        /* \"#utility.yul\":24663:24664   */\n      0x00\n        /* \"#utility.yul\":24680:24700   */\n      tag_689\n        /* \"#utility.yul\":24698:24699   */\n      dup3\n        /* \"#utility.yul\":24680:24700   */\n      tag_352\n      jump\t// in\n    tag_689:\n        /* \"#utility.yul\":24675:24700   */\n      swap2\n      pop\n        /* \"#utility.yul\":24714:24734   */\n      tag_690\n        /* \"#utility.yul\":24732:24733   */\n      dup4\n        /* \"#utility.yul\":24714:24734   */\n      tag_352\n      jump\t// in\n    tag_690:\n        /* \"#utility.yul\":24709:24734   */\n      swap3\n      pop\n        /* \"#utility.yul\":24753:24754   */\n      dup3\n        /* \"#utility.yul\":24743:24778   */\n      tag_691\n      jumpi\n        /* \"#utility.yul\":24758:24776   */\n      tag_692\n      tag_390\n      jump\t// in\n    tag_692:\n        /* \"#utility.yul\":24743:24778   */\n    tag_691:\n        /* \"#utility.yul\":24799:24800   */\n      dup3\n        /* \"#utility.yul\":24796:24797   */\n      dup3\n        /* \"#utility.yul\":24792:24801   */\n      mod\n        /* \"#utility.yul\":24787:24801   */\n      swap1\n      pop\n        /* \"#utility.yul\":24631:24807   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24813:24993   */\n    tag_231:\n        /* \"#utility.yul\":24861:24938   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":24858:24859   */\n      0x00\n        /* \"#utility.yul\":24851:24939   */\n      mstore\n        /* \"#utility.yul\":24958:24962   */\n      0x32\n        /* \"#utility.yul\":24955:24956   */\n      0x04\n        /* \"#utility.yul\":24948:24963   */\n      mstore\n        /* \"#utility.yul\":24982:24986   */\n      0x24\n        /* \"#utility.yul\":24979:24980   */\n      0x00\n        /* \"#utility.yul\":24972:24987   */\n      revert\n        /* \"#utility.yul\":24999:25173   */\n    tag_414:\n        /* \"#utility.yul\":25139:25165   */\n      0x43616e6e6f74207374616b65207a65726f20746f6b656e730000000000000000\n        /* \"#utility.yul\":25135:25136   */\n      0x00\n        /* \"#utility.yul\":25127:25133   */\n      dup3\n        /* \"#utility.yul\":25123:25137   */\n      add\n        /* \"#utility.yul\":25116:25166   */\n      mstore\n        /* \"#utility.yul\":24999:25173   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25179:25545   */\n    tag_415:\n        /* \"#utility.yul\":25321:25324   */\n      0x00\n        /* \"#utility.yul\":25342:25409   */\n      tag_696\n        /* \"#utility.yul\":25406:25408   */\n      0x18\n        /* \"#utility.yul\":25401:25404   */\n      dup4\n        /* \"#utility.yul\":25342:25409   */\n      tag_356\n      jump\t// in\n    tag_696:\n        /* \"#utility.yul\":25335:25409   */\n      swap2\n      pop\n        /* \"#utility.yul\":25418:25511   */\n      tag_697\n        /* \"#utility.yul\":25507:25510   */\n      dup3\n        /* \"#utility.yul\":25418:25511   */\n      tag_414\n      jump\t// in\n    tag_697:\n        /* \"#utility.yul\":25536:25538   */\n      0x20\n        /* \"#utility.yul\":25531:25534   */\n      dup3\n        /* \"#utility.yul\":25527:25539   */\n      add\n        /* \"#utility.yul\":25520:25539   */\n      swap1\n      pop\n        /* \"#utility.yul\":25179:25545   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25551:25970   */\n    tag_246:\n        /* \"#utility.yul\":25717:25721   */\n      0x00\n        /* \"#utility.yul\":25755:25757   */\n      0x20\n        /* \"#utility.yul\":25744:25753   */\n      dup3\n        /* \"#utility.yul\":25740:25758   */\n      add\n        /* \"#utility.yul\":25732:25758   */\n      swap1\n      pop\n        /* \"#utility.yul\":25804:25813   */\n      dup2\n        /* \"#utility.yul\":25798:25802   */\n      dup2\n        /* \"#utility.yul\":25794:25814   */\n      sub\n        /* \"#utility.yul\":25790:25791   */\n      0x00\n        /* \"#utility.yul\":25779:25788   */\n      dup4\n        /* \"#utility.yul\":25775:25792   */\n      add\n        /* \"#utility.yul\":25768:25815   */\n      mstore\n        /* \"#utility.yul\":25832:25963   */\n      tag_699\n        /* \"#utility.yul\":25958:25962   */\n      dup2\n        /* \"#utility.yul\":25832:25963   */\n      tag_415\n      jump\t// in\n    tag_699:\n        /* \"#utility.yul\":25824:25963   */\n      swap1\n      pop\n        /* \"#utility.yul\":25551:25970   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25976:26145   */\n    tag_416:\n        /* \"#utility.yul\":26116:26137   */\n      0x496e76616c69642070726f706f73616c20494400000000000000000000000000\n        /* \"#utility.yul\":26112:26113   */\n      0x00\n        /* \"#utility.yul\":26104:26110   */\n      dup3\n        /* \"#utility.yul\":26100:26114   */\n      add\n        /* \"#utility.yul\":26093:26138   */\n      mstore\n        /* \"#utility.yul\":25976:26145   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26151:26517   */\n    tag_417:\n        /* \"#utility.yul\":26293:26296   */\n      0x00\n        /* \"#utility.yul\":26314:26381   */\n      tag_702\n        /* \"#utility.yul\":26378:26380   */\n      0x13\n        /* \"#utility.yul\":26373:26376   */\n      dup4\n        /* \"#utility.yul\":26314:26381   */\n      tag_356\n      jump\t// in\n    tag_702:\n        /* \"#utility.yul\":26307:26381   */\n      swap2\n      pop\n        /* \"#utility.yul\":26390:26483   */\n      tag_703\n        /* \"#utility.yul\":26479:26482   */\n      dup3\n        /* \"#utility.yul\":26390:26483   */\n      tag_416\n      jump\t// in\n    tag_703:\n        /* \"#utility.yul\":26508:26510   */\n      0x20\n        /* \"#utility.yul\":26503:26506   */\n      dup3\n        /* \"#utility.yul\":26499:26511   */\n      add\n        /* \"#utility.yul\":26492:26511   */\n      swap1\n      pop\n        /* \"#utility.yul\":26151:26517   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26523:26942   */\n    tag_278:\n        /* \"#utility.yul\":26689:26693   */\n      0x00\n        /* \"#utility.yul\":26727:26729   */\n      0x20\n        /* \"#utility.yul\":26716:26725   */\n      dup3\n        /* \"#utility.yul\":26712:26730   */\n      add\n        /* \"#utility.yul\":26704:26730   */\n      swap1\n      pop\n        /* \"#utility.yul\":26776:26785   */\n      dup2\n        /* \"#utility.yul\":26770:26774   */\n      dup2\n        /* \"#utility.yul\":26766:26786   */\n      sub\n        /* \"#utility.yul\":26762:26763   */\n      0x00\n        /* \"#utility.yul\":26751:26760   */\n      dup4\n        /* \"#utility.yul\":26747:26764   */\n      add\n        /* \"#utility.yul\":26740:26787   */\n      mstore\n        /* \"#utility.yul\":26804:26935   */\n      tag_705\n        /* \"#utility.yul\":26930:26934   */\n      dup2\n        /* \"#utility.yul\":26804:26935   */\n      tag_417\n      jump\t// in\n    tag_705:\n        /* \"#utility.yul\":26796:26935   */\n      swap1\n      pop\n        /* \"#utility.yul\":26523:26942   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26948:27122   */\n    tag_418:\n        /* \"#utility.yul\":27088:27114   */\n      0x4e6f207374616b656420746f6b656e7320746f20766f74650000000000000000\n        /* \"#utility.yul\":27084:27085   */\n      0x00\n        /* \"#utility.yul\":27076:27082   */\n      dup3\n        /* \"#utility.yul\":27072:27086   */\n      add\n        /* \"#utility.yul\":27065:27115   */\n      mstore\n        /* \"#utility.yul\":26948:27122   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27128:27494   */\n    tag_419:\n        /* \"#utility.yul\":27270:27273   */\n      0x00\n        /* \"#utility.yul\":27291:27358   */\n      tag_708\n        /* \"#utility.yul\":27355:27357   */\n      0x18\n        /* \"#utility.yul\":27350:27353   */\n      dup4\n        /* \"#utility.yul\":27291:27358   */\n      tag_356\n      jump\t// in\n    tag_708:\n        /* \"#utility.yul\":27284:27358   */\n      swap2\n      pop\n        /* \"#utility.yul\":27367:27460   */\n      tag_709\n        /* \"#utility.yul\":27456:27459   */\n      dup3\n        /* \"#utility.yul\":27367:27460   */\n      tag_418\n      jump\t// in\n    tag_709:\n        /* \"#utility.yul\":27485:27487   */\n      0x20\n        /* \"#utility.yul\":27480:27483   */\n      dup3\n        /* \"#utility.yul\":27476:27488   */\n      add\n        /* \"#utility.yul\":27469:27488   */\n      swap1\n      pop\n        /* \"#utility.yul\":27128:27494   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27500:27919   */\n    tag_281:\n        /* \"#utility.yul\":27666:27670   */\n      0x00\n        /* \"#utility.yul\":27704:27706   */\n      0x20\n        /* \"#utility.yul\":27693:27702   */\n      dup3\n        /* \"#utility.yul\":27689:27707   */\n      add\n        /* \"#utility.yul\":27681:27707   */\n      swap1\n      pop\n        /* \"#utility.yul\":27753:27762   */\n      dup2\n        /* \"#utility.yul\":27747:27751   */\n      dup2\n        /* \"#utility.yul\":27743:27763   */\n      sub\n        /* \"#utility.yul\":27739:27740   */\n      0x00\n        /* \"#utility.yul\":27728:27737   */\n      dup4\n        /* \"#utility.yul\":27724:27741   */\n      add\n        /* \"#utility.yul\":27717:27764   */\n      mstore\n        /* \"#utility.yul\":27781:27912   */\n      tag_711\n        /* \"#utility.yul\":27907:27911   */\n      dup2\n        /* \"#utility.yul\":27781:27912   */\n      tag_419\n      jump\t// in\n    tag_711:\n        /* \"#utility.yul\":27773:27912   */\n      swap1\n      pop\n        /* \"#utility.yul\":27500:27919   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27925:28367   */\n    tag_304:\n        /* \"#utility.yul\":28074:28078   */\n      0x00\n        /* \"#utility.yul\":28112:28114   */\n      0x60\n        /* \"#utility.yul\":28101:28110   */\n      dup3\n        /* \"#utility.yul\":28097:28115   */\n      add\n        /* \"#utility.yul\":28089:28115   */\n      swap1\n      pop\n        /* \"#utility.yul\":28125:28196   */\n      tag_713\n        /* \"#utility.yul\":28193:28194   */\n      0x00\n        /* \"#utility.yul\":28182:28191   */\n      dup4\n        /* \"#utility.yul\":28178:28195   */\n      add\n        /* \"#utility.yul\":28169:28175   */\n      dup7\n        /* \"#utility.yul\":28125:28196   */\n      tag_367\n      jump\t// in\n    tag_713:\n        /* \"#utility.yul\":28206:28278   */\n      tag_714\n        /* \"#utility.yul\":28274:28276   */\n      0x20\n        /* \"#utility.yul\":28263:28272   */\n      dup4\n        /* \"#utility.yul\":28259:28277   */\n      add\n        /* \"#utility.yul\":28250:28256   */\n      dup6\n        /* \"#utility.yul\":28206:28278   */\n      tag_360\n      jump\t// in\n    tag_714:\n        /* \"#utility.yul\":28288:28360   */\n      tag_715\n        /* \"#utility.yul\":28356:28358   */\n      0x40\n        /* \"#utility.yul\":28345:28354   */\n      dup4\n        /* \"#utility.yul\":28341:28359   */\n      add\n        /* \"#utility.yul\":28332:28338   */\n      dup5\n        /* \"#utility.yul\":28288:28360   */\n      tag_360\n      jump\t// in\n    tag_715:\n        /* \"#utility.yul\":27925:28367   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122039a9bc7d925fd2a79fbe5ca861c774e600bccd1ec7ea33dd3b1284506bac0a6364736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1076": {
									"entryPoint": null,
									"id": 1076,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 565,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 370,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 698,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1270,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory": {
									"entryPoint": 1290,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2189,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2325,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2204,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2340,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2393,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1518,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1370,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2274,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1797,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 2172,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2141,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1239,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1763,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1653,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1934,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1536,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1470,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1907,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1644,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1879,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2229,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1425,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1380,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1686,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1235,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 1551,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1867,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1739,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1563,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1695,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1248,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1732,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8273:7",
										"nodeType": "YulBlock",
										"src": "0:8273:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:7",
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nativeSrc": "57:19:7",
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:7",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nativeSrc": "67:9:7",
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:7",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nativeSrc": "177:28:7",
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:7",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:7",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nativeSrc": "187:12:7",
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nativeSrc": "187:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nativeSrc": "300:28:7",
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:7",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:7",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nativeSrc": "310:12:7",
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nativeSrc": "310:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nativeSrc": "379:32:7",
													"nodeType": "YulBlock",
													"src": "379:32:7",
													"statements": [
														{
															"nativeSrc": "389:16:7",
															"nodeType": "YulAssignment",
															"src": "389:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:7",
																"nodeType": "YulIdentifier",
																"src": "400:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:7",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:7",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:77:7"
											},
											{
												"body": {
													"nativeSrc": "460:79:7",
													"nodeType": "YulBlock",
													"src": "460:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:7",
																"nodeType": "YulBlock",
																"src": "517:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:7",
																					"nodeType": "YulLiteral",
																					"src": "526:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:7",
																					"nodeType": "YulLiteral",
																					"src": "529:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:7"
																			},
																			"nativeSrc": "519:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:7"
																		},
																		"nativeSrc": "519:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:7"
																				},
																				"nativeSrc": "490:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:7"
																		},
																		"nativeSrc": "480:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:7"
																},
																"nativeSrc": "473:43:7",
																"nodeType": "YulFunctionCall",
																"src": "473:43:7"
															},
															"nativeSrc": "470:63:7",
															"nodeType": "YulIf",
															"src": "470:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:7",
														"nodeType": "YulTypedName",
														"src": "453:5:7",
														"type": ""
													}
												],
												"src": "417:122:7"
											},
											{
												"body": {
													"nativeSrc": "608:80:7",
													"nodeType": "YulBlock",
													"src": "608:80:7",
													"statements": [
														{
															"nativeSrc": "618:22:7",
															"nodeType": "YulAssignment",
															"src": "618:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "633:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "627:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "627:5:7"
																},
																"nativeSrc": "627:13:7",
																"nodeType": "YulFunctionCall",
																"src": "627:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "618:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "618:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "676:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "676:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "649:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "649:26:7"
																},
																"nativeSrc": "649:33:7",
																"nodeType": "YulFunctionCall",
																"src": "649:33:7"
															},
															"nativeSrc": "649:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "649:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "545:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "586:6:7",
														"nodeType": "YulTypedName",
														"src": "586:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "594:3:7",
														"nodeType": "YulTypedName",
														"src": "594:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "602:5:7",
														"nodeType": "YulTypedName",
														"src": "602:5:7",
														"type": ""
													}
												],
												"src": "545:143:7"
											},
											{
												"body": {
													"nativeSrc": "805:552:7",
													"nodeType": "YulBlock",
													"src": "805:552:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "851:83:7",
																"nodeType": "YulBlock",
																"src": "851:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "853:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "853:77:7"
																			},
																			"nativeSrc": "853:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "853:79:7"
																		},
																		"nativeSrc": "853:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "853:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "826:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "826:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "835:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "835:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "822:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "822:3:7"
																		},
																		"nativeSrc": "822:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "822:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "847:2:7",
																		"nodeType": "YulLiteral",
																		"src": "847:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "818:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "818:3:7"
																},
																"nativeSrc": "818:32:7",
																"nodeType": "YulFunctionCall",
																"src": "818:32:7"
															},
															"nativeSrc": "815:119:7",
															"nodeType": "YulIf",
															"src": "815:119:7"
														},
														{
															"nativeSrc": "944:128:7",
															"nodeType": "YulBlock",
															"src": "944:128:7",
															"statements": [
																{
																	"nativeSrc": "959:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "959:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "973:1:7",
																		"nodeType": "YulLiteral",
																		"src": "973:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "963:6:7",
																			"nodeType": "YulTypedName",
																			"src": "963:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "988:74:7",
																	"nodeType": "YulAssignment",
																	"src": "988:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1034:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1034:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1045:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1045:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1030:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1030:3:7"
																				},
																				"nativeSrc": "1030:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1030:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1054:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1054:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "998:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "998:31:7"
																		},
																		"nativeSrc": "998:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "998:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "988:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "988:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1082:129:7",
															"nodeType": "YulBlock",
															"src": "1082:129:7",
															"statements": [
																{
																	"nativeSrc": "1097:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1097:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1111:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1111:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1101:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1101:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1127:74:7",
																	"nodeType": "YulAssignment",
																	"src": "1127:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1173:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1173:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1184:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1184:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1169:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1169:3:7"
																				},
																				"nativeSrc": "1169:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1169:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1193:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1193:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1137:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "1137:31:7"
																		},
																		"nativeSrc": "1137:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1137:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1127:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1127:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1221:129:7",
															"nodeType": "YulBlock",
															"src": "1221:129:7",
															"statements": [
																{
																	"nativeSrc": "1236:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1236:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1250:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1250:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1240:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1240:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1266:74:7",
																	"nodeType": "YulAssignment",
																	"src": "1266:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1312:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1312:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1323:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1323:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1308:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1308:3:7"
																				},
																				"nativeSrc": "1308:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1308:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1332:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1332:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1276:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "1276:31:7"
																		},
																		"nativeSrc": "1276:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1276:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1266:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1266:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory",
												"nativeSrc": "694:663:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "759:9:7",
														"nodeType": "YulTypedName",
														"src": "759:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "770:7:7",
														"nodeType": "YulTypedName",
														"src": "770:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "782:6:7",
														"nodeType": "YulTypedName",
														"src": "782:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "790:6:7",
														"nodeType": "YulTypedName",
														"src": "790:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "798:6:7",
														"nodeType": "YulTypedName",
														"src": "798:6:7",
														"type": ""
													}
												],
												"src": "694:663:7"
											},
											{
												"body": {
													"nativeSrc": "1422:40:7",
													"nodeType": "YulBlock",
													"src": "1422:40:7",
													"statements": [
														{
															"nativeSrc": "1433:22:7",
															"nodeType": "YulAssignment",
															"src": "1433:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1449:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1449:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1443:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1443:5:7"
																},
																"nativeSrc": "1443:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1443:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1433:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1433:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1363:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1405:5:7",
														"nodeType": "YulTypedName",
														"src": "1405:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1415:6:7",
														"nodeType": "YulTypedName",
														"src": "1415:6:7",
														"type": ""
													}
												],
												"src": "1363:99:7"
											},
											{
												"body": {
													"nativeSrc": "1496:152:7",
													"nodeType": "YulBlock",
													"src": "1496:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1513:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1513:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1516:77:7",
																		"nodeType": "YulLiteral",
																		"src": "1516:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1506:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1506:6:7"
																},
																"nativeSrc": "1506:88:7",
																"nodeType": "YulFunctionCall",
																"src": "1506:88:7"
															},
															"nativeSrc": "1506:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "1506:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1610:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1610:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1613:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1613:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1603:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1603:6:7"
																},
																"nativeSrc": "1603:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1603:15:7"
															},
															"nativeSrc": "1603:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1603:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1634:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1634:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1637:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1637:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1627:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1627:6:7"
																},
																"nativeSrc": "1627:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1627:15:7"
															},
															"nativeSrc": "1627:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1627:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1468:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1468:180:7"
											},
											{
												"body": {
													"nativeSrc": "1682:152:7",
													"nodeType": "YulBlock",
													"src": "1682:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1699:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1699:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1702:77:7",
																		"nodeType": "YulLiteral",
																		"src": "1702:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1692:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1692:6:7"
																},
																"nativeSrc": "1692:88:7",
																"nodeType": "YulFunctionCall",
																"src": "1692:88:7"
															},
															"nativeSrc": "1692:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "1692:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1796:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1796:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1799:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1799:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1789:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1789:6:7"
																},
																"nativeSrc": "1789:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1789:15:7"
															},
															"nativeSrc": "1789:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1789:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1820:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1820:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1823:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1823:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1813:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1813:6:7"
																},
																"nativeSrc": "1813:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1813:15:7"
															},
															"nativeSrc": "1813:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1813:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "1654:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1654:180:7"
											},
											{
												"body": {
													"nativeSrc": "1891:269:7",
													"nodeType": "YulBlock",
													"src": "1891:269:7",
													"statements": [
														{
															"nativeSrc": "1901:22:7",
															"nodeType": "YulAssignment",
															"src": "1901:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1915:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1915:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1921:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1921:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1911:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1911:3:7"
																},
																"nativeSrc": "1911:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1911:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1901:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1901:6:7"
																}
															]
														},
														{
															"nativeSrc": "1932:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1932:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1962:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1962:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1968:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1968:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1958:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1958:3:7"
																},
																"nativeSrc": "1958:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1958:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1936:18:7",
																	"nodeType": "YulTypedName",
																	"src": "1936:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2009:51:7",
																"nodeType": "YulBlock",
																"src": "2009:51:7",
																"statements": [
																	{
																		"nativeSrc": "2023:27:7",
																		"nodeType": "YulAssignment",
																		"src": "2023:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2037:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "2037:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2045:4:7",
																					"nodeType": "YulLiteral",
																					"src": "2045:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2033:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2033:3:7"
																			},
																			"nativeSrc": "2033:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2033:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2023:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2023:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1989:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "1989:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1982:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1982:6:7"
																},
																"nativeSrc": "1982:26:7",
																"nodeType": "YulFunctionCall",
																"src": "1982:26:7"
															},
															"nativeSrc": "1979:81:7",
															"nodeType": "YulIf",
															"src": "1979:81:7"
														},
														{
															"body": {
																"nativeSrc": "2112:42:7",
																"nodeType": "YulBlock",
																"src": "2112:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "2126:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "2126:16:7"
																			},
																			"nativeSrc": "2126:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2126:18:7"
																		},
																		"nativeSrc": "2126:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2126:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2076:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "2076:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2099:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2099:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2107:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2107:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2096:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2096:2:7"
																		},
																		"nativeSrc": "2096:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2096:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2073:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2073:2:7"
																},
																"nativeSrc": "2073:38:7",
																"nodeType": "YulFunctionCall",
																"src": "2073:38:7"
															},
															"nativeSrc": "2070:84:7",
															"nodeType": "YulIf",
															"src": "2070:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1840:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1875:4:7",
														"nodeType": "YulTypedName",
														"src": "1875:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1884:6:7",
														"nodeType": "YulTypedName",
														"src": "1884:6:7",
														"type": ""
													}
												],
												"src": "1840:320:7"
											},
											{
												"body": {
													"nativeSrc": "2220:87:7",
													"nodeType": "YulBlock",
													"src": "2220:87:7",
													"statements": [
														{
															"nativeSrc": "2230:11:7",
															"nodeType": "YulAssignment",
															"src": "2230:11:7",
															"value": {
																"name": "ptr",
																"nativeSrc": "2238:3:7",
																"nodeType": "YulIdentifier",
																"src": "2238:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2230:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2230:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2258:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2258:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2261:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2261:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2251:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2251:6:7"
																},
																"nativeSrc": "2251:14:7",
																"nodeType": "YulFunctionCall",
																"src": "2251:14:7"
															},
															"nativeSrc": "2251:14:7",
															"nodeType": "YulExpressionStatement",
															"src": "2251:14:7"
														},
														{
															"nativeSrc": "2274:26:7",
															"nodeType": "YulAssignment",
															"src": "2274:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2292:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2292:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2295:4:7",
																		"nodeType": "YulLiteral",
																		"src": "2295:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2282:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "2282:9:7"
																},
																"nativeSrc": "2282:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2282:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2274:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2274:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "2166:141:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2207:3:7",
														"nodeType": "YulTypedName",
														"src": "2207:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2215:4:7",
														"nodeType": "YulTypedName",
														"src": "2215:4:7",
														"type": ""
													}
												],
												"src": "2166:141:7"
											},
											{
												"body": {
													"nativeSrc": "2357:49:7",
													"nodeType": "YulBlock",
													"src": "2357:49:7",
													"statements": [
														{
															"nativeSrc": "2367:33:7",
															"nodeType": "YulAssignment",
															"src": "2367:33:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2385:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2385:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2392:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2392:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2381:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2381:3:7"
																		},
																		"nativeSrc": "2381:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2381:14:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2397:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2397:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2377:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2377:3:7"
																},
																"nativeSrc": "2377:23:7",
																"nodeType": "YulFunctionCall",
																"src": "2377:23:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2367:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2367:6:7"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2313:93:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2340:5:7",
														"nodeType": "YulTypedName",
														"src": "2340:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2350:6:7",
														"nodeType": "YulTypedName",
														"src": "2350:6:7",
														"type": ""
													}
												],
												"src": "2313:93:7"
											},
											{
												"body": {
													"nativeSrc": "2465:54:7",
													"nodeType": "YulBlock",
													"src": "2465:54:7",
													"statements": [
														{
															"nativeSrc": "2475:37:7",
															"nodeType": "YulAssignment",
															"src": "2475:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "2500:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2500:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2506:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2506:5:7"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2496:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2496:3:7"
																},
																"nativeSrc": "2496:16:7",
																"nodeType": "YulFunctionCall",
																"src": "2496:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2475:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "2475:8:7"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2412:107:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2440:4:7",
														"nodeType": "YulTypedName",
														"src": "2440:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2446:5:7",
														"nodeType": "YulTypedName",
														"src": "2446:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2456:8:7",
														"nodeType": "YulTypedName",
														"src": "2456:8:7",
														"type": ""
													}
												],
												"src": "2412:107:7"
											},
											{
												"body": {
													"nativeSrc": "2601:317:7",
													"nodeType": "YulBlock",
													"src": "2601:317:7",
													"statements": [
														{
															"nativeSrc": "2611:35:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2611:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "2632:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "2632:10:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2644:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2644:1:7",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2628:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2628:3:7"
																},
																"nativeSrc": "2628:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2628:18:7"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "2615:9:7",
																	"nodeType": "YulTypedName",
																	"src": "2615:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2655:109:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2655:109:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2686:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2686:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2697:66:7",
																		"nodeType": "YulLiteral",
																		"src": "2697:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2667:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "2667:18:7"
																},
																"nativeSrc": "2667:97:7",
																"nodeType": "YulFunctionCall",
																"src": "2667:97:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "2659:4:7",
																	"nodeType": "YulTypedName",
																	"src": "2659:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2773:51:7",
															"nodeType": "YulAssignment",
															"src": "2773:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2804:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2804:9:7"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "2815:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "2815:8:7"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2785:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "2785:18:7"
																},
																"nativeSrc": "2785:39:7",
																"nodeType": "YulFunctionCall",
																"src": "2785:39:7"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "2773:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "2773:8:7"
																}
															]
														},
														{
															"nativeSrc": "2833:30:7",
															"nodeType": "YulAssignment",
															"src": "2833:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2846:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2846:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "2857:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "2857:4:7"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2853:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2853:3:7"
																		},
																		"nativeSrc": "2853:9:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2853:9:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2842:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2842:3:7"
																},
																"nativeSrc": "2842:21:7",
																"nodeType": "YulFunctionCall",
																"src": "2842:21:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2833:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2833:5:7"
																}
															]
														},
														{
															"nativeSrc": "2872:40:7",
															"nodeType": "YulAssignment",
															"src": "2872:40:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2885:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2885:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "2896:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "2896:8:7"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "2906:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "2906:4:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2892:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2892:3:7"
																		},
																		"nativeSrc": "2892:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2892:19:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2882:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2882:2:7"
																},
																"nativeSrc": "2882:30:7",
																"nodeType": "YulFunctionCall",
																"src": "2882:30:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2872:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2872:6:7"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "2525:393:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2562:5:7",
														"nodeType": "YulTypedName",
														"src": "2562:5:7",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "2569:10:7",
														"nodeType": "YulTypedName",
														"src": "2569:10:7",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "2581:8:7",
														"nodeType": "YulTypedName",
														"src": "2581:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2594:6:7",
														"nodeType": "YulTypedName",
														"src": "2594:6:7",
														"type": ""
													}
												],
												"src": "2525:393:7"
											},
											{
												"body": {
													"nativeSrc": "2956:28:7",
													"nodeType": "YulBlock",
													"src": "2956:28:7",
													"statements": [
														{
															"nativeSrc": "2966:12:7",
															"nodeType": "YulAssignment",
															"src": "2966:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "2973:5:7",
																"nodeType": "YulIdentifier",
																"src": "2973:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2966:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2966:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2924:60:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2942:5:7",
														"nodeType": "YulTypedName",
														"src": "2942:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2952:3:7",
														"nodeType": "YulTypedName",
														"src": "2952:3:7",
														"type": ""
													}
												],
												"src": "2924:60:7"
											},
											{
												"body": {
													"nativeSrc": "3050:82:7",
													"nodeType": "YulBlock",
													"src": "3050:82:7",
													"statements": [
														{
															"nativeSrc": "3060:66:7",
															"nodeType": "YulAssignment",
															"src": "3060:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3118:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "3118:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3100:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "3100:17:7"
																				},
																				"nativeSrc": "3100:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3100:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3091:8:7",
																			"nodeType": "YulIdentifier",
																			"src": "3091:8:7"
																		},
																		"nativeSrc": "3091:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3091:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3073:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "3073:17:7"
																},
																"nativeSrc": "3073:53:7",
																"nodeType": "YulFunctionCall",
																"src": "3073:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3060:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "3060:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "2990:142:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3030:5:7",
														"nodeType": "YulTypedName",
														"src": "3030:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3040:9:7",
														"nodeType": "YulTypedName",
														"src": "3040:9:7",
														"type": ""
													}
												],
												"src": "2990:142:7"
											},
											{
												"body": {
													"nativeSrc": "3185:28:7",
													"nodeType": "YulBlock",
													"src": "3185:28:7",
													"statements": [
														{
															"nativeSrc": "3195:12:7",
															"nodeType": "YulAssignment",
															"src": "3195:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "3202:5:7",
																"nodeType": "YulIdentifier",
																"src": "3202:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3195:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3195:3:7"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "3138:75:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3171:5:7",
														"nodeType": "YulTypedName",
														"src": "3171:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3181:3:7",
														"nodeType": "YulTypedName",
														"src": "3181:3:7",
														"type": ""
													}
												],
												"src": "3138:75:7"
											},
											{
												"body": {
													"nativeSrc": "3295:193:7",
													"nodeType": "YulBlock",
													"src": "3295:193:7",
													"statements": [
														{
															"nativeSrc": "3305:63:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3305:63:7",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3360:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "3360:7:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3329:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "3329:30:7"
																},
																"nativeSrc": "3329:39:7",
																"nodeType": "YulFunctionCall",
																"src": "3329:39:7"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "3309:16:7",
																	"nodeType": "YulTypedName",
																	"src": "3309:16:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3384:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3384:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3424:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "3424:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3418:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "3418:5:7"
																				},
																				"nativeSrc": "3418:11:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3418:11:7"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3431:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3431:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3463:16:7",
																						"nodeType": "YulIdentifier",
																						"src": "3463:16:7"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3439:23:7",
																					"nodeType": "YulIdentifier",
																					"src": "3439:23:7"
																				},
																				"nativeSrc": "3439:41:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3439:41:7"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3390:27:7",
																			"nodeType": "YulIdentifier",
																			"src": "3390:27:7"
																		},
																		"nativeSrc": "3390:91:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3390:91:7"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3377:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3377:6:7"
																},
																"nativeSrc": "3377:105:7",
																"nodeType": "YulFunctionCall",
																"src": "3377:105:7"
															},
															"nativeSrc": "3377:105:7",
															"nodeType": "YulExpressionStatement",
															"src": "3377:105:7"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "3219:269:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3272:4:7",
														"nodeType": "YulTypedName",
														"src": "3272:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3278:6:7",
														"nodeType": "YulTypedName",
														"src": "3278:6:7",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "3286:7:7",
														"nodeType": "YulTypedName",
														"src": "3286:7:7",
														"type": ""
													}
												],
												"src": "3219:269:7"
											},
											{
												"body": {
													"nativeSrc": "3543:24:7",
													"nodeType": "YulBlock",
													"src": "3543:24:7",
													"statements": [
														{
															"nativeSrc": "3553:8:7",
															"nodeType": "YulAssignment",
															"src": "3553:8:7",
															"value": {
																"kind": "number",
																"nativeSrc": "3560:1:7",
																"nodeType": "YulLiteral",
																"src": "3560:1:7",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3553:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3553:3:7"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "3494:73:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3539:3:7",
														"nodeType": "YulTypedName",
														"src": "3539:3:7",
														"type": ""
													}
												],
												"src": "3494:73:7"
											},
											{
												"body": {
													"nativeSrc": "3626:136:7",
													"nodeType": "YulBlock",
													"src": "3626:136:7",
													"statements": [
														{
															"nativeSrc": "3636:46:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3636:46:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "3650:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "3650:30:7"
																},
																"nativeSrc": "3650:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3650:32:7"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "3640:6:7",
																	"nodeType": "YulTypedName",
																	"src": "3640:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3735:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3735:4:7"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3741:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3741:6:7"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "3749:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3749:6:7"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "3691:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "3691:43:7"
																},
																"nativeSrc": "3691:65:7",
																"nodeType": "YulFunctionCall",
																"src": "3691:65:7"
															},
															"nativeSrc": "3691:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "3691:65:7"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "3573:189:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3612:4:7",
														"nodeType": "YulTypedName",
														"src": "3612:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3618:6:7",
														"nodeType": "YulTypedName",
														"src": "3618:6:7",
														"type": ""
													}
												],
												"src": "3573:189:7"
											},
											{
												"body": {
													"nativeSrc": "3818:136:7",
													"nodeType": "YulBlock",
													"src": "3818:136:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3885:63:7",
																"nodeType": "YulBlock",
																"src": "3885:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3929:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "3929:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3936:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3936:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "3899:29:7",
																				"nodeType": "YulIdentifier",
																				"src": "3899:29:7"
																			},
																			"nativeSrc": "3899:39:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3899:39:7"
																		},
																		"nativeSrc": "3899:39:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3899:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "3838:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3838:5:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3845:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3845:3:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3835:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "3835:2:7"
																},
																"nativeSrc": "3835:14:7",
																"nodeType": "YulFunctionCall",
																"src": "3835:14:7"
															},
															"nativeSrc": "3828:120:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3850:26:7",
																"nodeType": "YulBlock",
																"src": "3850:26:7",
																"statements": [
																	{
																		"nativeSrc": "3852:22:7",
																		"nodeType": "YulAssignment",
																		"src": "3852:22:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3865:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "3865:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3872:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3872:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3861:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "3861:3:7"
																			},
																			"nativeSrc": "3861:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3861:13:7"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "3852:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3852:5:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3832:2:7",
																"nodeType": "YulBlock",
																"src": "3832:2:7",
																"statements": []
															},
															"src": "3828:120:7"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "3768:186:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "3806:5:7",
														"nodeType": "YulTypedName",
														"src": "3806:5:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3813:3:7",
														"nodeType": "YulTypedName",
														"src": "3813:3:7",
														"type": ""
													}
												],
												"src": "3768:186:7"
											},
											{
												"body": {
													"nativeSrc": "4039:464:7",
													"nodeType": "YulBlock",
													"src": "4039:464:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4065:431:7",
																"nodeType": "YulBlock",
																"src": "4065:431:7",
																"statements": [
																	{
																		"nativeSrc": "4079:54:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4079:54:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "4127:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "4127:5:7"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "4095:31:7",
																				"nodeType": "YulIdentifier",
																				"src": "4095:31:7"
																			},
																			"nativeSrc": "4095:38:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4095:38:7"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "4083:8:7",
																				"nodeType": "YulTypedName",
																				"src": "4083:8:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4146:63:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4146:63:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "4169:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "4169:8:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "4197:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "4197:10:7"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "4179:17:7",
																						"nodeType": "YulIdentifier",
																						"src": "4179:17:7"
																					},
																					"nativeSrc": "4179:29:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4179:29:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4165:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "4165:3:7"
																			},
																			"nativeSrc": "4165:44:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4165:44:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "4150:11:7",
																				"nodeType": "YulTypedName",
																				"src": "4150:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4366:27:7",
																			"nodeType": "YulBlock",
																			"src": "4366:27:7",
																			"statements": [
																				{
																					"nativeSrc": "4368:23:7",
																					"nodeType": "YulAssignment",
																					"src": "4368:23:7",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4383:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "4383:8:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4368:11:7",
																							"nodeType": "YulIdentifier",
																							"src": "4368:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4350:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "4350:10:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4362:2:7",
																					"nodeType": "YulLiteral",
																					"src": "4362:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4347:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "4347:2:7"
																			},
																			"nativeSrc": "4347:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4347:18:7"
																		},
																		"nativeSrc": "4344:49:7",
																		"nodeType": "YulIf",
																		"src": "4344:49:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4435:11:7",
																					"nodeType": "YulIdentifier",
																					"src": "4435:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4452:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "4452:8:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4480:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "4480:3:7"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4462:17:7",
																								"nodeType": "YulIdentifier",
																								"src": "4462:17:7"
																							},
																							"nativeSrc": "4462:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "4462:22:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4448:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "4448:3:7"
																					},
																					"nativeSrc": "4448:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4448:37:7"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4406:28:7",
																				"nodeType": "YulIdentifier",
																				"src": "4406:28:7"
																			},
																			"nativeSrc": "4406:80:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4406:80:7"
																		},
																		"nativeSrc": "4406:80:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4406:80:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "4056:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4056:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4061:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4061:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4053:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "4053:2:7"
																},
																"nativeSrc": "4053:11:7",
																"nodeType": "YulFunctionCall",
																"src": "4053:11:7"
															},
															"nativeSrc": "4050:446:7",
															"nodeType": "YulIf",
															"src": "4050:446:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "3960:543:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "4015:5:7",
														"nodeType": "YulTypedName",
														"src": "4015:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4022:3:7",
														"nodeType": "YulTypedName",
														"src": "4022:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "4027:10:7",
														"nodeType": "YulTypedName",
														"src": "4027:10:7",
														"type": ""
													}
												],
												"src": "3960:543:7"
											},
											{
												"body": {
													"nativeSrc": "4572:54:7",
													"nodeType": "YulBlock",
													"src": "4572:54:7",
													"statements": [
														{
															"nativeSrc": "4582:37:7",
															"nodeType": "YulAssignment",
															"src": "4582:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4607:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4607:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4613:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4613:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4603:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4603:3:7"
																},
																"nativeSrc": "4603:16:7",
																"nodeType": "YulFunctionCall",
																"src": "4603:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4582:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "4582:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "4509:117:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4547:4:7",
														"nodeType": "YulTypedName",
														"src": "4547:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4553:5:7",
														"nodeType": "YulTypedName",
														"src": "4553:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4563:8:7",
														"nodeType": "YulTypedName",
														"src": "4563:8:7",
														"type": ""
													}
												],
												"src": "4509:117:7"
											},
											{
												"body": {
													"nativeSrc": "4683:118:7",
													"nodeType": "YulBlock",
													"src": "4683:118:7",
													"statements": [
														{
															"nativeSrc": "4693:68:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4693:68:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4742:1:7",
																						"nodeType": "YulLiteral",
																						"src": "4742:1:7",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "4745:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "4745:5:7"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4738:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4738:3:7"
																				},
																				"nativeSrc": "4738:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4738:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4757:1:7",
																						"nodeType": "YulLiteral",
																						"src": "4757:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4753:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4753:3:7"
																				},
																				"nativeSrc": "4753:6:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4753:6:7"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "4709:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "4709:28:7"
																		},
																		"nativeSrc": "4709:51:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4709:51:7"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "4705:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4705:3:7"
																},
																"nativeSrc": "4705:56:7",
																"nodeType": "YulFunctionCall",
																"src": "4705:56:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4697:4:7",
																	"nodeType": "YulTypedName",
																	"src": "4697:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4770:25:7",
															"nodeType": "YulAssignment",
															"src": "4770:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4784:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4784:4:7"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "4790:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4790:4:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4780:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4780:3:7"
																},
																"nativeSrc": "4780:15:7",
																"nodeType": "YulFunctionCall",
																"src": "4780:15:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4770:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4770:6:7"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "4632:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4660:4:7",
														"nodeType": "YulTypedName",
														"src": "4660:4:7",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "4666:5:7",
														"nodeType": "YulTypedName",
														"src": "4666:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4676:6:7",
														"nodeType": "YulTypedName",
														"src": "4676:6:7",
														"type": ""
													}
												],
												"src": "4632:169:7"
											},
											{
												"body": {
													"nativeSrc": "4887:214:7",
													"nodeType": "YulBlock",
													"src": "4887:214:7",
													"statements": [
														{
															"nativeSrc": "5020:37:7",
															"nodeType": "YulAssignment",
															"src": "5020:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5047:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5047:4:7"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "5053:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5053:3:7"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "5028:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "5028:18:7"
																},
																"nativeSrc": "5028:29:7",
																"nodeType": "YulFunctionCall",
																"src": "5028:29:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5020:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5020:4:7"
																}
															]
														},
														{
															"nativeSrc": "5066:29:7",
															"nodeType": "YulAssignment",
															"src": "5066:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5077:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5077:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5087:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5087:1:7",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "5090:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "5090:3:7"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "5083:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5083:3:7"
																		},
																		"nativeSrc": "5083:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5083:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5074:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5074:2:7"
																},
																"nativeSrc": "5074:21:7",
																"nodeType": "YulFunctionCall",
																"src": "5074:21:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "5066:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5066:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "4806:295:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4868:4:7",
														"nodeType": "YulTypedName",
														"src": "4868:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4874:3:7",
														"nodeType": "YulTypedName",
														"src": "4874:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "4882:4:7",
														"nodeType": "YulTypedName",
														"src": "4882:4:7",
														"type": ""
													}
												],
												"src": "4806:295:7"
											},
											{
												"body": {
													"nativeSrc": "5198:1303:7",
													"nodeType": "YulBlock",
													"src": "5198:1303:7",
													"statements": [
														{
															"nativeSrc": "5209:51:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5209:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5256:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5256:3:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "5223:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "5223:32:7"
																},
																"nativeSrc": "5223:37:7",
																"nodeType": "YulFunctionCall",
																"src": "5223:37:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "5213:6:7",
																	"nodeType": "YulTypedName",
																	"src": "5213:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5345:22:7",
																"nodeType": "YulBlock",
																"src": "5345:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5347:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "5347:16:7"
																			},
																			"nativeSrc": "5347:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5347:18:7"
																		},
																		"nativeSrc": "5347:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5347:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5317:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5317:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5325:18:7",
																		"nodeType": "YulLiteral",
																		"src": "5325:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5314:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5314:2:7"
																},
																"nativeSrc": "5314:30:7",
																"nodeType": "YulFunctionCall",
																"src": "5314:30:7"
															},
															"nativeSrc": "5311:56:7",
															"nodeType": "YulIf",
															"src": "5311:56:7"
														},
														{
															"nativeSrc": "5377:52:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5377:52:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5423:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "5423:4:7"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5417:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "5417:5:7"
																		},
																		"nativeSrc": "5417:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5417:11:7"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5391:25:7",
																	"nodeType": "YulIdentifier",
																	"src": "5391:25:7"
																},
																"nativeSrc": "5391:38:7",
																"nodeType": "YulFunctionCall",
																"src": "5391:38:7"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5381:6:7",
																	"nodeType": "YulTypedName",
																	"src": "5381:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5522:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5522:4:7"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "5528:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5528:6:7"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "5536:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5536:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5476:45:7",
																	"nodeType": "YulIdentifier",
																	"src": "5476:45:7"
																},
																"nativeSrc": "5476:67:7",
																"nodeType": "YulFunctionCall",
																"src": "5476:67:7"
															},
															"nativeSrc": "5476:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "5476:67:7"
														},
														{
															"nativeSrc": "5553:18:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5553:18:7",
															"value": {
																"kind": "number",
																"nativeSrc": "5570:1:7",
																"nodeType": "YulLiteral",
																"src": "5570:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5557:9:7",
																	"nodeType": "YulTypedName",
																	"src": "5557:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5581:17:7",
															"nodeType": "YulAssignment",
															"src": "5581:17:7",
															"value": {
																"kind": "number",
																"nativeSrc": "5594:4:7",
																"nodeType": "YulLiteral",
																"src": "5594:4:7",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5581:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "5581:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "5645:611:7",
																		"nodeType": "YulBlock",
																		"src": "5645:611:7",
																		"statements": [
																			{
																				"nativeSrc": "5659:37:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5659:37:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "5678:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "5678:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "5690:4:7",
																									"nodeType": "YulLiteral",
																									"src": "5690:4:7",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "5686:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "5686:3:7"
																							},
																							"nativeSrc": "5686:9:7",
																							"nodeType": "YulFunctionCall",
																							"src": "5686:9:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "5674:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "5674:3:7"
																					},
																					"nativeSrc": "5674:22:7",
																					"nodeType": "YulFunctionCall",
																					"src": "5674:22:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "5663:7:7",
																						"nodeType": "YulTypedName",
																						"src": "5663:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5710:51:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5710:51:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5756:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "5756:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "5724:31:7",
																						"nodeType": "YulIdentifier",
																						"src": "5724:31:7"
																					},
																					"nativeSrc": "5724:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "5724:37:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "5714:6:7",
																						"nodeType": "YulTypedName",
																						"src": "5714:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5774:10:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5774:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5783:1:7",
																					"nodeType": "YulLiteral",
																					"src": "5783:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "5778:1:7",
																						"nodeType": "YulTypedName",
																						"src": "5778:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5842:163:7",
																					"nodeType": "YulBlock",
																					"src": "5842:163:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5867:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "5867:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "5885:3:7",
																														"nodeType": "YulIdentifier",
																														"src": "5885:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "5890:9:7",
																														"nodeType": "YulIdentifier",
																														"src": "5890:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "5881:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "5881:3:7"
																												},
																												"nativeSrc": "5881:19:7",
																												"nodeType": "YulFunctionCall",
																												"src": "5881:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "5875:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "5875:5:7"
																										},
																										"nativeSrc": "5875:26:7",
																										"nodeType": "YulFunctionCall",
																										"src": "5875:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "5860:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "5860:6:7"
																								},
																								"nativeSrc": "5860:42:7",
																								"nodeType": "YulFunctionCall",
																								"src": "5860:42:7"
																							},
																							"nativeSrc": "5860:42:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "5860:42:7"
																						},
																						{
																							"nativeSrc": "5919:24:7",
																							"nodeType": "YulAssignment",
																							"src": "5919:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5933:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "5933:6:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5941:1:7",
																										"nodeType": "YulLiteral",
																										"src": "5941:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5929:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "5929:3:7"
																								},
																								"nativeSrc": "5929:14:7",
																								"nodeType": "YulFunctionCall",
																								"src": "5929:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "5919:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "5919:6:7"
																								}
																							]
																						},
																						{
																							"nativeSrc": "5960:31:7",
																							"nodeType": "YulAssignment",
																							"src": "5960:31:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "5977:9:7",
																										"nodeType": "YulIdentifier",
																										"src": "5977:9:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5988:2:7",
																										"nodeType": "YulLiteral",
																										"src": "5988:2:7",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5973:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "5973:3:7"
																								},
																								"nativeSrc": "5973:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "5973:18:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "5960:9:7",
																									"nodeType": "YulIdentifier",
																									"src": "5960:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "5808:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "5808:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5811:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "5811:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5805:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "5805:2:7"
																					},
																					"nativeSrc": "5805:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "5805:14:7"
																				},
																				"nativeSrc": "5797:208:7",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "5820:21:7",
																					"nodeType": "YulBlock",
																					"src": "5820:21:7",
																					"statements": [
																						{
																							"nativeSrc": "5822:17:7",
																							"nodeType": "YulAssignment",
																							"src": "5822:17:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "5831:1:7",
																										"nodeType": "YulIdentifier",
																										"src": "5831:1:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5834:4:7",
																										"nodeType": "YulLiteral",
																										"src": "5834:4:7",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5827:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "5827:3:7"
																								},
																								"nativeSrc": "5827:12:7",
																								"nodeType": "YulFunctionCall",
																								"src": "5827:12:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "5822:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "5822:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "5801:3:7",
																					"nodeType": "YulBlock",
																					"src": "5801:3:7",
																					"statements": []
																				},
																				"src": "5797:208:7"
																			},
																			{
																				"body": {
																					"nativeSrc": "6041:156:7",
																					"nodeType": "YulBlock",
																					"src": "6041:156:7",
																					"statements": [
																						{
																							"nativeSrc": "6059:43:7",
																							"nodeType": "YulVariableDeclaration",
																							"src": "6059:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6086:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "6086:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6091:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "6091:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6082:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "6082:3:7"
																										},
																										"nativeSrc": "6082:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "6082:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6076:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "6076:5:7"
																								},
																								"nativeSrc": "6076:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "6076:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "6063:9:7",
																									"nodeType": "YulTypedName",
																									"src": "6063:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6126:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "6126:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "6153:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "6153:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "6168:6:7",
																														"nodeType": "YulIdentifier",
																														"src": "6168:6:7"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "6176:4:7",
																														"nodeType": "YulLiteral",
																														"src": "6176:4:7",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "6164:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "6164:3:7"
																												},
																												"nativeSrc": "6164:17:7",
																												"nodeType": "YulFunctionCall",
																												"src": "6164:17:7"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "6134:18:7",
																											"nodeType": "YulIdentifier",
																											"src": "6134:18:7"
																										},
																										"nativeSrc": "6134:48:7",
																										"nodeType": "YulFunctionCall",
																										"src": "6134:48:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6119:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "6119:6:7"
																								},
																								"nativeSrc": "6119:64:7",
																								"nodeType": "YulFunctionCall",
																								"src": "6119:64:7"
																							},
																							"nativeSrc": "6119:64:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "6119:64:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "6024:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "6024:7:7"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "6033:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "6033:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "6021:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "6021:2:7"
																					},
																					"nativeSrc": "6021:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6021:19:7"
																				},
																				"nativeSrc": "6018:179:7",
																				"nodeType": "YulIf",
																				"src": "6018:179:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6217:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "6217:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "6231:6:7",
																											"nodeType": "YulIdentifier",
																											"src": "6231:6:7"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "6239:1:7",
																											"nodeType": "YulLiteral",
																											"src": "6239:1:7",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "6227:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "6227:3:7"
																									},
																									"nativeSrc": "6227:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "6227:14:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6243:1:7",
																									"nodeType": "YulLiteral",
																									"src": "6243:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6223:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "6223:3:7"
																							},
																							"nativeSrc": "6223:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "6223:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6210:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6210:6:7"
																					},
																					"nativeSrc": "6210:36:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6210:36:7"
																				},
																				"nativeSrc": "6210:36:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "6210:36:7"
																			}
																		]
																	},
																	"nativeSrc": "5638:618:7",
																	"nodeType": "YulCase",
																	"src": "5638:618:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5643:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5643:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6273:222:7",
																		"nodeType": "YulBlock",
																		"src": "6273:222:7",
																		"statements": [
																			{
																				"nativeSrc": "6287:14:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6287:14:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6300:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6300:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "6291:5:7",
																						"nodeType": "YulTypedName",
																						"src": "6291:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6324:67:7",
																					"nodeType": "YulBlock",
																					"src": "6324:67:7",
																					"statements": [
																						{
																							"nativeSrc": "6342:35:7",
																							"nodeType": "YulAssignment",
																							"src": "6342:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6361:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "6361:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6366:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "6366:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6357:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "6357:3:7"
																										},
																										"nativeSrc": "6357:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "6357:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6351:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "6351:5:7"
																								},
																								"nativeSrc": "6351:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "6351:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6342:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "6342:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6317:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "6317:6:7"
																				},
																				"nativeSrc": "6314:77:7",
																				"nodeType": "YulIf",
																				"src": "6314:77:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6411:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "6411:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6470:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "6470:5:7"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6477:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "6477:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6417:52:7",
																								"nodeType": "YulIdentifier",
																								"src": "6417:52:7"
																							},
																							"nativeSrc": "6417:67:7",
																							"nodeType": "YulFunctionCall",
																							"src": "6417:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6404:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6404:6:7"
																					},
																					"nativeSrc": "6404:81:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6404:81:7"
																				},
																				"nativeSrc": "6404:81:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "6404:81:7"
																			}
																		]
																	},
																	"nativeSrc": "6265:230:7",
																	"nodeType": "YulCase",
																	"src": "6265:230:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5618:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5618:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5626:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5626:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5615:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5615:2:7"
																},
																"nativeSrc": "5615:14:7",
																"nodeType": "YulFunctionCall",
																"src": "5615:14:7"
															},
															"nativeSrc": "5608:887:7",
															"nodeType": "YulSwitch",
															"src": "5608:887:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "5106:1395:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5187:4:7",
														"nodeType": "YulTypedName",
														"src": "5187:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "5193:3:7",
														"nodeType": "YulTypedName",
														"src": "5193:3:7",
														"type": ""
													}
												],
												"src": "5106:1395:7"
											},
											{
												"body": {
													"nativeSrc": "6552:81:7",
													"nodeType": "YulBlock",
													"src": "6552:81:7",
													"statements": [
														{
															"nativeSrc": "6562:65:7",
															"nodeType": "YulAssignment",
															"src": "6562:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6577:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "6577:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6584:42:7",
																		"nodeType": "YulLiteral",
																		"src": "6584:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6573:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6573:3:7"
																},
																"nativeSrc": "6573:54:7",
																"nodeType": "YulFunctionCall",
																"src": "6573:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6562:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "6562:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "6507:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6534:5:7",
														"nodeType": "YulTypedName",
														"src": "6534:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6544:7:7",
														"nodeType": "YulTypedName",
														"src": "6544:7:7",
														"type": ""
													}
												],
												"src": "6507:126:7"
											},
											{
												"body": {
													"nativeSrc": "6684:51:7",
													"nodeType": "YulBlock",
													"src": "6684:51:7",
													"statements": [
														{
															"nativeSrc": "6694:35:7",
															"nodeType": "YulAssignment",
															"src": "6694:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6723:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "6723:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "6705:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "6705:17:7"
																},
																"nativeSrc": "6705:24:7",
																"nodeType": "YulFunctionCall",
																"src": "6705:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6694:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "6694:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "6639:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6666:5:7",
														"nodeType": "YulTypedName",
														"src": "6666:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6676:7:7",
														"nodeType": "YulTypedName",
														"src": "6676:7:7",
														"type": ""
													}
												],
												"src": "6639:96:7"
											},
											{
												"body": {
													"nativeSrc": "6806:53:7",
													"nodeType": "YulBlock",
													"src": "6806:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6823:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6823:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6846:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6846:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6828:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "6828:17:7"
																		},
																		"nativeSrc": "6828:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6828:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6816:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6816:6:7"
																},
																"nativeSrc": "6816:37:7",
																"nodeType": "YulFunctionCall",
																"src": "6816:37:7"
															},
															"nativeSrc": "6816:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "6816:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6741:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6794:5:7",
														"nodeType": "YulTypedName",
														"src": "6794:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6801:3:7",
														"nodeType": "YulTypedName",
														"src": "6801:3:7",
														"type": ""
													}
												],
												"src": "6741:118:7"
											},
											{
												"body": {
													"nativeSrc": "6963:124:7",
													"nodeType": "YulBlock",
													"src": "6963:124:7",
													"statements": [
														{
															"nativeSrc": "6973:26:7",
															"nodeType": "YulAssignment",
															"src": "6973:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6985:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6985:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6996:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6996:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6981:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6981:3:7"
																},
																"nativeSrc": "6981:18:7",
																"nodeType": "YulFunctionCall",
																"src": "6981:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6973:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6973:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7053:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7053:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7066:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7066:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7077:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7077:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7062:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7062:3:7"
																		},
																		"nativeSrc": "7062:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7062:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7009:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "7009:43:7"
																},
																"nativeSrc": "7009:71:7",
																"nodeType": "YulFunctionCall",
																"src": "7009:71:7"
															},
															"nativeSrc": "7009:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "7009:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6865:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6935:9:7",
														"nodeType": "YulTypedName",
														"src": "6935:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6947:6:7",
														"nodeType": "YulTypedName",
														"src": "6947:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6958:4:7",
														"nodeType": "YulTypedName",
														"src": "6958:4:7",
														"type": ""
													}
												],
												"src": "6865:222:7"
											},
											{
												"body": {
													"nativeSrc": "7121:152:7",
													"nodeType": "YulBlock",
													"src": "7121:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7138:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7138:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7141:77:7",
																		"nodeType": "YulLiteral",
																		"src": "7141:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7131:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7131:6:7"
																},
																"nativeSrc": "7131:88:7",
																"nodeType": "YulFunctionCall",
																"src": "7131:88:7"
															},
															"nativeSrc": "7131:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "7131:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7235:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7235:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7238:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7238:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7228:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7228:6:7"
																},
																"nativeSrc": "7228:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7228:15:7"
															},
															"nativeSrc": "7228:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "7228:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7259:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7259:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7262:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7262:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7252:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7252:6:7"
																},
																"nativeSrc": "7252:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7252:15:7"
															},
															"nativeSrc": "7252:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "7252:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7093:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "7093:180:7"
											},
											{
												"body": {
													"nativeSrc": "7323:147:7",
													"nodeType": "YulBlock",
													"src": "7323:147:7",
													"statements": [
														{
															"nativeSrc": "7333:25:7",
															"nodeType": "YulAssignment",
															"src": "7333:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7356:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7356:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7338:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "7338:17:7"
																},
																"nativeSrc": "7338:20:7",
																"nodeType": "YulFunctionCall",
																"src": "7338:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7333:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "7333:1:7"
																}
															]
														},
														{
															"nativeSrc": "7367:25:7",
															"nodeType": "YulAssignment",
															"src": "7367:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7390:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7390:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7372:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "7372:17:7"
																},
																"nativeSrc": "7372:20:7",
																"nodeType": "YulFunctionCall",
																"src": "7372:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7367:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "7367:1:7"
																}
															]
														},
														{
															"nativeSrc": "7401:16:7",
															"nodeType": "YulAssignment",
															"src": "7401:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7412:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7412:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7415:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7415:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7408:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7408:3:7"
																},
																"nativeSrc": "7408:9:7",
																"nodeType": "YulFunctionCall",
																"src": "7408:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7401:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7401:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7441:22:7",
																"nodeType": "YulBlock",
																"src": "7441:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7443:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "7443:16:7"
																			},
																			"nativeSrc": "7443:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7443:18:7"
																		},
																		"nativeSrc": "7443:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7443:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7433:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7433:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7436:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7436:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7430:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7430:2:7"
																},
																"nativeSrc": "7430:10:7",
																"nodeType": "YulFunctionCall",
																"src": "7430:10:7"
															},
															"nativeSrc": "7427:36:7",
															"nodeType": "YulIf",
															"src": "7427:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "7279:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7310:1:7",
														"nodeType": "YulTypedName",
														"src": "7310:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7313:1:7",
														"nodeType": "YulTypedName",
														"src": "7313:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7319:3:7",
														"nodeType": "YulTypedName",
														"src": "7319:3:7",
														"type": ""
													}
												],
												"src": "7279:191:7"
											},
											{
												"body": {
													"nativeSrc": "7541:53:7",
													"nodeType": "YulBlock",
													"src": "7541:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7558:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7558:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7581:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "7581:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "7563:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "7563:17:7"
																		},
																		"nativeSrc": "7563:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7563:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7551:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7551:6:7"
																},
																"nativeSrc": "7551:37:7",
																"nodeType": "YulFunctionCall",
																"src": "7551:37:7"
															},
															"nativeSrc": "7551:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "7551:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "7476:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7529:5:7",
														"nodeType": "YulTypedName",
														"src": "7529:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7536:3:7",
														"nodeType": "YulTypedName",
														"src": "7536:3:7",
														"type": ""
													}
												],
												"src": "7476:118:7"
											},
											{
												"body": {
													"nativeSrc": "7754:288:7",
													"nodeType": "YulBlock",
													"src": "7754:288:7",
													"statements": [
														{
															"nativeSrc": "7764:26:7",
															"nodeType": "YulAssignment",
															"src": "7764:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7776:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "7776:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7787:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7787:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7772:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7772:3:7"
																},
																"nativeSrc": "7772:18:7",
																"nodeType": "YulFunctionCall",
																"src": "7772:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7764:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7764:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7844:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7844:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7857:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7857:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7868:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7868:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7853:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7853:3:7"
																		},
																		"nativeSrc": "7853:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7853:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7800:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "7800:43:7"
																},
																"nativeSrc": "7800:71:7",
																"nodeType": "YulFunctionCall",
																"src": "7800:71:7"
															},
															"nativeSrc": "7800:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "7800:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7925:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7925:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7938:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7938:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7949:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7949:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7934:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7934:3:7"
																		},
																		"nativeSrc": "7934:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7934:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7881:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "7881:43:7"
																},
																"nativeSrc": "7881:72:7",
																"nodeType": "YulFunctionCall",
																"src": "7881:72:7"
															},
															"nativeSrc": "7881:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "7881:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "8007:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8007:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8020:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8020:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8031:2:7",
																				"nodeType": "YulLiteral",
																				"src": "8031:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8016:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8016:3:7"
																		},
																		"nativeSrc": "8016:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8016:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7963:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "7963:43:7"
																},
																"nativeSrc": "7963:72:7",
																"nodeType": "YulFunctionCall",
																"src": "7963:72:7"
															},
															"nativeSrc": "7963:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "7963:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "7600:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7710:9:7",
														"nodeType": "YulTypedName",
														"src": "7710:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7722:6:7",
														"nodeType": "YulTypedName",
														"src": "7722:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7730:6:7",
														"nodeType": "YulTypedName",
														"src": "7730:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7738:6:7",
														"nodeType": "YulTypedName",
														"src": "7738:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7749:4:7",
														"nodeType": "YulTypedName",
														"src": "7749:4:7",
														"type": ""
													}
												],
												"src": "7600:442:7"
											},
											{
												"body": {
													"nativeSrc": "8146:124:7",
													"nodeType": "YulBlock",
													"src": "8146:124:7",
													"statements": [
														{
															"nativeSrc": "8156:26:7",
															"nodeType": "YulAssignment",
															"src": "8156:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8168:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "8168:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8179:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8179:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8164:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8164:3:7"
																},
																"nativeSrc": "8164:18:7",
																"nodeType": "YulFunctionCall",
																"src": "8164:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8156:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8156:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8236:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8236:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8249:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8249:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8260:1:7",
																				"nodeType": "YulLiteral",
																				"src": "8260:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8245:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8245:3:7"
																		},
																		"nativeSrc": "8245:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8245:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8192:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "8192:43:7"
																},
																"nativeSrc": "8192:71:7",
																"nodeType": "YulFunctionCall",
																"src": "8192:71:7"
															},
															"nativeSrc": "8192:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "8192:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "8048:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8118:9:7",
														"nodeType": "YulTypedName",
														"src": "8118:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8130:6:7",
														"nodeType": "YulTypedName",
														"src": "8130:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8141:4:7",
														"nodeType": "YulTypedName",
														"src": "8141:4:7",
														"type": ""
													}
												],
												"src": "8048:222:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405262093a80600e55348015610016575f5ffd5b506040516134203803806134208339818101604052810190610038919061050a565b336040518060400160405280600981526020017f4672657361436f696e00000000000000000000000000000000000000000000008152506040518060400160405280600581526020017f465245534100000000000000000000000000000000000000000000000000000081525081600390816100b4919061078e565b5080600490816100c4919061078e565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610137575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161012e919061089c565b60405180910390fd5b6101468161017260201b60201c565b50610157338461023560201b60201c565b81600a5f018190555080600a60010181905550505050610972565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036102a5575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161029c919061089c565b60405180910390fd5b6102b65f83836102ba60201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361030a578060025f8282546102fe91906108e2565b925050819055506103d8565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610393578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161038a93929190610924565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361041f578060025f8282540392505081905550610469565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516104c69190610959565b60405180910390a3505050565b5f5ffd5b5f819050919050565b6104e9816104d7565b81146104f3575f5ffd5b50565b5f81519050610504816104e0565b92915050565b5f5f5f60608486031215610521576105206104d3565b5b5f61052e868287016104f6565b935050602061053f868287016104f6565b9250506040610550868287016104f6565b9150509250925092565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806105d557607f821691505b6020821081036105e8576105e7610591565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f6008830261064a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261060f565b610654868361060f565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61068f61068a610685846104d7565b61066c565b6104d7565b9050919050565b5f819050919050565b6106a883610675565b6106bc6106b482610696565b84845461061b565b825550505050565b5f5f905090565b6106d36106c4565b6106de81848461069f565b505050565b5b81811015610701576106f65f826106cb565b6001810190506106e4565b5050565b601f82111561074657610717816105ee565b61072084610600565b8101602085101561072f578190505b61074361073b85610600565b8301826106e3565b50505b505050565b5f82821c905092915050565b5f6107665f198460080261074b565b1980831691505092915050565b5f61077e8383610757565b9150826002028217905092915050565b6107978261055a565b67ffffffffffffffff8111156107b0576107af610564565b5b6107ba82546105be565b6107c5828285610705565b5f60209050601f8311600181146107f6575f84156107e4578287015190505b6107ee8582610773565b865550610855565b601f198416610804866105ee565b5f5b8281101561082b57848901518255600182019150602085019450602081019050610806565b868310156108485784890151610844601f891682610757565b8355505b6001600288020188555050505b505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6108868261085d565b9050919050565b6108968161087c565b82525050565b5f6020820190506108af5f83018461088d565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6108ec826104d7565b91506108f7836104d7565b925082820190508082111561090f5761090e6108b5565b5b92915050565b61091e816104d7565b82525050565b5f6060820190506109375f83018661088d565b6109446020830185610915565b6109516040830184610915565b949350505050565b5f60208201905061096c5f830184610915565b92915050565b612aa18061097f5f395ff3fe608060405234801561000f575f5ffd5b50600436106101c2575f3560e01c80635fec5c64116100f7578063b3a55a6611610095578063cdb12c831161006f578063cdb12c83146104ea578063dd62ed3e14610508578063e1913c8114610538578063f2fde38b14610556576101c2565b8063b3a55a6614610492578063ba13a572146104b0578063c9d27afe146104ce576101c2565b80637acb7757116100d15780637acb77571461040a5780638da5cb5b1461042657806395d89b4114610444578063a9059cbb14610462576101c2565b80635fec5c64146103b257806370a08231146103d0578063715018a614610400576101c2565b806318160ddd11610164578063313ce5671161013e578063313ce567146103525780633fd430981461037057806349c2a1a61461038c578063576b5002146103a8576101c2565b806318160ddd146102e857806323b872dd146103065780632e1a7d4d14610336576101c2565b80630c0512e9116101a05780630c0512e9146102475780630c56ae3b1461026557806313ed08461461028557806316934fc4146102b5576101c2565b8063013cf08b146101c657806306fdde03146101f9578063095ea7b314610217575b5f5ffd5b6101e060048036038101906101db9190611c00565b610572565b6040516101f09493929190611cc4565b60405180910390f35b610201610630565b60405161020e9190611d0e565b60405180910390f35b610231600480360381019061022c9190611d88565b6106c0565b60405161023e9190611dc6565b60405180910390f35b61024f6106e2565b60405161025c9190611ddf565b60405180910390f35b61026d6106e8565b60405161027c93929190611df8565b60405180910390f35b61029f600480360381019061029a9190611e2d565b6106ff565b6040516102ac9190611ddf565b60405180910390f35b6102cf60048036038101906102ca9190611e6b565b610780565b6040516102df9493929190611ea5565b60405180910390f35b6102f06107cb565b6040516102fd9190611ddf565b60405180910390f35b610320600480360381019061031b9190611ee8565b6107d4565b60405161032d9190611dc6565b60405180910390f35b610350600480360381019061034b9190611c00565b610802565b005b61035a610985565b6040516103679190611f53565b60405180910390f35b61038a60048036038101906103859190611c00565b61098d565b005b6103a660048036038101906103a19190612098565b610aa8565b005b6103b0610b84565b005b6103ba610cd6565b6040516103c79190611ddf565b60405180910390f35b6103ea60048036038101906103e59190611e6b565b610cdc565b6040516103f79190611ddf565b60405180910390f35b610408610d21565b005b610424600480360381019061041f91906120df565b610d34565b005b61042e610f8a565b60405161043b919061211d565b60405180910390f35b61044c610fb2565b6040516104599190611d0e565b60405180910390f35b61047c60048036038101906104779190611d88565b611042565b6040516104899190611dc6565b60405180910390f35b61049a611064565b6040516104a791906121ed565b60405180910390f35b6104b86110f1565b6040516104c59190611ddf565b60405180910390f35b6104e860048036038101906104e39190612237565b6110fd565b005b6104f26112a1565b6040516104ff9190611ddf565b60405180910390f35b610522600480360381019061051d9190612275565b6112ad565b60405161052f9190611ddf565b60405180910390f35b61054061132f565b60405161054d9190611ddf565b60405180910390f35b610570600480360381019061056b9190611e6b565b611334565b005b6007602052805f5260405f205f91509050805f018054610591906122e0565b80601f01602080910402602001604051908101604052809291908181526020018280546105bd906122e0565b80156106085780601f106105df57610100808354040283529160200191610608565b820191905f5260205f20905b8154815290600101906020018083116105eb57829003601f168201915b505050505090806001015490806002015490806003015f9054906101000a900460ff16905084565b60606003805461063f906122e0565b80601f016020809104026020016040519081016040528092919081815260200182805461066b906122e0565b80156106b65780601f1061068d576101008083540402835291602001916106b6565b820191905f5260205f20905b81548152906001019060200180831161069957829003601f168201915b5050505050905090565b5f5f6106ca6113b8565b90506106d78185856113bf565b600191505092915050565b600d5481565b600a805f0154908060010154908060020154905083565b5f5f69021e19e0c9bab2400000841161073157683635c9adc5dea00000841161072957600a61072c565b600c5b610734565b600f5b60ff1690505f62278d00841161074b57600161074e565b60025b60ff1690508060648387610762919061233d565b61076c91906123ab565b610776919061233d565b9250505092915050565b6006602052805f5260405f205f91509050805f015490806001015490806002015490806003015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905084565b5f600254905090565b5f5f6107de6113b8565b90506107eb8582856113d1565b6107f6858585611463565b60019150509392505050565b5f60065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20905081815f01541015610888576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087f90612425565b60405180910390fd5b5f4290505f82600201548261089d9190612443565b90505f5f9050600e548210156108df5760646014866108bc919061233d565b6108c691906123ab565b90506108de306002836108d991906123ab565b611553565b5b5f81866108ec9190612443565b905085855f015f8282546109009190612443565b9250508190555085600a6002015f82825461091b9190612443565b9250508190555061092d303383611463565b3373ffffffffffffffffffffffffffffffffffffffff167f92ccf450a286a957af52509bc1c9939d1a6a481783e142e41e2499f0bb66ebc68284604051610975929190612476565b60405180910390a2505050505050565b5f6012905090565b5f81116109cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c6906124e7565b60405180910390fd5b6109da333083611463565b60085f0133908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060086001015f828254610a509190612505565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167fc28711c8dcc0cb3d25732e13809d1d8c2640669a0a3fb4f7729810a9caaffdff82604051610a9d9190611ddf565b60405180910390a250565b610ab06115d2565b600d5f815480929190610ac290612538565b919050555060405180608001604052808281526020015f81526020015f81526020015f151581525060075f600d5481526020019081526020015f205f820151815f019081610b10919061271f565b5060208201518160010155604082015181600201556060820151816003015f6101000a81548160ff021916908315150217905550905050600d547f9c770c289ab5bf7e57cb1d23c8ceae993aea46eb64847072fd3d78ca60d3e43282604051610b799190611d0e565b60405180910390a250565b610b8c6115d2565b5f60085f018054905011610bd5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bcc90612838565b60405180910390fd5b5f60085f01805490504244604051602001610bf1929190612876565b604051602081830303815290604052805190602001205f1c610c1391906128a1565b90505f60085f018281548110610c2c57610c2b6128d1565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f60086001015490505f60086001018190555060085f015f610c789190611b83565b610c83308383611463565b8173ffffffffffffffffffffffffffffffffffffffff167f275eaacf9e506f9c68b251c2f97cf723c4fb9a3b94e42a1dfb581543c135f0c082604051610cc99190611ddf565b60405180910390a2505050565b600e5481565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610d296115d2565b610d325f611659565b565b5f8211610d76576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d6d90612948565b60405180910390fd5b610d81333084611463565b5f60065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f4290505f825f01541115610e0b575f826002015482610de19190612443565b9050610df0835f0154826106ff565b836001015f828254610e029190612505565b92505081905550505b83825f015f828254610e1d9190612505565b925050819055508082600201819055505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015610e9557503373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b15610f04575f6064600586610eaa919061233d565b610eb491906123ab565b9050610ec0848261171c565b83836003015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505b83600a6002015f828254610f189190612505565b925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f9f9e4044c5742cca66ca090b21552bac14645e68bad7a92364a9d9ff18111a1c86604051610f7c9190611ddf565b60405180910390a350505050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054610fc1906122e0565b80601f0160208091040260200160405190810160405280929190818152602001828054610fed906122e0565b80156110385780601f1061100f57610100808354040283529160200191611038565b820191905f5260205f20905b81548152906001019060200180831161101b57829003601f168201915b5050505050905090565b5f5f61104c6113b8565b9050611059818585611463565b600191505092915050565b606060085f018054806020026020016040519081016040528092919081815260200182805480156110e757602002820191905f5260205f20905b815f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161109e575b5050505050905090565b60088060010154905081565b5f60075f8481526020019081526020015f2090505f815f018054611120906122e0565b905011611162576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611159906129b0565b60405180910390fd5b5f60065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015490505f81116111e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111de90612a18565b60405180910390fd5b821561120c5780826001015f8282546112009190612505565b92505081905550611227565b80826002015f82825461121f9190612505565b925050819055505b8160020154826001015411826003015f6101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff16847ff2913dbe661ee2acc4a046d8fbcdc792373bda34c41c6086484b5345e5785e5f856040516112939190611dc6565b60405180910390a350505050565b5f600860010154905090565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b600581565b61133c6115d2565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036113ac575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016113a3919061211d565b60405180910390fd5b6113b581611659565b50565b5f33905090565b6113cc838383600161179b565b505050565b5f6113dc84846112ad565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461145d578181101561144e578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161144593929190612a36565b60405180910390fd5b61145c84848484035f61179b565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036114d3575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016114ca919061211d565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611543575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161153a919061211d565b60405180910390fd5b61154e83838361196a565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036115c3575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016115ba919061211d565b60405180910390fd5b6115ce825f8361196a565b5050565b6115da6113b8565b73ffffffffffffffffffffffffffffffffffffffff166115f8610f8a565b73ffffffffffffffffffffffffffffffffffffffff16146116575761161b6113b8565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161164e919061211d565b60405180910390fd5b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361178c575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611783919061211d565b60405180910390fd5b6117975f838361196a565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361180b575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401611802919061211d565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361187b575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401611872919061211d565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611964578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161195b9190611ddf565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036119ba578060025f8282546119ae9190612505565b92505081905550611a88565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611a43578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611a3a93929190612a36565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611acf578060025f8282540392505081905550611b19565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611b769190611ddf565b60405180910390a3505050565b5080545f8255905f5260205f2090810190611b9e9190611ba1565b50565b5b80821115611bb8575f815f905550600101611ba2565b5090565b5f604051905090565b5f5ffd5b5f5ffd5b5f819050919050565b611bdf81611bcd565b8114611be9575f5ffd5b50565b5f81359050611bfa81611bd6565b92915050565b5f60208284031215611c1557611c14611bc5565b5b5f611c2284828501611bec565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611c6d82611c2b565b611c778185611c35565b9350611c87818560208601611c45565b611c9081611c53565b840191505092915050565b611ca481611bcd565b82525050565b5f8115159050919050565b611cbe81611caa565b82525050565b5f6080820190508181035f830152611cdc8187611c63565b9050611ceb6020830186611c9b565b611cf86040830185611c9b565b611d056060830184611cb5565b95945050505050565b5f6020820190508181035f830152611d268184611c63565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611d5782611d2e565b9050919050565b611d6781611d4d565b8114611d71575f5ffd5b50565b5f81359050611d8281611d5e565b92915050565b5f5f60408385031215611d9e57611d9d611bc5565b5b5f611dab85828601611d74565b9250506020611dbc85828601611bec565b9150509250929050565b5f602082019050611dd95f830184611cb5565b92915050565b5f602082019050611df25f830184611c9b565b92915050565b5f606082019050611e0b5f830186611c9b565b611e186020830185611c9b565b611e256040830184611c9b565b949350505050565b5f5f60408385031215611e4357611e42611bc5565b5b5f611e5085828601611bec565b9250506020611e6185828601611bec565b9150509250929050565b5f60208284031215611e8057611e7f611bc5565b5b5f611e8d84828501611d74565b91505092915050565b611e9f81611d4d565b82525050565b5f608082019050611eb85f830187611c9b565b611ec56020830186611c9b565b611ed26040830185611c9b565b611edf6060830184611e96565b95945050505050565b5f5f5f60608486031215611eff57611efe611bc5565b5b5f611f0c86828701611d74565b9350506020611f1d86828701611d74565b9250506040611f2e86828701611bec565b9150509250925092565b5f60ff82169050919050565b611f4d81611f38565b82525050565b5f602082019050611f665f830184611f44565b92915050565b5f5ffd5b5f5ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611faa82611c53565b810181811067ffffffffffffffff82111715611fc957611fc8611f74565b5b80604052505050565b5f611fdb611bbc565b9050611fe78282611fa1565b919050565b5f67ffffffffffffffff82111561200657612005611f74565b5b61200f82611c53565b9050602081019050919050565b828183375f83830152505050565b5f61203c61203784611fec565b611fd2565b90508281526020810184848401111561205857612057611f70565b5b61206384828561201c565b509392505050565b5f82601f83011261207f5761207e611f6c565b5b813561208f84826020860161202a565b91505092915050565b5f602082840312156120ad576120ac611bc5565b5b5f82013567ffffffffffffffff8111156120ca576120c9611bc9565b5b6120d68482850161206b565b91505092915050565b5f5f604083850312156120f5576120f4611bc5565b5b5f61210285828601611bec565b925050602061211385828601611d74565b9150509250929050565b5f6020820190506121305f830184611e96565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b61216881611d4d565b82525050565b5f612179838361215f565b60208301905092915050565b5f602082019050919050565b5f61219b82612136565b6121a58185612140565b93506121b083612150565b805f5b838110156121e05781516121c7888261216e565b97506121d283612185565b9250506001810190506121b3565b5085935050505092915050565b5f6020820190508181035f8301526122058184612191565b905092915050565b61221681611caa565b8114612220575f5ffd5b50565b5f813590506122318161220d565b92915050565b5f5f6040838503121561224d5761224c611bc5565b5b5f61225a85828601611bec565b925050602061226b85828601612223565b9150509250929050565b5f5f6040838503121561228b5761228a611bc5565b5b5f61229885828601611d74565b92505060206122a985828601611d74565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806122f757607f821691505b60208210810361230a576123096122b3565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61234782611bcd565b915061235283611bcd565b925082820261236081611bcd565b9150828204841483151761237757612376612310565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6123b582611bcd565b91506123c083611bcd565b9250826123d0576123cf61237e565b5b828204905092915050565b7f496e73756666696369656e74207374616b65642062616c616e636500000000005f82015250565b5f61240f601b83611c35565b915061241a826123db565b602082019050919050565b5f6020820190508181035f83015261243c81612403565b9050919050565b5f61244d82611bcd565b915061245883611bcd565b92508282039050818111156124705761246f612310565b5b92915050565b5f6040820190506124895f830185611c9b565b6124966020830184611c9b565b9392505050565b7f43616e6e6f7420656e7465722077697468207a65726f20746f6b656e730000005f82015250565b5f6124d1601d83611c35565b91506124dc8261249d565b602082019050919050565b5f6020820190508181035f8301526124fe816124c5565b9050919050565b5f61250f82611bcd565b915061251a83611bcd565b925082820190508082111561253257612531612310565b5b92915050565b5f61254282611bcd565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361257457612573612310565b5b600182019050919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026125db7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826125a0565b6125e586836125a0565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61262061261b61261684611bcd565b6125fd565b611bcd565b9050919050565b5f819050919050565b61263983612606565b61264d61264582612627565b8484546125ac565b825550505050565b5f5f905090565b612664612655565b61266f818484612630565b505050565b5b81811015612692576126875f8261265c565b600181019050612675565b5050565b601f8211156126d7576126a88161257f565b6126b184612591565b810160208510156126c0578190505b6126d46126cc85612591565b830182612674565b50505b505050565b5f82821c905092915050565b5f6126f75f19846008026126dc565b1980831691505092915050565b5f61270f83836126e8565b9150826002028217905092915050565b61272882611c2b565b67ffffffffffffffff81111561274157612740611f74565b5b61274b82546122e0565b612756828285612696565b5f60209050601f831160018114612787575f8415612775578287015190505b61277f8582612704565b8655506127e6565b601f1984166127958661257f565b5f5b828110156127bc57848901518255600182019150602085019450602081019050612797565b868310156127d957848901516127d5601f8916826126e8565b8355505b6001600288020188555050505b505050505050565b7f4e6f207061727469636970616e747320696e20746865206c6f747465727900005f82015250565b5f612822601e83611c35565b915061282d826127ee565b602082019050919050565b5f6020820190508181035f83015261284f81612816565b9050919050565b5f819050919050565b61287061286b82611bcd565b612856565b82525050565b5f612881828561285f565b602082019150612891828461285f565b6020820191508190509392505050565b5f6128ab82611bcd565b91506128b683611bcd565b9250826128c6576128c561237e565b5b828206905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f43616e6e6f74207374616b65207a65726f20746f6b656e7300000000000000005f82015250565b5f612932601883611c35565b915061293d826128fe565b602082019050919050565b5f6020820190508181035f83015261295f81612926565b9050919050565b7f496e76616c69642070726f706f73616c204944000000000000000000000000005f82015250565b5f61299a601383611c35565b91506129a582612966565b602082019050919050565b5f6020820190508181035f8301526129c78161298e565b9050919050565b7f4e6f207374616b656420746f6b656e7320746f20766f746500000000000000005f82015250565b5f612a02601883611c35565b9150612a0d826129ce565b602082019050919050565b5f6020820190508181035f830152612a2f816129f6565b9050919050565b5f606082019050612a495f830186611e96565b612a566020830185611c9b565b612a636040830184611c9b565b94935050505056fea264697066735822122039a9bc7d925fd2a79fbe5ca861c774e600bccd1ec7ea33dd3b1284506bac0a6364736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH3 0x93A80 PUSH1 0xE SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x16 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x3420 CODESIZE SUB DUP1 PUSH2 0x3420 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x38 SWAP2 SWAP1 PUSH2 0x50A JUMP JUMPDEST CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4672657361436F696E0000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4652455341000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0x78E JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xC4 SWAP2 SWAP1 PUSH2 0x78E JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x137 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12E SWAP2 SWAP1 PUSH2 0x89C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x146 DUP2 PUSH2 0x172 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x157 CALLER DUP5 PUSH2 0x235 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP2 PUSH1 0xA PUSH0 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xA PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP POP PUSH2 0x972 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2A5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29C SWAP2 SWAP1 PUSH2 0x89C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2B6 PUSH0 DUP4 DUP4 PUSH2 0x2BA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x30A JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x2FE SWAP2 SWAP1 PUSH2 0x8E2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x3D8 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x393 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x924 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x41F JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x469 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x4C6 SWAP2 SWAP1 PUSH2 0x959 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4E9 DUP2 PUSH2 0x4D7 JUMP JUMPDEST DUP2 EQ PUSH2 0x4F3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x504 DUP2 PUSH2 0x4E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x521 JUMPI PUSH2 0x520 PUSH2 0x4D3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x52E DUP7 DUP3 DUP8 ADD PUSH2 0x4F6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x53F DUP7 DUP3 DUP8 ADD PUSH2 0x4F6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x550 DUP7 DUP3 DUP8 ADD PUSH2 0x4F6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x5D5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x5E8 JUMPI PUSH2 0x5E7 PUSH2 0x591 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x64A PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x60F JUMP JUMPDEST PUSH2 0x654 DUP7 DUP4 PUSH2 0x60F JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x68F PUSH2 0x68A PUSH2 0x685 DUP5 PUSH2 0x4D7 JUMP JUMPDEST PUSH2 0x66C JUMP JUMPDEST PUSH2 0x4D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6A8 DUP4 PUSH2 0x675 JUMP JUMPDEST PUSH2 0x6BC PUSH2 0x6B4 DUP3 PUSH2 0x696 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x61B JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6D3 PUSH2 0x6C4 JUMP JUMPDEST PUSH2 0x6DE DUP2 DUP5 DUP5 PUSH2 0x69F JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x701 JUMPI PUSH2 0x6F6 PUSH0 DUP3 PUSH2 0x6CB JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x6E4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x746 JUMPI PUSH2 0x717 DUP2 PUSH2 0x5EE JUMP JUMPDEST PUSH2 0x720 DUP5 PUSH2 0x600 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x72F JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x743 PUSH2 0x73B DUP6 PUSH2 0x600 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x6E3 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x766 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x74B JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x77E DUP4 DUP4 PUSH2 0x757 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x797 DUP3 PUSH2 0x55A JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7B0 JUMPI PUSH2 0x7AF PUSH2 0x564 JUMP JUMPDEST JUMPDEST PUSH2 0x7BA DUP3 SLOAD PUSH2 0x5BE JUMP JUMPDEST PUSH2 0x7C5 DUP3 DUP3 DUP6 PUSH2 0x705 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x7F6 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x7E4 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x7EE DUP6 DUP3 PUSH2 0x773 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x855 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x804 DUP7 PUSH2 0x5EE JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x82B JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x806 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x848 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x844 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x757 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x886 DUP3 PUSH2 0x85D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x896 DUP2 PUSH2 0x87C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8AF PUSH0 DUP4 ADD DUP5 PUSH2 0x88D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x8EC DUP3 PUSH2 0x4D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x8F7 DUP4 PUSH2 0x4D7 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x90F JUMPI PUSH2 0x90E PUSH2 0x8B5 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x91E DUP2 PUSH2 0x4D7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x937 PUSH0 DUP4 ADD DUP7 PUSH2 0x88D JUMP JUMPDEST PUSH2 0x944 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x915 JUMP JUMPDEST PUSH2 0x951 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x915 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x96C PUSH0 DUP4 ADD DUP5 PUSH2 0x915 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2AA1 DUP1 PUSH2 0x97F PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C2 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5FEC5C64 GT PUSH2 0xF7 JUMPI DUP1 PUSH4 0xB3A55A66 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xCDB12C83 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xCDB12C83 EQ PUSH2 0x4EA JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x508 JUMPI DUP1 PUSH4 0xE1913C81 EQ PUSH2 0x538 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x556 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0xB3A55A66 EQ PUSH2 0x492 JUMPI DUP1 PUSH4 0xBA13A572 EQ PUSH2 0x4B0 JUMPI DUP1 PUSH4 0xC9D27AFE EQ PUSH2 0x4CE JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x7ACB7757 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x7ACB7757 EQ PUSH2 0x40A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x426 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x444 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x462 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x5FEC5C64 EQ PUSH2 0x3B2 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3D0 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x400 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x164 JUMPI DUP1 PUSH4 0x313CE567 GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x352 JUMPI DUP1 PUSH4 0x3FD43098 EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0x49C2A1A6 EQ PUSH2 0x38C JUMPI DUP1 PUSH4 0x576B5002 EQ PUSH2 0x3A8 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2E8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x306 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x336 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0xC0512E9 GT PUSH2 0x1A0 JUMPI DUP1 PUSH4 0xC0512E9 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0xC56AE3B EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0x13ED0846 EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0x16934FC4 EQ PUSH2 0x2B5 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x13CF08B EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x217 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x1C00 JUMP JUMPDEST PUSH2 0x572 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F0 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x201 PUSH2 0x630 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20E SWAP2 SWAP1 PUSH2 0x1D0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x231 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22C SWAP2 SWAP1 PUSH2 0x1D88 JUMP JUMPDEST PUSH2 0x6C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23E SWAP2 SWAP1 PUSH2 0x1DC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24F PUSH2 0x6E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25C SWAP2 SWAP1 PUSH2 0x1DDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26D PUSH2 0x6E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x1E2D JUMP JUMPDEST PUSH2 0x6FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AC SWAP2 SWAP1 PUSH2 0x1DDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CA SWAP2 SWAP1 PUSH2 0x1E6B JUMP JUMPDEST PUSH2 0x780 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DF SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1EA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F0 PUSH2 0x7CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FD SWAP2 SWAP1 PUSH2 0x1DDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x320 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31B SWAP2 SWAP1 PUSH2 0x1EE8 JUMP JUMPDEST PUSH2 0x7D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32D SWAP2 SWAP1 PUSH2 0x1DC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x350 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34B SWAP2 SWAP1 PUSH2 0x1C00 JUMP JUMPDEST PUSH2 0x802 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x35A PUSH2 0x985 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x367 SWAP2 SWAP1 PUSH2 0x1F53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x385 SWAP2 SWAP1 PUSH2 0x1C00 JUMP JUMPDEST PUSH2 0x98D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A1 SWAP2 SWAP1 PUSH2 0x2098 JUMP JUMPDEST PUSH2 0xAA8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3B0 PUSH2 0xB84 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3BA PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C7 SWAP2 SWAP1 PUSH2 0x1DDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E5 SWAP2 SWAP1 PUSH2 0x1E6B JUMP JUMPDEST PUSH2 0xCDC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F7 SWAP2 SWAP1 PUSH2 0x1DDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x408 PUSH2 0xD21 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x424 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x41F SWAP2 SWAP1 PUSH2 0x20DF JUMP JUMPDEST PUSH2 0xD34 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x42E PUSH2 0xF8A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43B SWAP2 SWAP1 PUSH2 0x211D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x44C PUSH2 0xFB2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x459 SWAP2 SWAP1 PUSH2 0x1D0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x47C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x477 SWAP2 SWAP1 PUSH2 0x1D88 JUMP JUMPDEST PUSH2 0x1042 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x489 SWAP2 SWAP1 PUSH2 0x1DC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x49A PUSH2 0x1064 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A7 SWAP2 SWAP1 PUSH2 0x21ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B8 PUSH2 0x10F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C5 SWAP2 SWAP1 PUSH2 0x1DDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4E3 SWAP2 SWAP1 PUSH2 0x2237 JUMP JUMPDEST PUSH2 0x10FD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4F2 PUSH2 0x12A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4FF SWAP2 SWAP1 PUSH2 0x1DDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x522 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x51D SWAP2 SWAP1 PUSH2 0x2275 JUMP JUMPDEST PUSH2 0x12AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x52F SWAP2 SWAP1 PUSH2 0x1DDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x540 PUSH2 0x132F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x54D SWAP2 SWAP1 PUSH2 0x1DDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x570 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x56B SWAP2 SWAP1 PUSH2 0x1E6B JUMP JUMPDEST PUSH2 0x1334 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD DUP1 SLOAD PUSH2 0x591 SWAP1 PUSH2 0x22E0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5BD SWAP1 PUSH2 0x22E0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x608 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5DF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x608 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5EB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x63F SWAP1 PUSH2 0x22E0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x66B SWAP1 PUSH2 0x22E0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6B6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x68D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6B6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x699 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x6CA PUSH2 0x13B8 JUMP JUMPDEST SWAP1 POP PUSH2 0x6D7 DUP2 DUP6 DUP6 PUSH2 0x13BF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH0 PUSH0 PUSH10 0x21E19E0C9BAB2400000 DUP5 GT PUSH2 0x731 JUMPI PUSH9 0x3635C9ADC5DEA00000 DUP5 GT PUSH2 0x729 JUMPI PUSH1 0xA PUSH2 0x72C JUMP JUMPDEST PUSH1 0xC JUMPDEST PUSH2 0x734 JUMP JUMPDEST PUSH1 0xF JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH0 PUSH3 0x278D00 DUP5 GT PUSH2 0x74B JUMPI PUSH1 0x1 PUSH2 0x74E JUMP JUMPDEST PUSH1 0x2 JUMPDEST PUSH1 0xFF AND SWAP1 POP DUP1 PUSH1 0x64 DUP4 DUP8 PUSH2 0x762 SWAP2 SWAP1 PUSH2 0x233D JUMP JUMPDEST PUSH2 0x76C SWAP2 SWAP1 PUSH2 0x23AB JUMP JUMPDEST PUSH2 0x776 SWAP2 SWAP1 PUSH2 0x233D JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP5 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x7DE PUSH2 0x13B8 JUMP JUMPDEST SWAP1 POP PUSH2 0x7EB DUP6 DUP3 DUP6 PUSH2 0x13D1 JUMP JUMPDEST PUSH2 0x7F6 DUP6 DUP6 DUP6 PUSH2 0x1463 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP2 DUP2 PUSH0 ADD SLOAD LT ISZERO PUSH2 0x888 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x87F SWAP1 PUSH2 0x2425 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 TIMESTAMP SWAP1 POP PUSH0 DUP3 PUSH1 0x2 ADD SLOAD DUP3 PUSH2 0x89D SWAP2 SWAP1 PUSH2 0x2443 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH0 SWAP1 POP PUSH1 0xE SLOAD DUP3 LT ISZERO PUSH2 0x8DF JUMPI PUSH1 0x64 PUSH1 0x14 DUP7 PUSH2 0x8BC SWAP2 SWAP1 PUSH2 0x233D JUMP JUMPDEST PUSH2 0x8C6 SWAP2 SWAP1 PUSH2 0x23AB JUMP JUMPDEST SWAP1 POP PUSH2 0x8DE ADDRESS PUSH1 0x2 DUP4 PUSH2 0x8D9 SWAP2 SWAP1 PUSH2 0x23AB JUMP JUMPDEST PUSH2 0x1553 JUMP JUMPDEST JUMPDEST PUSH0 DUP2 DUP7 PUSH2 0x8EC SWAP2 SWAP1 PUSH2 0x2443 JUMP JUMPDEST SWAP1 POP DUP6 DUP6 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x900 SWAP2 SWAP1 PUSH2 0x2443 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0xA PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x91B SWAP2 SWAP1 PUSH2 0x2443 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x92D ADDRESS CALLER DUP4 PUSH2 0x1463 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x92CCF450A286A957AF52509BC1C9939D1A6A481783E142E41E2499F0BB66EBC6 DUP3 DUP5 PUSH1 0x40 MLOAD PUSH2 0x975 SWAP3 SWAP2 SWAP1 PUSH2 0x2476 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x9CF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C6 SWAP1 PUSH2 0x24E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9DA CALLER ADDRESS DUP4 PUSH2 0x1463 JUMP JUMPDEST PUSH1 0x8 PUSH0 ADD CALLER SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x8 PUSH1 0x1 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xA50 SWAP2 SWAP1 PUSH2 0x2505 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC28711C8DCC0CB3D25732E13809D1D8C2640669A0A3FB4F7729810A9CAAFFDFF DUP3 PUSH1 0x40 MLOAD PUSH2 0xA9D SWAP2 SWAP1 PUSH2 0x1DDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0xAB0 PUSH2 0x15D2 JUMP JUMPDEST PUSH1 0xD PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xAC2 SWAP1 PUSH2 0x2538 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x7 PUSH0 PUSH1 0xD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SWAP1 DUP2 PUSH2 0xB10 SWAP2 SWAP1 PUSH2 0x271F JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0xD SLOAD PUSH32 0x9C770C289AB5BF7E57CB1D23C8CEAE993AEA46EB64847072FD3D78CA60D3E432 DUP3 PUSH1 0x40 MLOAD PUSH2 0xB79 SWAP2 SWAP1 PUSH2 0x1D0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0xB8C PUSH2 0x15D2 JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 ADD DUP1 SLOAD SWAP1 POP GT PUSH2 0xBD5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBCC SWAP1 PUSH2 0x2838 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x8 PUSH0 ADD DUP1 SLOAD SWAP1 POP TIMESTAMP PREVRANDAO PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xBF1 SWAP3 SWAP2 SWAP1 PUSH2 0x2876 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH0 SHR PUSH2 0xC13 SWAP2 SWAP1 PUSH2 0x28A1 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x8 PUSH0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xC2C JUMPI PUSH2 0xC2B PUSH2 0x28D1 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 PUSH1 0x8 PUSH1 0x1 ADD SLOAD SWAP1 POP PUSH0 PUSH1 0x8 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x8 PUSH0 ADD PUSH0 PUSH2 0xC78 SWAP2 SWAP1 PUSH2 0x1B83 JUMP JUMPDEST PUSH2 0xC83 ADDRESS DUP4 DUP4 PUSH2 0x1463 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x275EAACF9E506F9C68B251C2F97CF723C4FB9A3B94E42A1DFB581543C135F0C0 DUP3 PUSH1 0x40 MLOAD PUSH2 0xCC9 SWAP2 SWAP1 PUSH2 0x1DDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD29 PUSH2 0x15D2 JUMP JUMPDEST PUSH2 0xD32 PUSH0 PUSH2 0x1659 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP3 GT PUSH2 0xD76 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD6D SWAP1 PUSH2 0x2948 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD81 CALLER ADDRESS DUP5 PUSH2 0x1463 JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 TIMESTAMP SWAP1 POP PUSH0 DUP3 PUSH0 ADD SLOAD GT ISZERO PUSH2 0xE0B JUMPI PUSH0 DUP3 PUSH1 0x2 ADD SLOAD DUP3 PUSH2 0xDE1 SWAP2 SWAP1 PUSH2 0x2443 JUMP JUMPDEST SWAP1 POP PUSH2 0xDF0 DUP4 PUSH0 ADD SLOAD DUP3 PUSH2 0x6FF JUMP JUMPDEST DUP4 PUSH1 0x1 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xE02 SWAP2 SWAP1 PUSH2 0x2505 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMPDEST DUP4 DUP3 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xE1D SWAP2 SWAP1 PUSH2 0x2505 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xE95 JUMPI POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xF04 JUMPI PUSH0 PUSH1 0x64 PUSH1 0x5 DUP7 PUSH2 0xEAA SWAP2 SWAP1 PUSH2 0x233D JUMP JUMPDEST PUSH2 0xEB4 SWAP2 SWAP1 PUSH2 0x23AB JUMP JUMPDEST SWAP1 POP PUSH2 0xEC0 DUP5 DUP3 PUSH2 0x171C JUMP JUMPDEST DUP4 DUP4 PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMPDEST DUP4 PUSH1 0xA PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xF18 SWAP2 SWAP1 PUSH2 0x2505 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9F9E4044C5742CCA66CA090B21552BAC14645E68BAD7A92364A9D9FF18111A1C DUP7 PUSH1 0x40 MLOAD PUSH2 0xF7C SWAP2 SWAP1 PUSH2 0x1DDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xFC1 SWAP1 PUSH2 0x22E0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xFED SWAP1 PUSH2 0x22E0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1038 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x100F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1038 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x101B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x104C PUSH2 0x13B8 JUMP JUMPDEST SWAP1 POP PUSH2 0x1059 DUP2 DUP6 DUP6 PUSH2 0x1463 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x8 PUSH0 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x10E7 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x109E JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH0 ADD DUP1 SLOAD PUSH2 0x1120 SWAP1 PUSH2 0x22E0 JUMP JUMPDEST SWAP1 POP GT PUSH2 0x1162 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1159 SWAP1 PUSH2 0x29B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0x11E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11DE SWAP1 PUSH2 0x2A18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 ISZERO PUSH2 0x120C JUMPI DUP1 DUP3 PUSH1 0x1 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1200 SWAP2 SWAP1 PUSH2 0x2505 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1227 JUMP JUMPDEST DUP1 DUP3 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x121F SWAP2 SWAP1 PUSH2 0x2505 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH1 0x2 ADD SLOAD DUP3 PUSH1 0x1 ADD SLOAD GT DUP3 PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF2913DBE661EE2ACC4A046D8FBCDC792373BDA34C41C6086484B5345E5785E5F DUP6 PUSH1 0x40 MLOAD PUSH2 0x1293 SWAP2 SWAP1 PUSH2 0x1DC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 DUP2 JUMP JUMPDEST PUSH2 0x133C PUSH2 0x15D2 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13AC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13A3 SWAP2 SWAP1 PUSH2 0x211D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13B5 DUP2 PUSH2 0x1659 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x13CC DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x179B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x13DC DUP5 DUP5 PUSH2 0x12AD JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x145D JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x144E JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1445 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2A36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x145C DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x179B JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14D3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14CA SWAP2 SWAP1 PUSH2 0x211D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1543 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x153A SWAP2 SWAP1 PUSH2 0x211D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x154E DUP4 DUP4 DUP4 PUSH2 0x196A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15C3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15BA SWAP2 SWAP1 PUSH2 0x211D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x15CE DUP3 PUSH0 DUP4 PUSH2 0x196A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x15DA PUSH2 0x13B8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x15F8 PUSH2 0xF8A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1657 JUMPI PUSH2 0x161B PUSH2 0x13B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x164E SWAP2 SWAP1 PUSH2 0x211D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x178C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1783 SWAP2 SWAP1 PUSH2 0x211D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1797 PUSH0 DUP4 DUP4 PUSH2 0x196A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x180B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1802 SWAP2 SWAP1 PUSH2 0x211D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x187B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1872 SWAP2 SWAP1 PUSH2 0x211D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1964 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x195B SWAP2 SWAP1 PUSH2 0x1DDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x19BA JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x19AE SWAP2 SWAP1 PUSH2 0x2505 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1A88 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1A43 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A3A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2A36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1ACF JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1B19 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1B76 SWAP2 SWAP1 PUSH2 0x1DDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST POP DUP1 SLOAD PUSH0 DUP3 SSTORE SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1B9E SWAP2 SWAP1 PUSH2 0x1BA1 JUMP JUMPDEST POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1BB8 JUMPI PUSH0 DUP2 PUSH0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x1BA2 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BDF DUP2 PUSH2 0x1BCD JUMP JUMPDEST DUP2 EQ PUSH2 0x1BE9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BFA DUP2 PUSH2 0x1BD6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C15 JUMPI PUSH2 0x1C14 PUSH2 0x1BC5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C22 DUP5 DUP3 DUP6 ADD PUSH2 0x1BEC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C6D DUP3 PUSH2 0x1C2B JUMP JUMPDEST PUSH2 0x1C77 DUP2 DUP6 PUSH2 0x1C35 JUMP JUMPDEST SWAP4 POP PUSH2 0x1C87 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C45 JUMP JUMPDEST PUSH2 0x1C90 DUP2 PUSH2 0x1C53 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1CA4 DUP2 PUSH2 0x1BCD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CBE DUP2 PUSH2 0x1CAA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1CDC DUP2 DUP8 PUSH2 0x1C63 JUMP JUMPDEST SWAP1 POP PUSH2 0x1CEB PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1C9B JUMP JUMPDEST PUSH2 0x1CF8 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1C9B JUMP JUMPDEST PUSH2 0x1D05 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1CB5 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D26 DUP2 DUP5 PUSH2 0x1C63 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D57 DUP3 PUSH2 0x1D2E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D67 DUP2 PUSH2 0x1D4D JUMP JUMPDEST DUP2 EQ PUSH2 0x1D71 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D82 DUP2 PUSH2 0x1D5E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D9E JUMPI PUSH2 0x1D9D PUSH2 0x1BC5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DAB DUP6 DUP3 DUP7 ADD PUSH2 0x1D74 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1DBC DUP6 DUP3 DUP7 ADD PUSH2 0x1BEC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DD9 PUSH0 DUP4 ADD DUP5 PUSH2 0x1CB5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DF2 PUSH0 DUP4 ADD DUP5 PUSH2 0x1C9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1E0B PUSH0 DUP4 ADD DUP7 PUSH2 0x1C9B JUMP JUMPDEST PUSH2 0x1E18 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1C9B JUMP JUMPDEST PUSH2 0x1E25 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1C9B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E43 JUMPI PUSH2 0x1E42 PUSH2 0x1BC5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E50 DUP6 DUP3 DUP7 ADD PUSH2 0x1BEC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E61 DUP6 DUP3 DUP7 ADD PUSH2 0x1BEC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E80 JUMPI PUSH2 0x1E7F PUSH2 0x1BC5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E8D DUP5 DUP3 DUP6 ADD PUSH2 0x1D74 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E9F DUP2 PUSH2 0x1D4D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1EB8 PUSH0 DUP4 ADD DUP8 PUSH2 0x1C9B JUMP JUMPDEST PUSH2 0x1EC5 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1C9B JUMP JUMPDEST PUSH2 0x1ED2 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1C9B JUMP JUMPDEST PUSH2 0x1EDF PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1E96 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1EFF JUMPI PUSH2 0x1EFE PUSH2 0x1BC5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F0C DUP7 DUP3 DUP8 ADD PUSH2 0x1D74 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1F1D DUP7 DUP3 DUP8 ADD PUSH2 0x1D74 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1F2E DUP7 DUP3 DUP8 ADD PUSH2 0x1BEC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F4D DUP2 PUSH2 0x1F38 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F66 PUSH0 DUP4 ADD DUP5 PUSH2 0x1F44 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1FAA DUP3 PUSH2 0x1C53 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1FC9 JUMPI PUSH2 0x1FC8 PUSH2 0x1F74 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1FDB PUSH2 0x1BBC JUMP JUMPDEST SWAP1 POP PUSH2 0x1FE7 DUP3 DUP3 PUSH2 0x1FA1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2006 JUMPI PUSH2 0x2005 PUSH2 0x1F74 JUMP JUMPDEST JUMPDEST PUSH2 0x200F DUP3 PUSH2 0x1C53 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x203C PUSH2 0x2037 DUP5 PUSH2 0x1FEC JUMP JUMPDEST PUSH2 0x1FD2 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2058 JUMPI PUSH2 0x2057 PUSH2 0x1F70 JUMP JUMPDEST JUMPDEST PUSH2 0x2063 DUP5 DUP3 DUP6 PUSH2 0x201C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x207F JUMPI PUSH2 0x207E PUSH2 0x1F6C JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x208F DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x202A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20AD JUMPI PUSH2 0x20AC PUSH2 0x1BC5 JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20CA JUMPI PUSH2 0x20C9 PUSH2 0x1BC9 JUMP JUMPDEST JUMPDEST PUSH2 0x20D6 DUP5 DUP3 DUP6 ADD PUSH2 0x206B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20F5 JUMPI PUSH2 0x20F4 PUSH2 0x1BC5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2102 DUP6 DUP3 DUP7 ADD PUSH2 0x1BEC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2113 DUP6 DUP3 DUP7 ADD PUSH2 0x1D74 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2130 PUSH0 DUP4 ADD DUP5 PUSH2 0x1E96 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2168 DUP2 PUSH2 0x1D4D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2179 DUP4 DUP4 PUSH2 0x215F JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x219B DUP3 PUSH2 0x2136 JUMP JUMPDEST PUSH2 0x21A5 DUP2 DUP6 PUSH2 0x2140 JUMP JUMPDEST SWAP4 POP PUSH2 0x21B0 DUP4 PUSH2 0x2150 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x21E0 JUMPI DUP2 MLOAD PUSH2 0x21C7 DUP9 DUP3 PUSH2 0x216E JUMP JUMPDEST SWAP8 POP PUSH2 0x21D2 DUP4 PUSH2 0x2185 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x21B3 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2205 DUP2 DUP5 PUSH2 0x2191 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2216 DUP2 PUSH2 0x1CAA JUMP JUMPDEST DUP2 EQ PUSH2 0x2220 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2231 DUP2 PUSH2 0x220D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x224D JUMPI PUSH2 0x224C PUSH2 0x1BC5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x225A DUP6 DUP3 DUP7 ADD PUSH2 0x1BEC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x226B DUP6 DUP3 DUP7 ADD PUSH2 0x2223 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x228B JUMPI PUSH2 0x228A PUSH2 0x1BC5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2298 DUP6 DUP3 DUP7 ADD PUSH2 0x1D74 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x22A9 DUP6 DUP3 DUP7 ADD PUSH2 0x1D74 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x22F7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x230A JUMPI PUSH2 0x2309 PUSH2 0x22B3 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2347 DUP3 PUSH2 0x1BCD JUMP JUMPDEST SWAP2 POP PUSH2 0x2352 DUP4 PUSH2 0x1BCD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2360 DUP2 PUSH2 0x1BCD JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2377 JUMPI PUSH2 0x2376 PUSH2 0x2310 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x23B5 DUP3 PUSH2 0x1BCD JUMP JUMPDEST SWAP2 POP PUSH2 0x23C0 DUP4 PUSH2 0x1BCD JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x23D0 JUMPI PUSH2 0x23CF PUSH2 0x237E JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74207374616B65642062616C616E63650000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x240F PUSH1 0x1B DUP4 PUSH2 0x1C35 JUMP JUMPDEST SWAP2 POP PUSH2 0x241A DUP3 PUSH2 0x23DB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x243C DUP2 PUSH2 0x2403 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x244D DUP3 PUSH2 0x1BCD JUMP JUMPDEST SWAP2 POP PUSH2 0x2458 DUP4 PUSH2 0x1BCD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2470 JUMPI PUSH2 0x246F PUSH2 0x2310 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2489 PUSH0 DUP4 ADD DUP6 PUSH2 0x1C9B JUMP JUMPDEST PUSH2 0x2496 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1C9B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F7420656E7465722077697468207A65726F20746F6B656E73000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x24D1 PUSH1 0x1D DUP4 PUSH2 0x1C35 JUMP JUMPDEST SWAP2 POP PUSH2 0x24DC DUP3 PUSH2 0x249D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x24FE DUP2 PUSH2 0x24C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x250F DUP3 PUSH2 0x1BCD JUMP JUMPDEST SWAP2 POP PUSH2 0x251A DUP4 PUSH2 0x1BCD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2532 JUMPI PUSH2 0x2531 PUSH2 0x2310 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2542 DUP3 PUSH2 0x1BCD JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2574 JUMPI PUSH2 0x2573 PUSH2 0x2310 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x25DB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x25A0 JUMP JUMPDEST PUSH2 0x25E5 DUP7 DUP4 PUSH2 0x25A0 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2620 PUSH2 0x261B PUSH2 0x2616 DUP5 PUSH2 0x1BCD JUMP JUMPDEST PUSH2 0x25FD JUMP JUMPDEST PUSH2 0x1BCD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2639 DUP4 PUSH2 0x2606 JUMP JUMPDEST PUSH2 0x264D PUSH2 0x2645 DUP3 PUSH2 0x2627 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x25AC JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x2664 PUSH2 0x2655 JUMP JUMPDEST PUSH2 0x266F DUP2 DUP5 DUP5 PUSH2 0x2630 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2692 JUMPI PUSH2 0x2687 PUSH0 DUP3 PUSH2 0x265C JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2675 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x26D7 JUMPI PUSH2 0x26A8 DUP2 PUSH2 0x257F JUMP JUMPDEST PUSH2 0x26B1 DUP5 PUSH2 0x2591 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x26C0 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x26D4 PUSH2 0x26CC DUP6 PUSH2 0x2591 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x2674 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x26F7 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x26DC JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x270F DUP4 DUP4 PUSH2 0x26E8 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2728 DUP3 PUSH2 0x1C2B JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2741 JUMPI PUSH2 0x2740 PUSH2 0x1F74 JUMP JUMPDEST JUMPDEST PUSH2 0x274B DUP3 SLOAD PUSH2 0x22E0 JUMP JUMPDEST PUSH2 0x2756 DUP3 DUP3 DUP6 PUSH2 0x2696 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2787 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x2775 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x277F DUP6 DUP3 PUSH2 0x2704 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x27E6 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2795 DUP7 PUSH2 0x257F JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x27BC JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2797 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x27D9 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x27D5 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x26E8 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E6F207061727469636970616E747320696E20746865206C6F74746572790000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2822 PUSH1 0x1E DUP4 PUSH2 0x1C35 JUMP JUMPDEST SWAP2 POP PUSH2 0x282D DUP3 PUSH2 0x27EE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x284F DUP2 PUSH2 0x2816 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2870 PUSH2 0x286B DUP3 PUSH2 0x1BCD JUMP JUMPDEST PUSH2 0x2856 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2881 DUP3 DUP6 PUSH2 0x285F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x2891 DUP3 DUP5 PUSH2 0x285F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x28AB DUP3 PUSH2 0x1BCD JUMP JUMPDEST SWAP2 POP PUSH2 0x28B6 DUP4 PUSH2 0x1BCD JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x28C6 JUMPI PUSH2 0x28C5 PUSH2 0x237E JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x43616E6E6F74207374616B65207A65726F20746F6B656E730000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2932 PUSH1 0x18 DUP4 PUSH2 0x1C35 JUMP JUMPDEST SWAP2 POP PUSH2 0x293D DUP3 PUSH2 0x28FE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x295F DUP2 PUSH2 0x2926 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C69642070726F706F73616C20494400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x299A PUSH1 0x13 DUP4 PUSH2 0x1C35 JUMP JUMPDEST SWAP2 POP PUSH2 0x29A5 DUP3 PUSH2 0x2966 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x29C7 DUP2 PUSH2 0x298E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F207374616B656420746F6B656E7320746F20766F74650000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2A02 PUSH1 0x18 DUP4 PUSH2 0x1C35 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A0D DUP3 PUSH2 0x29CE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2A2F DUP2 PUSH2 0x29F6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2A49 PUSH0 DUP4 ADD DUP7 PUSH2 0x1E96 JUMP JUMPDEST PUSH2 0x2A56 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1C9B JUMP JUMPDEST PUSH2 0x2A63 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1C9B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY 0xA9 0xBC PUSH30 0x925FD2A79FBE5CA861C774E600BCCD1EC7EA33DD3B1284506BAC0A636473 PUSH16 0x6C634300081C00330000000000000000 ",
							"sourceMap": "209:7478:6:-:0;;;1460:6;1426:40;;2228:327;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2374:10;1601:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1675:5;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;2396:33:6::2;2402:10;2414:14;2396:5;;;:33;;:::i;:::-;2487:11;2462;:22;;:36;;;;2535:13;2508:11;:24;;:40;;;;2228:327:::0;;;209:7478;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7458:208:2:-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;;;:35;;:::i;:::-;7458:208;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;88:117:7:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:663::-;782:6;790;798;847:2;835:9;826:7;822:23;818:32;815:119;;;853:79;;:::i;:::-;815:119;973:1;998:64;1054:7;1045:6;1034:9;1030:22;998:64;:::i;:::-;988:74;;944:128;1111:2;1137:64;1193:7;1184:6;1173:9;1169:22;1137:64;:::i;:::-;1127:74;;1082:129;1250:2;1276:64;1332:7;1323:6;1312:9;1308:22;1276:64;:::i;:::-;1266:74;;1221:129;694:663;;;;;:::o;1363:99::-;1415:6;1449:5;1443:12;1433:22;;1363:99;;;:::o;1468:180::-;1516:77;1513:1;1506:88;1613:4;1610:1;1603:15;1637:4;1634:1;1627:15;1654:180;1702:77;1699:1;1692:88;1799:4;1796:1;1789:15;1823:4;1820:1;1813:15;1840:320;1884:6;1921:1;1915:4;1911:12;1901:22;;1968:1;1962:4;1958:12;1989:18;1979:81;;2045:4;2037:6;2033:17;2023:27;;1979:81;2107:2;2099:6;2096:14;2076:18;2073:38;2070:84;;2126:18;;:::i;:::-;2070:84;1891:269;1840:320;;;:::o;2166:141::-;2215:4;2238:3;2230:11;;2261:3;2258:1;2251:14;2295:4;2292:1;2282:18;2274:26;;2166:141;;;:::o;2313:93::-;2350:6;2397:2;2392;2385:5;2381:14;2377:23;2367:33;;2313:93;;;:::o;2412:107::-;2456:8;2506:5;2500:4;2496:16;2475:37;;2412:107;;;;:::o;2525:393::-;2594:6;2644:1;2632:10;2628:18;2667:97;2697:66;2686:9;2667:97;:::i;:::-;2785:39;2815:8;2804:9;2785:39;:::i;:::-;2773:51;;2857:4;2853:9;2846:5;2842:21;2833:30;;2906:4;2896:8;2892:19;2885:5;2882:30;2872:40;;2601:317;;2525:393;;;;;:::o;2924:60::-;2952:3;2973:5;2966:12;;2924:60;;;:::o;2990:142::-;3040:9;3073:53;3091:34;3100:24;3118:5;3100:24;:::i;:::-;3091:34;:::i;:::-;3073:53;:::i;:::-;3060:66;;2990:142;;;:::o;3138:75::-;3181:3;3202:5;3195:12;;3138:75;;;:::o;3219:269::-;3329:39;3360:7;3329:39;:::i;:::-;3390:91;3439:41;3463:16;3439:41;:::i;:::-;3431:6;3424:4;3418:11;3390:91;:::i;:::-;3384:4;3377:105;3295:193;3219:269;;;:::o;3494:73::-;3539:3;3560:1;3553:8;;3494:73;:::o;3573:189::-;3650:32;;:::i;:::-;3691:65;3749:6;3741;3735:4;3691:65;:::i;:::-;3626:136;3573:189;;:::o;3768:186::-;3828:120;3845:3;3838:5;3835:14;3828:120;;;3899:39;3936:1;3929:5;3899:39;:::i;:::-;3872:1;3865:5;3861:13;3852:22;;3828:120;;;3768:186;;:::o;3960:543::-;4061:2;4056:3;4053:11;4050:446;;;4095:38;4127:5;4095:38;:::i;:::-;4179:29;4197:10;4179:29;:::i;:::-;4169:8;4165:44;4362:2;4350:10;4347:18;4344:49;;;4383:8;4368:23;;4344:49;4406:80;4462:22;4480:3;4462:22;:::i;:::-;4452:8;4448:37;4435:11;4406:80;:::i;:::-;4065:431;;4050:446;3960:543;;;:::o;4509:117::-;4563:8;4613:5;4607:4;4603:16;4582:37;;4509:117;;;;:::o;4632:169::-;4676:6;4709:51;4757:1;4753:6;4745:5;4742:1;4738:13;4709:51;:::i;:::-;4705:56;4790:4;4784;4780:15;4770:25;;4683:118;4632:169;;;;:::o;4806:295::-;4882:4;5028:29;5053:3;5047:4;5028:29;:::i;:::-;5020:37;;5090:3;5087:1;5083:11;5077:4;5074:21;5066:29;;4806:295;;;;:::o;5106:1395::-;5223:37;5256:3;5223:37;:::i;:::-;5325:18;5317:6;5314:30;5311:56;;;5347:18;;:::i;:::-;5311:56;5391:38;5423:4;5417:11;5391:38;:::i;:::-;5476:67;5536:6;5528;5522:4;5476:67;:::i;:::-;5570:1;5594:4;5581:17;;5626:2;5618:6;5615:14;5643:1;5638:618;;;;6300:1;6317:6;6314:77;;;6366:9;6361:3;6357:19;6351:26;6342:35;;6314:77;6417:67;6477:6;6470:5;6417:67;:::i;:::-;6411:4;6404:81;6273:222;5608:887;;5638:618;5690:4;5686:9;5678:6;5674:22;5724:37;5756:4;5724:37;:::i;:::-;5783:1;5797:208;5811:7;5808:1;5805:14;5797:208;;;5890:9;5885:3;5881:19;5875:26;5867:6;5860:42;5941:1;5933:6;5929:14;5919:24;;5988:2;5977:9;5973:18;5960:31;;5834:4;5831:1;5827:12;5822:17;;5797:208;;;6033:6;6024:7;6021:19;6018:179;;;6091:9;6086:3;6082:19;6076:26;6134:48;6176:4;6168:6;6164:17;6153:9;6134:48;:::i;:::-;6126:6;6119:64;6041:156;6018:179;6243:1;6239;6231:6;6227:14;6223:22;6217:4;6210:36;5645:611;;;5608:887;;5198:1303;;;5106:1395;;:::o;6507:126::-;6544:7;6584:42;6577:5;6573:54;6562:65;;6507:126;;;:::o;6639:96::-;6676:7;6705:24;6723:5;6705:24;:::i;:::-;6694:35;;6639:96;;;:::o;6741:118::-;6828:24;6846:5;6828:24;:::i;:::-;6823:3;6816:37;6741:118;;:::o;6865:222::-;6958:4;6996:2;6985:9;6981:18;6973:26;;7009:71;7077:1;7066:9;7062:17;7053:6;7009:71;:::i;:::-;6865:222;;;;:::o;7093:180::-;7141:77;7138:1;7131:88;7238:4;7235:1;7228:15;7262:4;7259:1;7252:15;7279:191;7319:3;7338:20;7356:1;7338:20;:::i;:::-;7333:25;;7372:20;7390:1;7372:20;:::i;:::-;7367:25;;7415:1;7412;7408:9;7401:16;;7436:3;7433:1;7430:10;7427:36;;;7443:18;;:::i;:::-;7427:36;7279:191;;;;:::o;7476:118::-;7563:24;7581:5;7563:24;:::i;:::-;7558:3;7551:37;7476:118;;:::o;7600:442::-;7749:4;7787:2;7776:9;7772:18;7764:26;;7800:71;7868:1;7857:9;7853:17;7844:6;7800:71;:::i;:::-;7881:72;7949:2;7938:9;7934:18;7925:6;7881:72;:::i;:::-;7963;8031:2;8020:9;8016:18;8007:6;7963:72;:::i;:::-;7600:442;;;;;;:::o;8048:222::-;8141:4;8179:2;8168:9;8164:18;8156:26;;8192:71;8260:1;8249:9;8245:17;8236:6;8192:71;:::i;:::-;8048:222;;;;:::o;209:7478:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@REFERRAL_BONUS_997": {
									"entryPoint": 4911,
									"id": 997,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_690": {
									"entryPoint": 5055,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 6043,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_672": {
									"entryPoint": 5459,
									"id": 672,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 5586,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 5916,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_915": {
									"entryPoint": 5048,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_798": {
									"entryPoint": 5073,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 5721,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 5219,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 6506,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": 4781,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 1728,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": 3292,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@calculateReward_1583": {
									"entryPoint": 1791,
									"id": 1583,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@createProposal_1322": {
									"entryPoint": 2728,
									"id": 1322,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_363": {
									"entryPoint": 2437,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@drawLotteryWinner_1514": {
									"entryPoint": 2948,
									"id": 1514,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@enterLottery_1443": {
									"entryPoint": 2445,
									"id": 1443,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getLotteryEntries_1525": {
									"entryPoint": 4196,
									"id": 1525,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getLotteryPrizePool_1535": {
									"entryPoint": 4769,
									"id": 1535,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@lottery_986": {
									"entryPoint": 4337,
									"id": 986,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@minStakeDuration_994": {
									"entryPoint": 3286,
									"id": 994,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_345": {
									"entryPoint": 1584,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 3978,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@proposalCounter_991": {
									"entryPoint": 1762,
									"id": 991,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@proposals_983": {
									"entryPoint": 1394,
									"id": 983,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 3361,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stake_1196": {
									"entryPoint": 3380,
									"id": 1196,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@stakes_978": {
									"entryPoint": 1920,
									"id": 978,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakingPool_989": {
									"entryPoint": 1768,
									"id": 989,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_354": {
									"entryPoint": 4018,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_372": {
									"entryPoint": 1995,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_482": {
									"entryPoint": 2004,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 4916,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_409": {
									"entryPoint": 4162,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@vote_1398": {
									"entryPoint": 4349,
									"id": 1398,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@withdraw_1294": {
									"entryPoint": 2050,
									"id": 1294,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 8234,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 7540,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 8739,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 8299,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 7148,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7787,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 8821,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 7912,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 7560,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 8344,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7168,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address": {
									"entryPoint": 8415,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_bool": {
									"entryPoint": 8759,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 7725,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encodeUpdatedPos_t_address_to_t_address": {
									"entryPoint": 8558,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 8543,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7830,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 8593,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 7349,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7267,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0febab928e40c46453cf5b5d4970676eff56829a16bec62dc48d209b2deaf8aa_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10638,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2ba6ba7fd9922e5e4215d4c50fe3780e179cb4252eee0ad2051198fef2d560ef_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10742,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9219,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7a02f11666a200f30cecba397f7530127901a514068b6cce650d5e1b666a5e24_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10534,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9134d835a173bd374f6a11e1d53fa96984ec9491b867df78baeca4c974ae9b31_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10262,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ba93e22e59dbf680aafd2aa082c307d19b1ccf283e46ba80e768770956096b94_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9413,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 7323,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack": {
									"entryPoint": 10335,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 8004,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_uint256_t_uint256__to_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 10358,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 8477,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 10806,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 8685,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 7622,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7438,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr_t_uint256_t_uint256_t_bool__to_t_string_memory_ptr_t_uint256_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": 7364,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0febab928e40c46453cf5b5d4970676eff56829a16bec62dc48d209b2deaf8aa__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10672,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2ba6ba7fd9922e5e4215d4c50fe3780e179cb4252eee0ad2051198fef2d560ef__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10776,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9253,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7a02f11666a200f30cecba397f7530127901a514068b6cce650d5e1b666a5e24__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10568,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9134d835a173bd374f6a11e1d53fa96984ec9491b867df78baeca4c974ae9b31__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10296,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ba93e22e59dbf680aafd2aa082c307d19b1ccf283e46ba80e768770956096b94__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9447,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 7647,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 9334,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7672,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 7845,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 8019,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 8146,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 7100,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 8172,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 8528,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 9599,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 8502,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 7211,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 8581,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 8512,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7221,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 9477,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 9131,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 9021,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 9283,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 9878,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 7501,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7338,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 7470,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 7117,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 7992,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 9844,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 9734,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 10015,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 8220,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 7237,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 9617,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 8928,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 9988,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 8097,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 9725,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 9528,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_uint256": {
									"entryPoint": 10326,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 9960,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 10401,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8976,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 9086,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 8883,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 10449,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 8052,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 9767,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 8044,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 8048,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 7113,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 7109,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 7251,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 9632,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 9948,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 9820,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_0febab928e40c46453cf5b5d4970676eff56829a16bec62dc48d209b2deaf8aa": {
									"entryPoint": 10598,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2ba6ba7fd9922e5e4215d4c50fe3780e179cb4252eee0ad2051198fef2d560ef": {
									"entryPoint": 10702,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2": {
									"entryPoint": 9179,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7a02f11666a200f30cecba397f7530127901a514068b6cce650d5e1b666a5e24": {
									"entryPoint": 10494,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9134d835a173bd374f6a11e1d53fa96984ec9491b867df78baeca4c974ae9b31": {
									"entryPoint": 10222,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ba93e22e59dbf680aafd2aa082c307d19b1ccf283e46ba80e768770956096b94": {
									"entryPoint": 9373,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 9644,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 9776,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 7518,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 8717,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 7126,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 9813,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:28370:7",
										"nodeType": "YulBlock",
										"src": "0:28370:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:7",
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nativeSrc": "57:19:7",
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:7",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nativeSrc": "67:9:7",
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:7",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nativeSrc": "177:28:7",
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:7",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:7",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nativeSrc": "187:12:7",
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nativeSrc": "187:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nativeSrc": "300:28:7",
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:7",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:7",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nativeSrc": "310:12:7",
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nativeSrc": "310:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nativeSrc": "379:32:7",
													"nodeType": "YulBlock",
													"src": "379:32:7",
													"statements": [
														{
															"nativeSrc": "389:16:7",
															"nodeType": "YulAssignment",
															"src": "389:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:7",
																"nodeType": "YulIdentifier",
																"src": "400:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:7",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:7",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:77:7"
											},
											{
												"body": {
													"nativeSrc": "460:79:7",
													"nodeType": "YulBlock",
													"src": "460:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:7",
																"nodeType": "YulBlock",
																"src": "517:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:7",
																					"nodeType": "YulLiteral",
																					"src": "526:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:7",
																					"nodeType": "YulLiteral",
																					"src": "529:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:7"
																			},
																			"nativeSrc": "519:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:7"
																		},
																		"nativeSrc": "519:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:7"
																				},
																				"nativeSrc": "490:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:7"
																		},
																		"nativeSrc": "480:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:7"
																},
																"nativeSrc": "473:43:7",
																"nodeType": "YulFunctionCall",
																"src": "473:43:7"
															},
															"nativeSrc": "470:63:7",
															"nodeType": "YulIf",
															"src": "470:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:7",
														"nodeType": "YulTypedName",
														"src": "453:5:7",
														"type": ""
													}
												],
												"src": "417:122:7"
											},
											{
												"body": {
													"nativeSrc": "597:87:7",
													"nodeType": "YulBlock",
													"src": "597:87:7",
													"statements": [
														{
															"nativeSrc": "607:29:7",
															"nodeType": "YulAssignment",
															"src": "607:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:7"
																},
																"nativeSrc": "616:20:7",
																"nodeType": "YulFunctionCall",
																"src": "616:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "645:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:7"
																},
																"nativeSrc": "645:33:7",
																"nodeType": "YulFunctionCall",
																"src": "645:33:7"
															},
															"nativeSrc": "645:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "545:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:7",
														"nodeType": "YulTypedName",
														"src": "575:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:7",
														"nodeType": "YulTypedName",
														"src": "583:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:7",
														"nodeType": "YulTypedName",
														"src": "591:5:7",
														"type": ""
													}
												],
												"src": "545:139:7"
											},
											{
												"body": {
													"nativeSrc": "756:263:7",
													"nodeType": "YulBlock",
													"src": "756:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "802:83:7",
																"nodeType": "YulBlock",
																"src": "802:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "804:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:7"
																			},
																			"nativeSrc": "804:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:7"
																		},
																		"nativeSrc": "804:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "777:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "786:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "773:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:7"
																		},
																		"nativeSrc": "773:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "798:2:7",
																		"nodeType": "YulLiteral",
																		"src": "798:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "769:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:7"
																},
																"nativeSrc": "769:32:7",
																"nodeType": "YulFunctionCall",
																"src": "769:32:7"
															},
															"nativeSrc": "766:119:7",
															"nodeType": "YulIf",
															"src": "766:119:7"
														},
														{
															"nativeSrc": "895:117:7",
															"nodeType": "YulBlock",
															"src": "895:117:7",
															"statements": [
																{
																	"nativeSrc": "910:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "924:1:7",
																		"nodeType": "YulLiteral",
																		"src": "924:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "914:6:7",
																			"nodeType": "YulTypedName",
																			"src": "914:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "939:63:7",
																	"nodeType": "YulAssignment",
																	"src": "939:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "974:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "985:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "970:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:7"
																				},
																				"nativeSrc": "970:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "994:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "949:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:7"
																		},
																		"nativeSrc": "949:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "939:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "690:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "726:9:7",
														"nodeType": "YulTypedName",
														"src": "726:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "737:7:7",
														"nodeType": "YulTypedName",
														"src": "737:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "749:6:7",
														"nodeType": "YulTypedName",
														"src": "749:6:7",
														"type": ""
													}
												],
												"src": "690:329:7"
											},
											{
												"body": {
													"nativeSrc": "1084:40:7",
													"nodeType": "YulBlock",
													"src": "1084:40:7",
													"statements": [
														{
															"nativeSrc": "1095:22:7",
															"nodeType": "YulAssignment",
															"src": "1095:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1111:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1111:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1105:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1105:5:7"
																},
																"nativeSrc": "1105:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1105:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1095:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1095:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1025:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1067:5:7",
														"nodeType": "YulTypedName",
														"src": "1067:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1077:6:7",
														"nodeType": "YulTypedName",
														"src": "1077:6:7",
														"type": ""
													}
												],
												"src": "1025:99:7"
											},
											{
												"body": {
													"nativeSrc": "1226:73:7",
													"nodeType": "YulBlock",
													"src": "1226:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1243:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1243:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1248:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1248:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1236:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1236:6:7"
																},
																"nativeSrc": "1236:19:7",
																"nodeType": "YulFunctionCall",
																"src": "1236:19:7"
															},
															"nativeSrc": "1236:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "1236:19:7"
														},
														{
															"nativeSrc": "1264:29:7",
															"nodeType": "YulAssignment",
															"src": "1264:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1283:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1283:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1288:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1279:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1279:3:7"
																},
																"nativeSrc": "1279:14:7",
																"nodeType": "YulFunctionCall",
																"src": "1279:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1264:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "1264:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1130:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1198:3:7",
														"nodeType": "YulTypedName",
														"src": "1198:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1203:6:7",
														"nodeType": "YulTypedName",
														"src": "1203:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1214:11:7",
														"nodeType": "YulTypedName",
														"src": "1214:11:7",
														"type": ""
													}
												],
												"src": "1130:169:7"
											},
											{
												"body": {
													"nativeSrc": "1367:77:7",
													"nodeType": "YulBlock",
													"src": "1367:77:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1384:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1384:3:7"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1389:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1389:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1394:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1394:6:7"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1378:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1378:5:7"
																},
																"nativeSrc": "1378:23:7",
																"nodeType": "YulFunctionCall",
																"src": "1378:23:7"
															},
															"nativeSrc": "1378:23:7",
															"nodeType": "YulExpressionStatement",
															"src": "1378:23:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1421:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "1421:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1426:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1426:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1417:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1417:3:7"
																		},
																		"nativeSrc": "1417:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1417:16:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1435:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1435:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1410:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1410:6:7"
																},
																"nativeSrc": "1410:27:7",
																"nodeType": "YulFunctionCall",
																"src": "1410:27:7"
															},
															"nativeSrc": "1410:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "1410:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1305:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1349:3:7",
														"nodeType": "YulTypedName",
														"src": "1349:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1354:3:7",
														"nodeType": "YulTypedName",
														"src": "1354:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1359:6:7",
														"nodeType": "YulTypedName",
														"src": "1359:6:7",
														"type": ""
													}
												],
												"src": "1305:139:7"
											},
											{
												"body": {
													"nativeSrc": "1498:54:7",
													"nodeType": "YulBlock",
													"src": "1498:54:7",
													"statements": [
														{
															"nativeSrc": "1508:38:7",
															"nodeType": "YulAssignment",
															"src": "1508:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1526:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1526:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1533:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1533:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1522:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1522:3:7"
																		},
																		"nativeSrc": "1522:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1522:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1542:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1542:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1538:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1538:3:7"
																		},
																		"nativeSrc": "1538:7:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1538:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1518:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1518:3:7"
																},
																"nativeSrc": "1518:28:7",
																"nodeType": "YulFunctionCall",
																"src": "1518:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1508:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1508:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1450:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1481:5:7",
														"nodeType": "YulTypedName",
														"src": "1481:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1491:6:7",
														"nodeType": "YulTypedName",
														"src": "1491:6:7",
														"type": ""
													}
												],
												"src": "1450:102:7"
											},
											{
												"body": {
													"nativeSrc": "1650:285:7",
													"nodeType": "YulBlock",
													"src": "1650:285:7",
													"statements": [
														{
															"nativeSrc": "1660:53:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1660:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1707:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1707:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "1674:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "1674:32:7"
																},
																"nativeSrc": "1674:39:7",
																"nodeType": "YulFunctionCall",
																"src": "1674:39:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1664:6:7",
																	"nodeType": "YulTypedName",
																	"src": "1664:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1722:78:7",
															"nodeType": "YulAssignment",
															"src": "1722:78:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1788:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1788:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1793:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1793:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1729:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "1729:58:7"
																},
																"nativeSrc": "1729:71:7",
																"nodeType": "YulFunctionCall",
																"src": "1729:71:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1722:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1722:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1848:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1848:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1855:4:7",
																				"nodeType": "YulLiteral",
																				"src": "1855:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1844:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1844:3:7"
																		},
																		"nativeSrc": "1844:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1844:16:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "1862:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1862:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1867:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1867:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "1809:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "1809:34:7"
																},
																"nativeSrc": "1809:65:7",
																"nodeType": "YulFunctionCall",
																"src": "1809:65:7"
															},
															"nativeSrc": "1809:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "1809:65:7"
														},
														{
															"nativeSrc": "1883:46:7",
															"nodeType": "YulAssignment",
															"src": "1883:46:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1894:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1894:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1921:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1921:6:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "1899:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "1899:21:7"
																		},
																		"nativeSrc": "1899:29:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1899:29:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1890:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1890:3:7"
																},
																"nativeSrc": "1890:39:7",
																"nodeType": "YulFunctionCall",
																"src": "1890:39:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1883:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1883:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "1558:377:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1631:5:7",
														"nodeType": "YulTypedName",
														"src": "1631:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1638:3:7",
														"nodeType": "YulTypedName",
														"src": "1638:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1646:3:7",
														"nodeType": "YulTypedName",
														"src": "1646:3:7",
														"type": ""
													}
												],
												"src": "1558:377:7"
											},
											{
												"body": {
													"nativeSrc": "2006:53:7",
													"nodeType": "YulBlock",
													"src": "2006:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2023:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2023:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2046:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2046:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2028:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "2028:17:7"
																		},
																		"nativeSrc": "2028:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2028:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2016:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2016:6:7"
																},
																"nativeSrc": "2016:37:7",
																"nodeType": "YulFunctionCall",
																"src": "2016:37:7"
															},
															"nativeSrc": "2016:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "2016:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1941:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1994:5:7",
														"nodeType": "YulTypedName",
														"src": "1994:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2001:3:7",
														"nodeType": "YulTypedName",
														"src": "2001:3:7",
														"type": ""
													}
												],
												"src": "1941:118:7"
											},
											{
												"body": {
													"nativeSrc": "2107:48:7",
													"nodeType": "YulBlock",
													"src": "2107:48:7",
													"statements": [
														{
															"nativeSrc": "2117:32:7",
															"nodeType": "YulAssignment",
															"src": "2117:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2142:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2142:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2135:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2135:6:7"
																		},
																		"nativeSrc": "2135:13:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2135:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2128:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2128:6:7"
																},
																"nativeSrc": "2128:21:7",
																"nodeType": "YulFunctionCall",
																"src": "2128:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2117:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2117:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2065:90:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2089:5:7",
														"nodeType": "YulTypedName",
														"src": "2089:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2099:7:7",
														"nodeType": "YulTypedName",
														"src": "2099:7:7",
														"type": ""
													}
												],
												"src": "2065:90:7"
											},
											{
												"body": {
													"nativeSrc": "2220:50:7",
													"nodeType": "YulBlock",
													"src": "2220:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2237:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2237:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2257:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2257:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "2242:14:7",
																			"nodeType": "YulIdentifier",
																			"src": "2242:14:7"
																		},
																		"nativeSrc": "2242:21:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2242:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2230:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2230:6:7"
																},
																"nativeSrc": "2230:34:7",
																"nodeType": "YulFunctionCall",
																"src": "2230:34:7"
															},
															"nativeSrc": "2230:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "2230:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "2161:109:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2208:5:7",
														"nodeType": "YulTypedName",
														"src": "2208:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2215:3:7",
														"nodeType": "YulTypedName",
														"src": "2215:3:7",
														"type": ""
													}
												],
												"src": "2161:109:7"
											},
											{
												"body": {
													"nativeSrc": "2472:436:7",
													"nodeType": "YulBlock",
													"src": "2472:436:7",
													"statements": [
														{
															"nativeSrc": "2482:27:7",
															"nodeType": "YulAssignment",
															"src": "2482:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2494:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2494:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2505:3:7",
																		"nodeType": "YulLiteral",
																		"src": "2505:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2490:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2490:3:7"
																},
																"nativeSrc": "2490:19:7",
																"nodeType": "YulFunctionCall",
																"src": "2490:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2482:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2482:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2530:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2530:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2541:1:7",
																				"nodeType": "YulLiteral",
																				"src": "2541:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2526:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2526:3:7"
																		},
																		"nativeSrc": "2526:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2526:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2549:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "2549:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2555:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2555:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2545:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2545:3:7"
																		},
																		"nativeSrc": "2545:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2545:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2519:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2519:6:7"
																},
																"nativeSrc": "2519:47:7",
																"nodeType": "YulFunctionCall",
																"src": "2519:47:7"
															},
															"nativeSrc": "2519:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "2519:47:7"
														},
														{
															"nativeSrc": "2575:86:7",
															"nodeType": "YulAssignment",
															"src": "2575:86:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2647:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2647:6:7"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2656:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2656:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2583:63:7",
																	"nodeType": "YulIdentifier",
																	"src": "2583:63:7"
																},
																"nativeSrc": "2583:78:7",
																"nodeType": "YulFunctionCall",
																"src": "2583:78:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2575:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2575:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "2715:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2715:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2728:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2728:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2739:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2739:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2724:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2724:3:7"
																		},
																		"nativeSrc": "2724:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2724:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2671:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "2671:43:7"
																},
																"nativeSrc": "2671:72:7",
																"nodeType": "YulFunctionCall",
																"src": "2671:72:7"
															},
															"nativeSrc": "2671:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "2671:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "2797:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2797:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2810:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2810:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2821:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2821:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2806:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2806:3:7"
																		},
																		"nativeSrc": "2806:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2806:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2753:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "2753:43:7"
																},
																"nativeSrc": "2753:72:7",
																"nodeType": "YulFunctionCall",
																"src": "2753:72:7"
															},
															"nativeSrc": "2753:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "2753:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "2873:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2873:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2886:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2886:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2897:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2897:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2882:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2882:3:7"
																		},
																		"nativeSrc": "2882:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2882:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "2835:37:7",
																	"nodeType": "YulIdentifier",
																	"src": "2835:37:7"
																},
																"nativeSrc": "2835:66:7",
																"nodeType": "YulFunctionCall",
																"src": "2835:66:7"
															},
															"nativeSrc": "2835:66:7",
															"nodeType": "YulExpressionStatement",
															"src": "2835:66:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr_t_uint256_t_uint256_t_bool__to_t_string_memory_ptr_t_uint256_t_uint256_t_bool__fromStack_reversed",
												"nativeSrc": "2276:632:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2420:9:7",
														"nodeType": "YulTypedName",
														"src": "2420:9:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "2432:6:7",
														"nodeType": "YulTypedName",
														"src": "2432:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2440:6:7",
														"nodeType": "YulTypedName",
														"src": "2440:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2448:6:7",
														"nodeType": "YulTypedName",
														"src": "2448:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2456:6:7",
														"nodeType": "YulTypedName",
														"src": "2456:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2467:4:7",
														"nodeType": "YulTypedName",
														"src": "2467:4:7",
														"type": ""
													}
												],
												"src": "2276:632:7"
											},
											{
												"body": {
													"nativeSrc": "3032:195:7",
													"nodeType": "YulBlock",
													"src": "3032:195:7",
													"statements": [
														{
															"nativeSrc": "3042:26:7",
															"nodeType": "YulAssignment",
															"src": "3042:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3054:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3054:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3065:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3065:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3050:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3050:3:7"
																},
																"nativeSrc": "3050:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3050:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3042:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3042:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3089:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3089:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3100:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3100:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3085:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3085:3:7"
																		},
																		"nativeSrc": "3085:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3085:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "3108:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "3108:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3114:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3114:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3104:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3104:3:7"
																		},
																		"nativeSrc": "3104:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3104:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3078:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3078:6:7"
																},
																"nativeSrc": "3078:47:7",
																"nodeType": "YulFunctionCall",
																"src": "3078:47:7"
															},
															"nativeSrc": "3078:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "3078:47:7"
														},
														{
															"nativeSrc": "3134:86:7",
															"nodeType": "YulAssignment",
															"src": "3134:86:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3206:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3206:6:7"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "3215:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3215:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3142:63:7",
																	"nodeType": "YulIdentifier",
																	"src": "3142:63:7"
																},
																"nativeSrc": "3142:78:7",
																"nodeType": "YulFunctionCall",
																"src": "3142:78:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3134:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3134:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2914:313:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3004:9:7",
														"nodeType": "YulTypedName",
														"src": "3004:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3016:6:7",
														"nodeType": "YulTypedName",
														"src": "3016:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3027:4:7",
														"nodeType": "YulTypedName",
														"src": "3027:4:7",
														"type": ""
													}
												],
												"src": "2914:313:7"
											},
											{
												"body": {
													"nativeSrc": "3278:81:7",
													"nodeType": "YulBlock",
													"src": "3278:81:7",
													"statements": [
														{
															"nativeSrc": "3288:65:7",
															"nodeType": "YulAssignment",
															"src": "3288:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3303:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3303:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3310:42:7",
																		"nodeType": "YulLiteral",
																		"src": "3310:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3299:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3299:3:7"
																},
																"nativeSrc": "3299:54:7",
																"nodeType": "YulFunctionCall",
																"src": "3299:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3288:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "3288:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "3233:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3260:5:7",
														"nodeType": "YulTypedName",
														"src": "3260:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3270:7:7",
														"nodeType": "YulTypedName",
														"src": "3270:7:7",
														"type": ""
													}
												],
												"src": "3233:126:7"
											},
											{
												"body": {
													"nativeSrc": "3410:51:7",
													"nodeType": "YulBlock",
													"src": "3410:51:7",
													"statements": [
														{
															"nativeSrc": "3420:35:7",
															"nodeType": "YulAssignment",
															"src": "3420:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3449:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3449:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3431:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "3431:17:7"
																},
																"nativeSrc": "3431:24:7",
																"nodeType": "YulFunctionCall",
																"src": "3431:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3420:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "3420:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3365:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:7",
														"nodeType": "YulTypedName",
														"src": "3392:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3402:7:7",
														"nodeType": "YulTypedName",
														"src": "3402:7:7",
														"type": ""
													}
												],
												"src": "3365:96:7"
											},
											{
												"body": {
													"nativeSrc": "3510:79:7",
													"nodeType": "YulBlock",
													"src": "3510:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3567:16:7",
																"nodeType": "YulBlock",
																"src": "3567:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3576:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3576:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3579:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3579:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3569:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3569:6:7"
																			},
																			"nativeSrc": "3569:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3569:12:7"
																		},
																		"nativeSrc": "3569:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3569:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3533:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3533:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3558:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "3558:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "3540:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "3540:17:7"
																				},
																				"nativeSrc": "3540:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3540:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3530:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "3530:2:7"
																		},
																		"nativeSrc": "3530:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3530:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3523:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3523:6:7"
																},
																"nativeSrc": "3523:43:7",
																"nodeType": "YulFunctionCall",
																"src": "3523:43:7"
															},
															"nativeSrc": "3520:63:7",
															"nodeType": "YulIf",
															"src": "3520:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "3467:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3503:5:7",
														"nodeType": "YulTypedName",
														"src": "3503:5:7",
														"type": ""
													}
												],
												"src": "3467:122:7"
											},
											{
												"body": {
													"nativeSrc": "3647:87:7",
													"nodeType": "YulBlock",
													"src": "3647:87:7",
													"statements": [
														{
															"nativeSrc": "3657:29:7",
															"nodeType": "YulAssignment",
															"src": "3657:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3679:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3679:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3666:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "3666:12:7"
																},
																"nativeSrc": "3666:20:7",
																"nodeType": "YulFunctionCall",
																"src": "3666:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3657:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "3657:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3722:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3722:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3695:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "3695:26:7"
																},
																"nativeSrc": "3695:33:7",
																"nodeType": "YulFunctionCall",
																"src": "3695:33:7"
															},
															"nativeSrc": "3695:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "3695:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "3595:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3625:6:7",
														"nodeType": "YulTypedName",
														"src": "3625:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3633:3:7",
														"nodeType": "YulTypedName",
														"src": "3633:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3641:5:7",
														"nodeType": "YulTypedName",
														"src": "3641:5:7",
														"type": ""
													}
												],
												"src": "3595:139:7"
											},
											{
												"body": {
													"nativeSrc": "3823:391:7",
													"nodeType": "YulBlock",
													"src": "3823:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3869:83:7",
																"nodeType": "YulBlock",
																"src": "3869:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3871:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "3871:77:7"
																			},
																			"nativeSrc": "3871:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3871:79:7"
																		},
																		"nativeSrc": "3871:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3871:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3844:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3844:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3853:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3853:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3840:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3840:3:7"
																		},
																		"nativeSrc": "3840:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3840:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3865:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3865:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3836:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3836:3:7"
																},
																"nativeSrc": "3836:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3836:32:7"
															},
															"nativeSrc": "3833:119:7",
															"nodeType": "YulIf",
															"src": "3833:119:7"
														},
														{
															"nativeSrc": "3962:117:7",
															"nodeType": "YulBlock",
															"src": "3962:117:7",
															"statements": [
																{
																	"nativeSrc": "3977:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3977:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3991:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3991:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3981:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3981:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4006:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4006:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4041:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4041:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4052:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4052:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4037:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4037:3:7"
																				},
																				"nativeSrc": "4037:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4037:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4061:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4061:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4016:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4016:20:7"
																		},
																		"nativeSrc": "4016:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4016:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4006:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4006:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4089:118:7",
															"nodeType": "YulBlock",
															"src": "4089:118:7",
															"statements": [
																{
																	"nativeSrc": "4104:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4104:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4118:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4118:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4108:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4108:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4134:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4134:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4169:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4169:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4180:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4180:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4165:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4165:3:7"
																				},
																				"nativeSrc": "4165:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4165:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4189:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4189:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4144:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4144:20:7"
																		},
																		"nativeSrc": "4144:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4134:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4134:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "3740:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3785:9:7",
														"nodeType": "YulTypedName",
														"src": "3785:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3796:7:7",
														"nodeType": "YulTypedName",
														"src": "3796:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3808:6:7",
														"nodeType": "YulTypedName",
														"src": "3808:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3816:6:7",
														"nodeType": "YulTypedName",
														"src": "3816:6:7",
														"type": ""
													}
												],
												"src": "3740:474:7"
											},
											{
												"body": {
													"nativeSrc": "4312:118:7",
													"nodeType": "YulBlock",
													"src": "4312:118:7",
													"statements": [
														{
															"nativeSrc": "4322:26:7",
															"nodeType": "YulAssignment",
															"src": "4322:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4334:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4334:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4345:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4345:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4330:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4330:3:7"
																},
																"nativeSrc": "4330:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4330:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4322:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4322:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4396:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4396:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4409:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4409:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4420:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4420:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4405:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4405:3:7"
																		},
																		"nativeSrc": "4405:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4405:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "4358:37:7",
																	"nodeType": "YulIdentifier",
																	"src": "4358:37:7"
																},
																"nativeSrc": "4358:65:7",
																"nodeType": "YulFunctionCall",
																"src": "4358:65:7"
															},
															"nativeSrc": "4358:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "4358:65:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "4220:210:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4284:9:7",
														"nodeType": "YulTypedName",
														"src": "4284:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4296:6:7",
														"nodeType": "YulTypedName",
														"src": "4296:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4307:4:7",
														"nodeType": "YulTypedName",
														"src": "4307:4:7",
														"type": ""
													}
												],
												"src": "4220:210:7"
											},
											{
												"body": {
													"nativeSrc": "4534:124:7",
													"nodeType": "YulBlock",
													"src": "4534:124:7",
													"statements": [
														{
															"nativeSrc": "4544:26:7",
															"nodeType": "YulAssignment",
															"src": "4544:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4556:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4556:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4567:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4567:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4552:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4552:3:7"
																},
																"nativeSrc": "4552:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4552:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4544:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4544:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4624:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4624:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4637:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4637:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4648:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4648:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4633:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4633:3:7"
																		},
																		"nativeSrc": "4633:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4633:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4580:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "4580:43:7"
																},
																"nativeSrc": "4580:71:7",
																"nodeType": "YulFunctionCall",
																"src": "4580:71:7"
															},
															"nativeSrc": "4580:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "4580:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4436:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4506:9:7",
														"nodeType": "YulTypedName",
														"src": "4506:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4518:6:7",
														"nodeType": "YulTypedName",
														"src": "4518:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4529:4:7",
														"nodeType": "YulTypedName",
														"src": "4529:4:7",
														"type": ""
													}
												],
												"src": "4436:222:7"
											},
											{
												"body": {
													"nativeSrc": "4818:288:7",
													"nodeType": "YulBlock",
													"src": "4818:288:7",
													"statements": [
														{
															"nativeSrc": "4828:26:7",
															"nodeType": "YulAssignment",
															"src": "4828:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4840:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4840:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4851:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4851:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4836:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4836:3:7"
																},
																"nativeSrc": "4836:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4836:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4828:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4828:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4908:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4908:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4921:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4921:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4932:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4932:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4917:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4917:3:7"
																		},
																		"nativeSrc": "4917:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4917:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4864:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "4864:43:7"
																},
																"nativeSrc": "4864:71:7",
																"nodeType": "YulFunctionCall",
																"src": "4864:71:7"
															},
															"nativeSrc": "4864:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "4864:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "4989:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4989:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5002:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5002:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5013:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5013:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4998:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4998:3:7"
																		},
																		"nativeSrc": "4998:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4998:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4945:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "4945:43:7"
																},
																"nativeSrc": "4945:72:7",
																"nodeType": "YulFunctionCall",
																"src": "4945:72:7"
															},
															"nativeSrc": "4945:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "4945:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "5071:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5071:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5084:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5084:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5095:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5095:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5080:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5080:3:7"
																		},
																		"nativeSrc": "5080:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5080:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5027:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "5027:43:7"
																},
																"nativeSrc": "5027:72:7",
																"nodeType": "YulFunctionCall",
																"src": "5027:72:7"
															},
															"nativeSrc": "5027:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "5027:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "4664:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4774:9:7",
														"nodeType": "YulTypedName",
														"src": "4774:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4786:6:7",
														"nodeType": "YulTypedName",
														"src": "4786:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4794:6:7",
														"nodeType": "YulTypedName",
														"src": "4794:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4802:6:7",
														"nodeType": "YulTypedName",
														"src": "4802:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4813:4:7",
														"nodeType": "YulTypedName",
														"src": "4813:4:7",
														"type": ""
													}
												],
												"src": "4664:442:7"
											},
											{
												"body": {
													"nativeSrc": "5195:391:7",
													"nodeType": "YulBlock",
													"src": "5195:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "5241:83:7",
																"nodeType": "YulBlock",
																"src": "5241:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5243:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "5243:77:7"
																			},
																			"nativeSrc": "5243:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5243:79:7"
																		},
																		"nativeSrc": "5243:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5243:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5216:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5216:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5225:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5225:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5212:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5212:3:7"
																		},
																		"nativeSrc": "5212:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5212:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5237:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5237:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5208:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5208:3:7"
																},
																"nativeSrc": "5208:32:7",
																"nodeType": "YulFunctionCall",
																"src": "5208:32:7"
															},
															"nativeSrc": "5205:119:7",
															"nodeType": "YulIf",
															"src": "5205:119:7"
														},
														{
															"nativeSrc": "5334:117:7",
															"nodeType": "YulBlock",
															"src": "5334:117:7",
															"statements": [
																{
																	"nativeSrc": "5349:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5349:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5363:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5363:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5353:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5353:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5378:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5378:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5413:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5413:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5424:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5424:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5409:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5409:3:7"
																				},
																				"nativeSrc": "5409:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5409:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5433:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5433:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5388:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5388:20:7"
																		},
																		"nativeSrc": "5388:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5388:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5378:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5378:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5461:118:7",
															"nodeType": "YulBlock",
															"src": "5461:118:7",
															"statements": [
																{
																	"nativeSrc": "5476:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5476:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5490:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5490:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5480:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5480:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5506:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5506:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5541:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5541:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5552:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5552:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5537:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5537:3:7"
																				},
																				"nativeSrc": "5537:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5537:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5561:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5561:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5516:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5516:20:7"
																		},
																		"nativeSrc": "5516:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5516:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5506:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5506:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "5112:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5157:9:7",
														"nodeType": "YulTypedName",
														"src": "5157:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5168:7:7",
														"nodeType": "YulTypedName",
														"src": "5168:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5180:6:7",
														"nodeType": "YulTypedName",
														"src": "5180:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5188:6:7",
														"nodeType": "YulTypedName",
														"src": "5188:6:7",
														"type": ""
													}
												],
												"src": "5112:474:7"
											},
											{
												"body": {
													"nativeSrc": "5658:263:7",
													"nodeType": "YulBlock",
													"src": "5658:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "5704:83:7",
																"nodeType": "YulBlock",
																"src": "5704:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5706:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "5706:77:7"
																			},
																			"nativeSrc": "5706:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5706:79:7"
																		},
																		"nativeSrc": "5706:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5706:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5679:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5679:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5688:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5688:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5675:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5675:3:7"
																		},
																		"nativeSrc": "5675:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5675:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5700:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5700:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5671:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5671:3:7"
																},
																"nativeSrc": "5671:32:7",
																"nodeType": "YulFunctionCall",
																"src": "5671:32:7"
															},
															"nativeSrc": "5668:119:7",
															"nodeType": "YulIf",
															"src": "5668:119:7"
														},
														{
															"nativeSrc": "5797:117:7",
															"nodeType": "YulBlock",
															"src": "5797:117:7",
															"statements": [
																{
																	"nativeSrc": "5812:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5812:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5826:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5826:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5816:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5816:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5841:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5841:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5876:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5876:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5887:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5887:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5872:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5872:3:7"
																				},
																				"nativeSrc": "5872:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5872:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5896:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5896:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5851:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5851:20:7"
																		},
																		"nativeSrc": "5851:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5851:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5841:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5841:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5592:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5628:9:7",
														"nodeType": "YulTypedName",
														"src": "5628:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5639:7:7",
														"nodeType": "YulTypedName",
														"src": "5639:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5651:6:7",
														"nodeType": "YulTypedName",
														"src": "5651:6:7",
														"type": ""
													}
												],
												"src": "5592:329:7"
											},
											{
												"body": {
													"nativeSrc": "5992:53:7",
													"nodeType": "YulBlock",
													"src": "5992:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6009:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6009:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6032:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6032:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6014:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "6014:17:7"
																		},
																		"nativeSrc": "6014:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6014:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6002:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6002:6:7"
																},
																"nativeSrc": "6002:37:7",
																"nodeType": "YulFunctionCall",
																"src": "6002:37:7"
															},
															"nativeSrc": "6002:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "6002:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5927:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5980:5:7",
														"nodeType": "YulTypedName",
														"src": "5980:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5987:3:7",
														"nodeType": "YulTypedName",
														"src": "5987:3:7",
														"type": ""
													}
												],
												"src": "5927:118:7"
											},
											{
												"body": {
													"nativeSrc": "6233:371:7",
													"nodeType": "YulBlock",
													"src": "6233:371:7",
													"statements": [
														{
															"nativeSrc": "6243:27:7",
															"nodeType": "YulAssignment",
															"src": "6243:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6255:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6255:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6266:3:7",
																		"nodeType": "YulLiteral",
																		"src": "6266:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6251:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6251:3:7"
																},
																"nativeSrc": "6251:19:7",
																"nodeType": "YulFunctionCall",
																"src": "6251:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6243:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6243:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6324:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6324:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6337:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6337:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6348:1:7",
																				"nodeType": "YulLiteral",
																				"src": "6348:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6333:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6333:3:7"
																		},
																		"nativeSrc": "6333:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6333:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6280:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "6280:43:7"
																},
																"nativeSrc": "6280:71:7",
																"nodeType": "YulFunctionCall",
																"src": "6280:71:7"
															},
															"nativeSrc": "6280:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "6280:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6405:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6405:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6418:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6418:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6429:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6429:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6414:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6414:3:7"
																		},
																		"nativeSrc": "6414:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6414:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6361:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "6361:43:7"
																},
																"nativeSrc": "6361:72:7",
																"nodeType": "YulFunctionCall",
																"src": "6361:72:7"
															},
															"nativeSrc": "6361:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "6361:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "6487:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6487:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6500:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6500:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6511:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6511:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6496:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6496:3:7"
																		},
																		"nativeSrc": "6496:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6496:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6443:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "6443:43:7"
																},
																"nativeSrc": "6443:72:7",
																"nodeType": "YulFunctionCall",
																"src": "6443:72:7"
															},
															"nativeSrc": "6443:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "6443:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "6569:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6569:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6582:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6582:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6593:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6593:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6578:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6578:3:7"
																		},
																		"nativeSrc": "6578:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6578:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6525:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "6525:43:7"
																},
																"nativeSrc": "6525:72:7",
																"nodeType": "YulFunctionCall",
																"src": "6525:72:7"
															},
															"nativeSrc": "6525:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "6525:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "6051:553:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6181:9:7",
														"nodeType": "YulTypedName",
														"src": "6181:9:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "6193:6:7",
														"nodeType": "YulTypedName",
														"src": "6193:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6201:6:7",
														"nodeType": "YulTypedName",
														"src": "6201:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6209:6:7",
														"nodeType": "YulTypedName",
														"src": "6209:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6217:6:7",
														"nodeType": "YulTypedName",
														"src": "6217:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6228:4:7",
														"nodeType": "YulTypedName",
														"src": "6228:4:7",
														"type": ""
													}
												],
												"src": "6051:553:7"
											},
											{
												"body": {
													"nativeSrc": "6710:519:7",
													"nodeType": "YulBlock",
													"src": "6710:519:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6756:83:7",
																"nodeType": "YulBlock",
																"src": "6756:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6758:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "6758:77:7"
																			},
																			"nativeSrc": "6758:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6758:79:7"
																		},
																		"nativeSrc": "6758:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6758:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6731:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6731:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6740:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6740:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6727:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6727:3:7"
																		},
																		"nativeSrc": "6727:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6727:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6752:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6752:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6723:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6723:3:7"
																},
																"nativeSrc": "6723:32:7",
																"nodeType": "YulFunctionCall",
																"src": "6723:32:7"
															},
															"nativeSrc": "6720:119:7",
															"nodeType": "YulIf",
															"src": "6720:119:7"
														},
														{
															"nativeSrc": "6849:117:7",
															"nodeType": "YulBlock",
															"src": "6849:117:7",
															"statements": [
																{
																	"nativeSrc": "6864:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6864:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6878:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6878:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6868:6:7",
																			"nodeType": "YulTypedName",
																			"src": "6868:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6893:63:7",
																	"nodeType": "YulAssignment",
																	"src": "6893:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6928:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6928:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6939:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6939:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6924:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6924:3:7"
																				},
																				"nativeSrc": "6924:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6924:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6948:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6948:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6903:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "6903:20:7"
																		},
																		"nativeSrc": "6903:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6903:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6893:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6893:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6976:118:7",
															"nodeType": "YulBlock",
															"src": "6976:118:7",
															"statements": [
																{
																	"nativeSrc": "6991:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6991:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7005:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7005:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6995:6:7",
																			"nodeType": "YulTypedName",
																			"src": "6995:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7021:63:7",
																	"nodeType": "YulAssignment",
																	"src": "7021:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7056:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "7056:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7067:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "7067:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7052:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7052:3:7"
																				},
																				"nativeSrc": "7052:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7052:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7076:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7076:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7031:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "7031:20:7"
																		},
																		"nativeSrc": "7031:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7031:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7021:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "7021:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7104:118:7",
															"nodeType": "YulBlock",
															"src": "7104:118:7",
															"statements": [
																{
																	"nativeSrc": "7119:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7119:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7133:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7133:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7123:6:7",
																			"nodeType": "YulTypedName",
																			"src": "7123:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7149:63:7",
																	"nodeType": "YulAssignment",
																	"src": "7149:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7184:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "7184:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7195:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "7195:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7180:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7180:3:7"
																				},
																				"nativeSrc": "7180:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7180:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7204:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7204:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7159:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "7159:20:7"
																		},
																		"nativeSrc": "7159:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7159:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "7149:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "7149:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "6610:619:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6664:9:7",
														"nodeType": "YulTypedName",
														"src": "6664:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6675:7:7",
														"nodeType": "YulTypedName",
														"src": "6675:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6687:6:7",
														"nodeType": "YulTypedName",
														"src": "6687:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6695:6:7",
														"nodeType": "YulTypedName",
														"src": "6695:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6703:6:7",
														"nodeType": "YulTypedName",
														"src": "6703:6:7",
														"type": ""
													}
												],
												"src": "6610:619:7"
											},
											{
												"body": {
													"nativeSrc": "7278:43:7",
													"nodeType": "YulBlock",
													"src": "7278:43:7",
													"statements": [
														{
															"nativeSrc": "7288:27:7",
															"nodeType": "YulAssignment",
															"src": "7288:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7303:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "7303:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7310:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7310:4:7",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7299:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7299:3:7"
																},
																"nativeSrc": "7299:16:7",
																"nodeType": "YulFunctionCall",
																"src": "7299:16:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "7288:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "7288:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "7235:86:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7260:5:7",
														"nodeType": "YulTypedName",
														"src": "7260:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "7270:7:7",
														"nodeType": "YulTypedName",
														"src": "7270:7:7",
														"type": ""
													}
												],
												"src": "7235:86:7"
											},
											{
												"body": {
													"nativeSrc": "7388:51:7",
													"nodeType": "YulBlock",
													"src": "7388:51:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7405:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7405:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7426:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "7426:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "7410:15:7",
																			"nodeType": "YulIdentifier",
																			"src": "7410:15:7"
																		},
																		"nativeSrc": "7410:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7410:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7398:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7398:6:7"
																},
																"nativeSrc": "7398:35:7",
																"nodeType": "YulFunctionCall",
																"src": "7398:35:7"
															},
															"nativeSrc": "7398:35:7",
															"nodeType": "YulExpressionStatement",
															"src": "7398:35:7"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "7327:112:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7376:5:7",
														"nodeType": "YulTypedName",
														"src": "7376:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7383:3:7",
														"nodeType": "YulTypedName",
														"src": "7383:3:7",
														"type": ""
													}
												],
												"src": "7327:112:7"
											},
											{
												"body": {
													"nativeSrc": "7539:120:7",
													"nodeType": "YulBlock",
													"src": "7539:120:7",
													"statements": [
														{
															"nativeSrc": "7549:26:7",
															"nodeType": "YulAssignment",
															"src": "7549:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7561:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "7561:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7572:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7572:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7557:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7557:3:7"
																},
																"nativeSrc": "7557:18:7",
																"nodeType": "YulFunctionCall",
																"src": "7557:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7549:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7549:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7625:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7625:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7638:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7638:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7649:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7649:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7634:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7634:3:7"
																		},
																		"nativeSrc": "7634:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7634:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "7585:39:7",
																	"nodeType": "YulIdentifier",
																	"src": "7585:39:7"
																},
																"nativeSrc": "7585:67:7",
																"nodeType": "YulFunctionCall",
																"src": "7585:67:7"
															},
															"nativeSrc": "7585:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "7585:67:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "7445:214:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7511:9:7",
														"nodeType": "YulTypedName",
														"src": "7511:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7523:6:7",
														"nodeType": "YulTypedName",
														"src": "7523:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7534:4:7",
														"nodeType": "YulTypedName",
														"src": "7534:4:7",
														"type": ""
													}
												],
												"src": "7445:214:7"
											},
											{
												"body": {
													"nativeSrc": "7754:28:7",
													"nodeType": "YulBlock",
													"src": "7754:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7771:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7771:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7774:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7774:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7764:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7764:6:7"
																},
																"nativeSrc": "7764:12:7",
																"nodeType": "YulFunctionCall",
																"src": "7764:12:7"
															},
															"nativeSrc": "7764:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "7764:12:7"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "7665:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "7665:117:7"
											},
											{
												"body": {
													"nativeSrc": "7877:28:7",
													"nodeType": "YulBlock",
													"src": "7877:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7894:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7894:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7897:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7897:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7887:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7887:6:7"
																},
																"nativeSrc": "7887:12:7",
																"nodeType": "YulFunctionCall",
																"src": "7887:12:7"
															},
															"nativeSrc": "7887:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "7887:12:7"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "7788:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "7788:117:7"
											},
											{
												"body": {
													"nativeSrc": "7939:152:7",
													"nodeType": "YulBlock",
													"src": "7939:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7956:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7956:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7959:77:7",
																		"nodeType": "YulLiteral",
																		"src": "7959:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7949:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7949:6:7"
																},
																"nativeSrc": "7949:88:7",
																"nodeType": "YulFunctionCall",
																"src": "7949:88:7"
															},
															"nativeSrc": "7949:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "7949:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8053:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8053:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8056:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8056:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8046:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8046:6:7"
																},
																"nativeSrc": "8046:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8046:15:7"
															},
															"nativeSrc": "8046:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "8046:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8077:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8077:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8080:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8080:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8070:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8070:6:7"
																},
																"nativeSrc": "8070:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8070:15:7"
															},
															"nativeSrc": "8070:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "8070:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "7911:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "7911:180:7"
											},
											{
												"body": {
													"nativeSrc": "8140:238:7",
													"nodeType": "YulBlock",
													"src": "8140:238:7",
													"statements": [
														{
															"nativeSrc": "8150:58:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8150:58:7",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "8172:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8172:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "8202:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "8202:4:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "8180:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "8180:21:7"
																		},
																		"nativeSrc": "8180:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8180:27:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8168:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8168:3:7"
																},
																"nativeSrc": "8168:40:7",
																"nodeType": "YulFunctionCall",
																"src": "8168:40:7"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "8154:10:7",
																	"nodeType": "YulTypedName",
																	"src": "8154:10:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8319:22:7",
																"nodeType": "YulBlock",
																"src": "8319:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8321:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "8321:16:7"
																			},
																			"nativeSrc": "8321:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8321:18:7"
																		},
																		"nativeSrc": "8321:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8321:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "8262:10:7",
																				"nodeType": "YulIdentifier",
																				"src": "8262:10:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8274:18:7",
																				"nodeType": "YulLiteral",
																				"src": "8274:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "8259:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "8259:2:7"
																		},
																		"nativeSrc": "8259:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8259:34:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "8298:10:7",
																				"nodeType": "YulIdentifier",
																				"src": "8298:10:7"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "8310:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8310:6:7"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "8295:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "8295:2:7"
																		},
																		"nativeSrc": "8295:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8295:22:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "8256:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "8256:2:7"
																},
																"nativeSrc": "8256:62:7",
																"nodeType": "YulFunctionCall",
																"src": "8256:62:7"
															},
															"nativeSrc": "8253:88:7",
															"nodeType": "YulIf",
															"src": "8253:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8357:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8357:2:7",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "8361:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "8361:10:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8350:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8350:6:7"
																},
																"nativeSrc": "8350:22:7",
																"nodeType": "YulFunctionCall",
																"src": "8350:22:7"
															},
															"nativeSrc": "8350:22:7",
															"nodeType": "YulExpressionStatement",
															"src": "8350:22:7"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "8097:281:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8126:6:7",
														"nodeType": "YulTypedName",
														"src": "8126:6:7",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "8134:4:7",
														"nodeType": "YulTypedName",
														"src": "8134:4:7",
														"type": ""
													}
												],
												"src": "8097:281:7"
											},
											{
												"body": {
													"nativeSrc": "8425:88:7",
													"nodeType": "YulBlock",
													"src": "8425:88:7",
													"statements": [
														{
															"nativeSrc": "8435:30:7",
															"nodeType": "YulAssignment",
															"src": "8435:30:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "8445:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "8445:18:7"
																},
																"nativeSrc": "8445:20:7",
																"nodeType": "YulFunctionCall",
																"src": "8445:20:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "8435:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8435:6:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "8494:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8494:6:7"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "8502:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8502:4:7"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "8474:19:7",
																	"nodeType": "YulIdentifier",
																	"src": "8474:19:7"
																},
																"nativeSrc": "8474:33:7",
																"nodeType": "YulFunctionCall",
																"src": "8474:33:7"
															},
															"nativeSrc": "8474:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "8474:33:7"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "8384:129:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "8409:4:7",
														"nodeType": "YulTypedName",
														"src": "8409:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "8418:6:7",
														"nodeType": "YulTypedName",
														"src": "8418:6:7",
														"type": ""
													}
												],
												"src": "8384:129:7"
											},
											{
												"body": {
													"nativeSrc": "8586:241:7",
													"nodeType": "YulBlock",
													"src": "8586:241:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "8691:22:7",
																"nodeType": "YulBlock",
																"src": "8691:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8693:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "8693:16:7"
																			},
																			"nativeSrc": "8693:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8693:18:7"
																		},
																		"nativeSrc": "8693:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8693:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "8663:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8663:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8671:18:7",
																		"nodeType": "YulLiteral",
																		"src": "8671:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8660:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "8660:2:7"
																},
																"nativeSrc": "8660:30:7",
																"nodeType": "YulFunctionCall",
																"src": "8660:30:7"
															},
															"nativeSrc": "8657:56:7",
															"nodeType": "YulIf",
															"src": "8657:56:7"
														},
														{
															"nativeSrc": "8723:37:7",
															"nodeType": "YulAssignment",
															"src": "8723:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "8753:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8753:6:7"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "8731:21:7",
																	"nodeType": "YulIdentifier",
																	"src": "8731:21:7"
																},
																"nativeSrc": "8731:29:7",
																"nodeType": "YulFunctionCall",
																"src": "8731:29:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "8723:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8723:4:7"
																}
															]
														},
														{
															"nativeSrc": "8797:23:7",
															"nodeType": "YulAssignment",
															"src": "8797:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "8809:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8809:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8815:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8815:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8805:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8805:3:7"
																},
																"nativeSrc": "8805:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8805:15:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "8797:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8797:4:7"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "8519:308:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "8570:6:7",
														"nodeType": "YulTypedName",
														"src": "8570:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "8581:4:7",
														"nodeType": "YulTypedName",
														"src": "8581:4:7",
														"type": ""
													}
												],
												"src": "8519:308:7"
											},
											{
												"body": {
													"nativeSrc": "8897:84:7",
													"nodeType": "YulBlock",
													"src": "8897:84:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "8921:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8921:3:7"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "8926:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8926:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8931:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8931:6:7"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "8908:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "8908:12:7"
																},
																"nativeSrc": "8908:30:7",
																"nodeType": "YulFunctionCall",
																"src": "8908:30:7"
															},
															"nativeSrc": "8908:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "8908:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "8958:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "8958:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "8963:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8963:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8954:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8954:3:7"
																		},
																		"nativeSrc": "8954:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8954:16:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8972:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8972:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8947:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8947:6:7"
																},
																"nativeSrc": "8947:27:7",
																"nodeType": "YulFunctionCall",
																"src": "8947:27:7"
															},
															"nativeSrc": "8947:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "8947:27:7"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "8833:148:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8879:3:7",
														"nodeType": "YulTypedName",
														"src": "8879:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "8884:3:7",
														"nodeType": "YulTypedName",
														"src": "8884:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8889:6:7",
														"nodeType": "YulTypedName",
														"src": "8889:6:7",
														"type": ""
													}
												],
												"src": "8833:148:7"
											},
											{
												"body": {
													"nativeSrc": "9071:341:7",
													"nodeType": "YulBlock",
													"src": "9071:341:7",
													"statements": [
														{
															"nativeSrc": "9081:75:7",
															"nodeType": "YulAssignment",
															"src": "9081:75:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "9148:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "9148:6:7"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "9106:41:7",
																			"nodeType": "YulIdentifier",
																			"src": "9106:41:7"
																		},
																		"nativeSrc": "9106:49:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9106:49:7"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "9090:15:7",
																	"nodeType": "YulIdentifier",
																	"src": "9090:15:7"
																},
																"nativeSrc": "9090:66:7",
																"nodeType": "YulFunctionCall",
																"src": "9090:66:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "9081:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "9081:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "9172:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "9172:5:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9179:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9179:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9165:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9165:6:7"
																},
																"nativeSrc": "9165:21:7",
																"nodeType": "YulFunctionCall",
																"src": "9165:21:7"
															},
															"nativeSrc": "9165:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "9165:21:7"
														},
														{
															"nativeSrc": "9195:27:7",
															"nodeType": "YulVariableDeclaration",
															"src": "9195:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "9210:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "9210:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9217:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9217:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9206:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9206:3:7"
																},
																"nativeSrc": "9206:16:7",
																"nodeType": "YulFunctionCall",
																"src": "9206:16:7"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "9199:3:7",
																	"nodeType": "YulTypedName",
																	"src": "9199:3:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9260:83:7",
																"nodeType": "YulBlock",
																"src": "9260:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "9262:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "9262:77:7"
																			},
																			"nativeSrc": "9262:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9262:79:7"
																		},
																		"nativeSrc": "9262:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "9262:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "9241:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "9241:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "9246:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "9246:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9237:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9237:3:7"
																		},
																		"nativeSrc": "9237:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9237:16:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "9255:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9255:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9234:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "9234:2:7"
																},
																"nativeSrc": "9234:25:7",
																"nodeType": "YulFunctionCall",
																"src": "9234:25:7"
															},
															"nativeSrc": "9231:112:7",
															"nodeType": "YulIf",
															"src": "9231:112:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "9389:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9389:3:7"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "9394:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9394:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9399:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9399:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "9352:36:7",
																	"nodeType": "YulIdentifier",
																	"src": "9352:36:7"
																},
																"nativeSrc": "9352:54:7",
																"nodeType": "YulFunctionCall",
																"src": "9352:54:7"
															},
															"nativeSrc": "9352:54:7",
															"nodeType": "YulExpressionStatement",
															"src": "9352:54:7"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "8987:425:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "9044:3:7",
														"nodeType": "YulTypedName",
														"src": "9044:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9049:6:7",
														"nodeType": "YulTypedName",
														"src": "9049:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9057:3:7",
														"nodeType": "YulTypedName",
														"src": "9057:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "9065:5:7",
														"nodeType": "YulTypedName",
														"src": "9065:5:7",
														"type": ""
													}
												],
												"src": "8987:425:7"
											},
											{
												"body": {
													"nativeSrc": "9494:278:7",
													"nodeType": "YulBlock",
													"src": "9494:278:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "9543:83:7",
																"nodeType": "YulBlock",
																"src": "9543:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "9545:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "9545:77:7"
																			},
																			"nativeSrc": "9545:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9545:79:7"
																		},
																		"nativeSrc": "9545:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "9545:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "9522:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "9522:6:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9530:4:7",
																						"nodeType": "YulLiteral",
																						"src": "9530:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9518:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "9518:3:7"
																				},
																				"nativeSrc": "9518:17:7",
																				"nodeType": "YulFunctionCall",
																				"src": "9518:17:7"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "9537:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "9537:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "9514:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9514:3:7"
																		},
																		"nativeSrc": "9514:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9514:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9507:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9507:6:7"
																},
																"nativeSrc": "9507:35:7",
																"nodeType": "YulFunctionCall",
																"src": "9507:35:7"
															},
															"nativeSrc": "9504:122:7",
															"nodeType": "YulIf",
															"src": "9504:122:7"
														},
														{
															"nativeSrc": "9635:34:7",
															"nodeType": "YulVariableDeclaration",
															"src": "9635:34:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9662:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9662:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9649:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "9649:12:7"
																},
																"nativeSrc": "9649:20:7",
																"nodeType": "YulFunctionCall",
																"src": "9649:20:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "9639:6:7",
																	"nodeType": "YulTypedName",
																	"src": "9639:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9678:88:7",
															"nodeType": "YulAssignment",
															"src": "9678:88:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9739:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "9739:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9747:4:7",
																				"nodeType": "YulLiteral",
																				"src": "9747:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9735:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9735:3:7"
																		},
																		"nativeSrc": "9735:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9735:17:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9754:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9754:6:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "9762:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9762:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "9687:47:7",
																	"nodeType": "YulIdentifier",
																	"src": "9687:47:7"
																},
																"nativeSrc": "9687:79:7",
																"nodeType": "YulFunctionCall",
																"src": "9687:79:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "9678:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "9678:5:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "9432:340:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9472:6:7",
														"nodeType": "YulTypedName",
														"src": "9472:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9480:3:7",
														"nodeType": "YulTypedName",
														"src": "9480:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "9488:5:7",
														"nodeType": "YulTypedName",
														"src": "9488:5:7",
														"type": ""
													}
												],
												"src": "9432:340:7"
											},
											{
												"body": {
													"nativeSrc": "9854:433:7",
													"nodeType": "YulBlock",
													"src": "9854:433:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "9900:83:7",
																"nodeType": "YulBlock",
																"src": "9900:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9902:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "9902:77:7"
																			},
																			"nativeSrc": "9902:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9902:79:7"
																		},
																		"nativeSrc": "9902:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "9902:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9875:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "9875:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9884:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9884:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9871:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9871:3:7"
																		},
																		"nativeSrc": "9871:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9871:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9896:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9896:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9867:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9867:3:7"
																},
																"nativeSrc": "9867:32:7",
																"nodeType": "YulFunctionCall",
																"src": "9867:32:7"
															},
															"nativeSrc": "9864:119:7",
															"nodeType": "YulIf",
															"src": "9864:119:7"
														},
														{
															"nativeSrc": "9993:287:7",
															"nodeType": "YulBlock",
															"src": "9993:287:7",
															"statements": [
																{
																	"nativeSrc": "10008:45:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10008:45:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10039:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "10039:9:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10050:1:7",
																						"nodeType": "YulLiteral",
																						"src": "10050:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10035:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "10035:3:7"
																				},
																				"nativeSrc": "10035:17:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10035:17:7"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "10022:12:7",
																			"nodeType": "YulIdentifier",
																			"src": "10022:12:7"
																		},
																		"nativeSrc": "10022:31:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10022:31:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10012:6:7",
																			"nodeType": "YulTypedName",
																			"src": "10012:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "10100:83:7",
																		"nodeType": "YulBlock",
																		"src": "10100:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "10102:77:7",
																						"nodeType": "YulIdentifier",
																						"src": "10102:77:7"
																					},
																					"nativeSrc": "10102:79:7",
																					"nodeType": "YulFunctionCall",
																					"src": "10102:79:7"
																				},
																				"nativeSrc": "10102:79:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "10102:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "10072:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "10072:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10080:18:7",
																				"nodeType": "YulLiteral",
																				"src": "10080:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "10069:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "10069:2:7"
																		},
																		"nativeSrc": "10069:30:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10069:30:7"
																	},
																	"nativeSrc": "10066:117:7",
																	"nodeType": "YulIf",
																	"src": "10066:117:7"
																},
																{
																	"nativeSrc": "10197:73:7",
																	"nodeType": "YulAssignment",
																	"src": "10197:73:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10242:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "10242:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10253:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "10253:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10238:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "10238:3:7"
																				},
																				"nativeSrc": "10238:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10238:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10262:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "10262:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "10207:30:7",
																			"nodeType": "YulIdentifier",
																			"src": "10207:30:7"
																		},
																		"nativeSrc": "10207:63:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10207:63:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10197:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "10197:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nativeSrc": "9778:509:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9824:9:7",
														"nodeType": "YulTypedName",
														"src": "9824:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9835:7:7",
														"nodeType": "YulTypedName",
														"src": "9835:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9847:6:7",
														"nodeType": "YulTypedName",
														"src": "9847:6:7",
														"type": ""
													}
												],
												"src": "9778:509:7"
											},
											{
												"body": {
													"nativeSrc": "10376:391:7",
													"nodeType": "YulBlock",
													"src": "10376:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "10422:83:7",
																"nodeType": "YulBlock",
																"src": "10422:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10424:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "10424:77:7"
																			},
																			"nativeSrc": "10424:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "10424:79:7"
																		},
																		"nativeSrc": "10424:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "10424:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10397:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "10397:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10406:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10406:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10393:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10393:3:7"
																		},
																		"nativeSrc": "10393:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10393:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10418:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10418:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10389:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10389:3:7"
																},
																"nativeSrc": "10389:32:7",
																"nodeType": "YulFunctionCall",
																"src": "10389:32:7"
															},
															"nativeSrc": "10386:119:7",
															"nodeType": "YulIf",
															"src": "10386:119:7"
														},
														{
															"nativeSrc": "10515:117:7",
															"nodeType": "YulBlock",
															"src": "10515:117:7",
															"statements": [
																{
																	"nativeSrc": "10530:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10530:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10544:1:7",
																		"nodeType": "YulLiteral",
																		"src": "10544:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10534:6:7",
																			"nodeType": "YulTypedName",
																			"src": "10534:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10559:63:7",
																	"nodeType": "YulAssignment",
																	"src": "10559:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10594:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "10594:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10605:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "10605:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10590:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "10590:3:7"
																				},
																				"nativeSrc": "10590:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10590:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10614:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "10614:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "10569:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "10569:20:7"
																		},
																		"nativeSrc": "10569:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10569:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10559:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "10559:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10642:118:7",
															"nodeType": "YulBlock",
															"src": "10642:118:7",
															"statements": [
																{
																	"nativeSrc": "10657:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10657:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10671:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10671:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10661:6:7",
																			"nodeType": "YulTypedName",
																			"src": "10661:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10687:63:7",
																	"nodeType": "YulAssignment",
																	"src": "10687:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10722:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "10722:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10733:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "10733:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10718:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "10718:3:7"
																				},
																				"nativeSrc": "10718:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10718:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10742:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "10742:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10697:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "10697:20:7"
																		},
																		"nativeSrc": "10697:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10697:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10687:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "10687:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nativeSrc": "10293:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10338:9:7",
														"nodeType": "YulTypedName",
														"src": "10338:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10349:7:7",
														"nodeType": "YulTypedName",
														"src": "10349:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10361:6:7",
														"nodeType": "YulTypedName",
														"src": "10361:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10369:6:7",
														"nodeType": "YulTypedName",
														"src": "10369:6:7",
														"type": ""
													}
												],
												"src": "10293:474:7"
											},
											{
												"body": {
													"nativeSrc": "10871:124:7",
													"nodeType": "YulBlock",
													"src": "10871:124:7",
													"statements": [
														{
															"nativeSrc": "10881:26:7",
															"nodeType": "YulAssignment",
															"src": "10881:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10893:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "10893:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10904:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10904:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10889:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10889:3:7"
																},
																"nativeSrc": "10889:18:7",
																"nodeType": "YulFunctionCall",
																"src": "10889:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10881:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10881:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10961:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10961:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10974:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10974:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10985:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10985:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10970:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10970:3:7"
																		},
																		"nativeSrc": "10970:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10970:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10917:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "10917:43:7"
																},
																"nativeSrc": "10917:71:7",
																"nodeType": "YulFunctionCall",
																"src": "10917:71:7"
															},
															"nativeSrc": "10917:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "10917:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "10773:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10843:9:7",
														"nodeType": "YulTypedName",
														"src": "10843:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10855:6:7",
														"nodeType": "YulTypedName",
														"src": "10855:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10866:4:7",
														"nodeType": "YulTypedName",
														"src": "10866:4:7",
														"type": ""
													}
												],
												"src": "10773:222:7"
											},
											{
												"body": {
													"nativeSrc": "11075:40:7",
													"nodeType": "YulBlock",
													"src": "11075:40:7",
													"statements": [
														{
															"nativeSrc": "11086:22:7",
															"nodeType": "YulAssignment",
															"src": "11086:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11102:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "11102:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11096:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "11096:5:7"
																},
																"nativeSrc": "11096:12:7",
																"nodeType": "YulFunctionCall",
																"src": "11096:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "11086:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11086:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "11001:114:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11058:5:7",
														"nodeType": "YulTypedName",
														"src": "11058:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "11068:6:7",
														"nodeType": "YulTypedName",
														"src": "11068:6:7",
														"type": ""
													}
												],
												"src": "11001:114:7"
											},
											{
												"body": {
													"nativeSrc": "11232:73:7",
													"nodeType": "YulBlock",
													"src": "11232:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11249:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11249:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11254:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "11254:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11242:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11242:6:7"
																},
																"nativeSrc": "11242:19:7",
																"nodeType": "YulFunctionCall",
																"src": "11242:19:7"
															},
															"nativeSrc": "11242:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "11242:19:7"
														},
														{
															"nativeSrc": "11270:29:7",
															"nodeType": "YulAssignment",
															"src": "11270:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11289:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11289:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11294:4:7",
																		"nodeType": "YulLiteral",
																		"src": "11294:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11285:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11285:3:7"
																},
																"nativeSrc": "11285:14:7",
																"nodeType": "YulFunctionCall",
																"src": "11285:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "11270:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "11270:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nativeSrc": "11121:184:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11204:3:7",
														"nodeType": "YulTypedName",
														"src": "11204:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "11209:6:7",
														"nodeType": "YulTypedName",
														"src": "11209:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "11220:11:7",
														"nodeType": "YulTypedName",
														"src": "11220:11:7",
														"type": ""
													}
												],
												"src": "11121:184:7"
											},
											{
												"body": {
													"nativeSrc": "11383:60:7",
													"nodeType": "YulBlock",
													"src": "11383:60:7",
													"statements": [
														{
															"nativeSrc": "11393:11:7",
															"nodeType": "YulAssignment",
															"src": "11393:11:7",
															"value": {
																"name": "ptr",
																"nativeSrc": "11401:3:7",
																"nodeType": "YulIdentifier",
																"src": "11401:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "11393:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11393:4:7"
																}
															]
														},
														{
															"nativeSrc": "11414:22:7",
															"nodeType": "YulAssignment",
															"src": "11414:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "11426:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11426:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11431:4:7",
																		"nodeType": "YulLiteral",
																		"src": "11431:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11422:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11422:3:7"
																},
																"nativeSrc": "11422:14:7",
																"nodeType": "YulFunctionCall",
																"src": "11422:14:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "11414:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11414:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "11311:132:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "11370:3:7",
														"nodeType": "YulTypedName",
														"src": "11370:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "11378:4:7",
														"nodeType": "YulTypedName",
														"src": "11378:4:7",
														"type": ""
													}
												],
												"src": "11311:132:7"
											},
											{
												"body": {
													"nativeSrc": "11504:53:7",
													"nodeType": "YulBlock",
													"src": "11504:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11521:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11521:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11544:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "11544:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "11526:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "11526:17:7"
																		},
																		"nativeSrc": "11526:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11526:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11514:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11514:6:7"
																},
																"nativeSrc": "11514:37:7",
																"nodeType": "YulFunctionCall",
																"src": "11514:37:7"
															},
															"nativeSrc": "11514:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "11514:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nativeSrc": "11449:108:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11492:5:7",
														"nodeType": "YulTypedName",
														"src": "11492:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "11499:3:7",
														"nodeType": "YulTypedName",
														"src": "11499:3:7",
														"type": ""
													}
												],
												"src": "11449:108:7"
											},
											{
												"body": {
													"nativeSrc": "11643:99:7",
													"nodeType": "YulBlock",
													"src": "11643:99:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11687:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "11687:6:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "11695:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11695:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address",
																	"nativeSrc": "11653:33:7",
																	"nodeType": "YulIdentifier",
																	"src": "11653:33:7"
																},
																"nativeSrc": "11653:46:7",
																"nodeType": "YulFunctionCall",
																"src": "11653:46:7"
															},
															"nativeSrc": "11653:46:7",
															"nodeType": "YulExpressionStatement",
															"src": "11653:46:7"
														},
														{
															"nativeSrc": "11708:28:7",
															"nodeType": "YulAssignment",
															"src": "11708:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11726:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11726:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11731:4:7",
																		"nodeType": "YulLiteral",
																		"src": "11731:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11722:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11722:3:7"
																},
																"nativeSrc": "11722:14:7",
																"nodeType": "YulFunctionCall",
																"src": "11722:14:7"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "11708:10:7",
																	"nodeType": "YulIdentifier",
																	"src": "11708:10:7"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_address_to_t_address",
												"nativeSrc": "11563:179:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "11616:6:7",
														"nodeType": "YulTypedName",
														"src": "11616:6:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "11624:3:7",
														"nodeType": "YulTypedName",
														"src": "11624:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "11632:10:7",
														"nodeType": "YulTypedName",
														"src": "11632:10:7",
														"type": ""
													}
												],
												"src": "11563:179:7"
											},
											{
												"body": {
													"nativeSrc": "11823:38:7",
													"nodeType": "YulBlock",
													"src": "11823:38:7",
													"statements": [
														{
															"nativeSrc": "11833:22:7",
															"nodeType": "YulAssignment",
															"src": "11833:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "11845:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11845:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11850:4:7",
																		"nodeType": "YulLiteral",
																		"src": "11850:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11841:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11841:3:7"
																},
																"nativeSrc": "11841:14:7",
																"nodeType": "YulFunctionCall",
																"src": "11841:14:7"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "11833:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11833:4:7"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "11748:113:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "11810:3:7",
														"nodeType": "YulTypedName",
														"src": "11810:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "11818:4:7",
														"nodeType": "YulTypedName",
														"src": "11818:4:7",
														"type": ""
													}
												],
												"src": "11748:113:7"
											},
											{
												"body": {
													"nativeSrc": "12021:608:7",
													"nodeType": "YulBlock",
													"src": "12021:608:7",
													"statements": [
														{
															"nativeSrc": "12031:68:7",
															"nodeType": "YulVariableDeclaration",
															"src": "12031:68:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12093:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "12093:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_address_$dyn_memory_ptr",
																	"nativeSrc": "12045:47:7",
																	"nodeType": "YulIdentifier",
																	"src": "12045:47:7"
																},
																"nativeSrc": "12045:54:7",
																"nodeType": "YulFunctionCall",
																"src": "12045:54:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "12035:6:7",
																	"nodeType": "YulTypedName",
																	"src": "12035:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12108:93:7",
															"nodeType": "YulAssignment",
															"src": "12108:93:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12189:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12189:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12194:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "12194:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "12115:73:7",
																	"nodeType": "YulIdentifier",
																	"src": "12115:73:7"
																},
																"nativeSrc": "12115:86:7",
																"nodeType": "YulFunctionCall",
																"src": "12115:86:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12108:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12108:3:7"
																}
															]
														},
														{
															"nativeSrc": "12210:71:7",
															"nodeType": "YulVariableDeclaration",
															"src": "12210:71:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12275:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "12275:5:7"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
																	"nativeSrc": "12225:49:7",
																	"nodeType": "YulIdentifier",
																	"src": "12225:49:7"
																},
																"nativeSrc": "12225:56:7",
																"nodeType": "YulFunctionCall",
																"src": "12225:56:7"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "12214:7:7",
																	"nodeType": "YulTypedName",
																	"src": "12214:7:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12290:21:7",
															"nodeType": "YulVariableDeclaration",
															"src": "12290:21:7",
															"value": {
																"name": "baseRef",
																"nativeSrc": "12304:7:7",
																"nodeType": "YulIdentifier",
																"src": "12304:7:7"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "12294:6:7",
																	"nodeType": "YulTypedName",
																	"src": "12294:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12380:224:7",
																"nodeType": "YulBlock",
																"src": "12380:224:7",
																"statements": [
																	{
																		"nativeSrc": "12394:34:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "12394:34:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "12421:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "12421:6:7"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "12415:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "12415:5:7"
																			},
																			"nativeSrc": "12415:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "12415:13:7"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "12398:13:7",
																				"nodeType": "YulTypedName",
																				"src": "12398:13:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "12441:70:7",
																		"nodeType": "YulAssignment",
																		"src": "12441:70:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "12492:13:7",
																					"nodeType": "YulIdentifier",
																					"src": "12492:13:7"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "12507:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "12507:3:7"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_address_to_t_address",
																				"nativeSrc": "12448:43:7",
																				"nodeType": "YulIdentifier",
																				"src": "12448:43:7"
																			},
																			"nativeSrc": "12448:63:7",
																			"nodeType": "YulFunctionCall",
																			"src": "12448:63:7"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "12441:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "12441:3:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "12524:70:7",
																		"nodeType": "YulAssignment",
																		"src": "12524:70:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "12587:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "12587:6:7"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
																				"nativeSrc": "12534:52:7",
																				"nodeType": "YulIdentifier",
																				"src": "12534:52:7"
																			},
																			"nativeSrc": "12534:60:7",
																			"nodeType": "YulFunctionCall",
																			"src": "12534:60:7"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "12524:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "12524:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "12342:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12342:1:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12345:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "12345:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "12339:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "12339:2:7"
																},
																"nativeSrc": "12339:13:7",
																"nodeType": "YulFunctionCall",
																"src": "12339:13:7"
															},
															"nativeSrc": "12320:284:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "12353:18:7",
																"nodeType": "YulBlock",
																"src": "12353:18:7",
																"statements": [
																	{
																		"nativeSrc": "12355:14:7",
																		"nodeType": "YulAssignment",
																		"src": "12355:14:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "12364:1:7",
																					"nodeType": "YulIdentifier",
																					"src": "12364:1:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12367:1:7",
																					"nodeType": "YulLiteral",
																					"src": "12367:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "12360:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "12360:3:7"
																			},
																			"nativeSrc": "12360:9:7",
																			"nodeType": "YulFunctionCall",
																			"src": "12360:9:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "12355:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "12355:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "12324:14:7",
																"nodeType": "YulBlock",
																"src": "12324:14:7",
																"statements": [
																	{
																		"nativeSrc": "12326:10:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "12326:10:7",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "12335:1:7",
																			"nodeType": "YulLiteral",
																			"src": "12335:1:7",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "12330:1:7",
																				"nodeType": "YulTypedName",
																				"src": "12330:1:7",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "12320:284:7"
														},
														{
															"nativeSrc": "12613:10:7",
															"nodeType": "YulAssignment",
															"src": "12613:10:7",
															"value": {
																"name": "pos",
																"nativeSrc": "12620:3:7",
																"nodeType": "YulIdentifier",
																"src": "12620:3:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12613:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12613:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nativeSrc": "11897:732:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12000:5:7",
														"nodeType": "YulTypedName",
														"src": "12000:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "12007:3:7",
														"nodeType": "YulTypedName",
														"src": "12007:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12016:3:7",
														"nodeType": "YulTypedName",
														"src": "12016:3:7",
														"type": ""
													}
												],
												"src": "11897:732:7"
											},
											{
												"body": {
													"nativeSrc": "12783:225:7",
													"nodeType": "YulBlock",
													"src": "12783:225:7",
													"statements": [
														{
															"nativeSrc": "12793:26:7",
															"nodeType": "YulAssignment",
															"src": "12793:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12805:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "12805:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12816:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12816:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12801:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12801:3:7"
																},
																"nativeSrc": "12801:18:7",
																"nodeType": "YulFunctionCall",
																"src": "12801:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12793:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12793:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12840:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12840:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12851:1:7",
																				"nodeType": "YulLiteral",
																				"src": "12851:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12836:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12836:3:7"
																		},
																		"nativeSrc": "12836:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12836:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12859:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "12859:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12865:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12865:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12855:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12855:3:7"
																		},
																		"nativeSrc": "12855:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12855:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12829:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12829:6:7"
																},
																"nativeSrc": "12829:47:7",
																"nodeType": "YulFunctionCall",
																"src": "12829:47:7"
															},
															"nativeSrc": "12829:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "12829:47:7"
														},
														{
															"nativeSrc": "12885:116:7",
															"nodeType": "YulAssignment",
															"src": "12885:116:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12987:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "12987:6:7"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "12996:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "12996:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "12893:93:7",
																	"nodeType": "YulIdentifier",
																	"src": "12893:93:7"
																},
																"nativeSrc": "12893:108:7",
																"nodeType": "YulFunctionCall",
																"src": "12893:108:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12885:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12885:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "12635:373:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12755:9:7",
														"nodeType": "YulTypedName",
														"src": "12755:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12767:6:7",
														"nodeType": "YulTypedName",
														"src": "12767:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12778:4:7",
														"nodeType": "YulTypedName",
														"src": "12778:4:7",
														"type": ""
													}
												],
												"src": "12635:373:7"
											},
											{
												"body": {
													"nativeSrc": "13054:76:7",
													"nodeType": "YulBlock",
													"src": "13054:76:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "13108:16:7",
																"nodeType": "YulBlock",
																"src": "13108:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "13117:1:7",
																					"nodeType": "YulLiteral",
																					"src": "13117:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13120:1:7",
																					"nodeType": "YulLiteral",
																					"src": "13120:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "13110:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "13110:6:7"
																			},
																			"nativeSrc": "13110:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "13110:12:7"
																		},
																		"nativeSrc": "13110:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "13110:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13077:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "13077:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "13099:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "13099:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "13084:14:7",
																					"nodeType": "YulIdentifier",
																					"src": "13084:14:7"
																				},
																				"nativeSrc": "13084:21:7",
																				"nodeType": "YulFunctionCall",
																				"src": "13084:21:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "13074:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "13074:2:7"
																		},
																		"nativeSrc": "13074:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13074:32:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13067:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13067:6:7"
																},
																"nativeSrc": "13067:40:7",
																"nodeType": "YulFunctionCall",
																"src": "13067:40:7"
															},
															"nativeSrc": "13064:60:7",
															"nodeType": "YulIf",
															"src": "13064:60:7"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "13014:116:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13047:5:7",
														"nodeType": "YulTypedName",
														"src": "13047:5:7",
														"type": ""
													}
												],
												"src": "13014:116:7"
											},
											{
												"body": {
													"nativeSrc": "13185:84:7",
													"nodeType": "YulBlock",
													"src": "13185:84:7",
													"statements": [
														{
															"nativeSrc": "13195:29:7",
															"nodeType": "YulAssignment",
															"src": "13195:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "13217:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "13217:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "13204:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "13204:12:7"
																},
																"nativeSrc": "13204:20:7",
																"nodeType": "YulFunctionCall",
																"src": "13204:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "13195:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "13195:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13257:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "13257:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "13233:23:7",
																	"nodeType": "YulIdentifier",
																	"src": "13233:23:7"
																},
																"nativeSrc": "13233:30:7",
																"nodeType": "YulFunctionCall",
																"src": "13233:30:7"
															},
															"nativeSrc": "13233:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "13233:30:7"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "13136:133:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "13163:6:7",
														"nodeType": "YulTypedName",
														"src": "13163:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "13171:3:7",
														"nodeType": "YulTypedName",
														"src": "13171:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "13179:5:7",
														"nodeType": "YulTypedName",
														"src": "13179:5:7",
														"type": ""
													}
												],
												"src": "13136:133:7"
											},
											{
												"body": {
													"nativeSrc": "13355:388:7",
													"nodeType": "YulBlock",
													"src": "13355:388:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "13401:83:7",
																"nodeType": "YulBlock",
																"src": "13401:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "13403:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "13403:77:7"
																			},
																			"nativeSrc": "13403:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "13403:79:7"
																		},
																		"nativeSrc": "13403:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "13403:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13376:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "13376:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13385:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13385:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13372:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13372:3:7"
																		},
																		"nativeSrc": "13372:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13372:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13397:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13397:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "13368:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13368:3:7"
																},
																"nativeSrc": "13368:32:7",
																"nodeType": "YulFunctionCall",
																"src": "13368:32:7"
															},
															"nativeSrc": "13365:119:7",
															"nodeType": "YulIf",
															"src": "13365:119:7"
														},
														{
															"nativeSrc": "13494:117:7",
															"nodeType": "YulBlock",
															"src": "13494:117:7",
															"statements": [
																{
																	"nativeSrc": "13509:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13509:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13523:1:7",
																		"nodeType": "YulLiteral",
																		"src": "13523:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13513:6:7",
																			"nodeType": "YulTypedName",
																			"src": "13513:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13538:63:7",
																	"nodeType": "YulAssignment",
																	"src": "13538:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13573:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "13573:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13584:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "13584:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13569:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "13569:3:7"
																				},
																				"nativeSrc": "13569:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "13569:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13593:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "13593:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "13548:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "13548:20:7"
																		},
																		"nativeSrc": "13548:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13548:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "13538:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "13538:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "13621:115:7",
															"nodeType": "YulBlock",
															"src": "13621:115:7",
															"statements": [
																{
																	"nativeSrc": "13636:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13636:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13650:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13650:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13640:6:7",
																			"nodeType": "YulTypedName",
																			"src": "13640:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13666:60:7",
																	"nodeType": "YulAssignment",
																	"src": "13666:60:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13698:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "13698:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13709:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "13709:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13694:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "13694:3:7"
																				},
																				"nativeSrc": "13694:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "13694:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13718:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "13718:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "13676:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "13676:17:7"
																		},
																		"nativeSrc": "13676:50:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13676:50:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "13666:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "13666:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_bool",
												"nativeSrc": "13275:468:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13317:9:7",
														"nodeType": "YulTypedName",
														"src": "13317:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "13328:7:7",
														"nodeType": "YulTypedName",
														"src": "13328:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "13340:6:7",
														"nodeType": "YulTypedName",
														"src": "13340:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13348:6:7",
														"nodeType": "YulTypedName",
														"src": "13348:6:7",
														"type": ""
													}
												],
												"src": "13275:468:7"
											},
											{
												"body": {
													"nativeSrc": "13832:391:7",
													"nodeType": "YulBlock",
													"src": "13832:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "13878:83:7",
																"nodeType": "YulBlock",
																"src": "13878:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "13880:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "13880:77:7"
																			},
																			"nativeSrc": "13880:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "13880:79:7"
																		},
																		"nativeSrc": "13880:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "13880:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13853:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "13853:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13862:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13862:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13849:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13849:3:7"
																		},
																		"nativeSrc": "13849:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13849:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13874:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13874:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "13845:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13845:3:7"
																},
																"nativeSrc": "13845:32:7",
																"nodeType": "YulFunctionCall",
																"src": "13845:32:7"
															},
															"nativeSrc": "13842:119:7",
															"nodeType": "YulIf",
															"src": "13842:119:7"
														},
														{
															"nativeSrc": "13971:117:7",
															"nodeType": "YulBlock",
															"src": "13971:117:7",
															"statements": [
																{
																	"nativeSrc": "13986:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13986:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14000:1:7",
																		"nodeType": "YulLiteral",
																		"src": "14000:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13990:6:7",
																			"nodeType": "YulTypedName",
																			"src": "13990:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "14015:63:7",
																	"nodeType": "YulAssignment",
																	"src": "14015:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14050:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "14050:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14061:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "14061:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14046:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "14046:3:7"
																				},
																				"nativeSrc": "14046:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "14046:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14070:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "14070:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "14025:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "14025:20:7"
																		},
																		"nativeSrc": "14025:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14025:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "14015:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "14015:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "14098:118:7",
															"nodeType": "YulBlock",
															"src": "14098:118:7",
															"statements": [
																{
																	"nativeSrc": "14113:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14113:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14127:2:7",
																		"nodeType": "YulLiteral",
																		"src": "14127:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14117:6:7",
																			"nodeType": "YulTypedName",
																			"src": "14117:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "14143:63:7",
																	"nodeType": "YulAssignment",
																	"src": "14143:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14178:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "14178:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14189:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "14189:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14174:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "14174:3:7"
																				},
																				"nativeSrc": "14174:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "14174:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14198:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "14198:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "14153:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "14153:20:7"
																		},
																		"nativeSrc": "14153:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14153:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "14143:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "14143:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "13749:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13794:9:7",
														"nodeType": "YulTypedName",
														"src": "13794:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "13805:7:7",
														"nodeType": "YulTypedName",
														"src": "13805:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "13817:6:7",
														"nodeType": "YulTypedName",
														"src": "13817:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13825:6:7",
														"nodeType": "YulTypedName",
														"src": "13825:6:7",
														"type": ""
													}
												],
												"src": "13749:474:7"
											},
											{
												"body": {
													"nativeSrc": "14257:152:7",
													"nodeType": "YulBlock",
													"src": "14257:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14274:1:7",
																		"nodeType": "YulLiteral",
																		"src": "14274:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14277:77:7",
																		"nodeType": "YulLiteral",
																		"src": "14277:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14267:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14267:6:7"
																},
																"nativeSrc": "14267:88:7",
																"nodeType": "YulFunctionCall",
																"src": "14267:88:7"
															},
															"nativeSrc": "14267:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "14267:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14371:1:7",
																		"nodeType": "YulLiteral",
																		"src": "14371:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14374:4:7",
																		"nodeType": "YulLiteral",
																		"src": "14374:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14364:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14364:6:7"
																},
																"nativeSrc": "14364:15:7",
																"nodeType": "YulFunctionCall",
																"src": "14364:15:7"
															},
															"nativeSrc": "14364:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "14364:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14395:1:7",
																		"nodeType": "YulLiteral",
																		"src": "14395:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14398:4:7",
																		"nodeType": "YulLiteral",
																		"src": "14398:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "14388:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14388:6:7"
																},
																"nativeSrc": "14388:15:7",
																"nodeType": "YulFunctionCall",
																"src": "14388:15:7"
															},
															"nativeSrc": "14388:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "14388:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "14229:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "14229:180:7"
											},
											{
												"body": {
													"nativeSrc": "14466:269:7",
													"nodeType": "YulBlock",
													"src": "14466:269:7",
													"statements": [
														{
															"nativeSrc": "14476:22:7",
															"nodeType": "YulAssignment",
															"src": "14476:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "14490:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "14490:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14496:1:7",
																		"nodeType": "YulLiteral",
																		"src": "14496:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "14486:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14486:3:7"
																},
																"nativeSrc": "14486:12:7",
																"nodeType": "YulFunctionCall",
																"src": "14486:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "14476:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14476:6:7"
																}
															]
														},
														{
															"nativeSrc": "14507:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "14507:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "14537:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "14537:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14543:1:7",
																		"nodeType": "YulLiteral",
																		"src": "14543:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "14533:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14533:3:7"
																},
																"nativeSrc": "14533:12:7",
																"nodeType": "YulFunctionCall",
																"src": "14533:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "14511:18:7",
																	"nodeType": "YulTypedName",
																	"src": "14511:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14584:51:7",
																"nodeType": "YulBlock",
																"src": "14584:51:7",
																"statements": [
																	{
																		"nativeSrc": "14598:27:7",
																		"nodeType": "YulAssignment",
																		"src": "14598:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "14612:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "14612:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14620:4:7",
																					"nodeType": "YulLiteral",
																					"src": "14620:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "14608:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "14608:3:7"
																			},
																			"nativeSrc": "14608:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "14608:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "14598:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "14598:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "14564:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "14564:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14557:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14557:6:7"
																},
																"nativeSrc": "14557:26:7",
																"nodeType": "YulFunctionCall",
																"src": "14557:26:7"
															},
															"nativeSrc": "14554:81:7",
															"nodeType": "YulIf",
															"src": "14554:81:7"
														},
														{
															"body": {
																"nativeSrc": "14687:42:7",
																"nodeType": "YulBlock",
																"src": "14687:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "14701:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "14701:16:7"
																			},
																			"nativeSrc": "14701:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "14701:18:7"
																		},
																		"nativeSrc": "14701:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "14701:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "14651:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "14651:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "14674:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "14674:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14682:2:7",
																				"nodeType": "YulLiteral",
																				"src": "14682:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "14671:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "14671:2:7"
																		},
																		"nativeSrc": "14671:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14671:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "14648:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "14648:2:7"
																},
																"nativeSrc": "14648:38:7",
																"nodeType": "YulFunctionCall",
																"src": "14648:38:7"
															},
															"nativeSrc": "14645:84:7",
															"nodeType": "YulIf",
															"src": "14645:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "14415:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "14450:4:7",
														"nodeType": "YulTypedName",
														"src": "14450:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "14459:6:7",
														"nodeType": "YulTypedName",
														"src": "14459:6:7",
														"type": ""
													}
												],
												"src": "14415:320:7"
											},
											{
												"body": {
													"nativeSrc": "14769:152:7",
													"nodeType": "YulBlock",
													"src": "14769:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14786:1:7",
																		"nodeType": "YulLiteral",
																		"src": "14786:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14789:77:7",
																		"nodeType": "YulLiteral",
																		"src": "14789:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14779:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14779:6:7"
																},
																"nativeSrc": "14779:88:7",
																"nodeType": "YulFunctionCall",
																"src": "14779:88:7"
															},
															"nativeSrc": "14779:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "14779:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14883:1:7",
																		"nodeType": "YulLiteral",
																		"src": "14883:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14886:4:7",
																		"nodeType": "YulLiteral",
																		"src": "14886:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14876:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14876:6:7"
																},
																"nativeSrc": "14876:15:7",
																"nodeType": "YulFunctionCall",
																"src": "14876:15:7"
															},
															"nativeSrc": "14876:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "14876:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14907:1:7",
																		"nodeType": "YulLiteral",
																		"src": "14907:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14910:4:7",
																		"nodeType": "YulLiteral",
																		"src": "14910:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "14900:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14900:6:7"
																},
																"nativeSrc": "14900:15:7",
																"nodeType": "YulFunctionCall",
																"src": "14900:15:7"
															},
															"nativeSrc": "14900:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "14900:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "14741:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "14741:180:7"
											},
											{
												"body": {
													"nativeSrc": "14975:362:7",
													"nodeType": "YulBlock",
													"src": "14975:362:7",
													"statements": [
														{
															"nativeSrc": "14985:25:7",
															"nodeType": "YulAssignment",
															"src": "14985:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15008:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "15008:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14990:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "14990:17:7"
																},
																"nativeSrc": "14990:20:7",
																"nodeType": "YulFunctionCall",
																"src": "14990:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14985:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "14985:1:7"
																}
															]
														},
														{
															"nativeSrc": "15019:25:7",
															"nodeType": "YulAssignment",
															"src": "15019:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "15042:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "15042:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15024:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "15024:17:7"
																},
																"nativeSrc": "15024:20:7",
																"nodeType": "YulFunctionCall",
																"src": "15024:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "15019:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "15019:1:7"
																}
															]
														},
														{
															"nativeSrc": "15053:28:7",
															"nodeType": "YulVariableDeclaration",
															"src": "15053:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15076:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "15076:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "15079:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "15079:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "15072:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15072:3:7"
																},
																"nativeSrc": "15072:9:7",
																"nodeType": "YulFunctionCall",
																"src": "15072:9:7"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "15057:11:7",
																	"nodeType": "YulTypedName",
																	"src": "15057:11:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "15090:41:7",
															"nodeType": "YulAssignment",
															"src": "15090:41:7",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "15119:11:7",
																		"nodeType": "YulIdentifier",
																		"src": "15119:11:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15101:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "15101:17:7"
																},
																"nativeSrc": "15101:30:7",
																"nodeType": "YulFunctionCall",
																"src": "15101:30:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "15090:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "15090:7:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15308:22:7",
																"nodeType": "YulBlock",
																"src": "15308:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "15310:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "15310:16:7"
																			},
																			"nativeSrc": "15310:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "15310:18:7"
																		},
																		"nativeSrc": "15310:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "15310:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "15241:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "15241:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "15234:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "15234:6:7"
																				},
																				"nativeSrc": "15234:9:7",
																				"nodeType": "YulFunctionCall",
																				"src": "15234:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "15264:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "15264:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "15271:7:7",
																								"nodeType": "YulIdentifier",
																								"src": "15271:7:7"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "15280:1:7",
																								"nodeType": "YulIdentifier",
																								"src": "15280:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "15267:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "15267:3:7"
																						},
																						"nativeSrc": "15267:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "15267:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "15261:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "15261:2:7"
																				},
																				"nativeSrc": "15261:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "15261:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "15214:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "15214:2:7"
																		},
																		"nativeSrc": "15214:83:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15214:83:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "15194:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15194:6:7"
																},
																"nativeSrc": "15194:113:7",
																"nodeType": "YulFunctionCall",
																"src": "15194:113:7"
															},
															"nativeSrc": "15191:139:7",
															"nodeType": "YulIf",
															"src": "15191:139:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "14927:410:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14958:1:7",
														"nodeType": "YulTypedName",
														"src": "14958:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14961:1:7",
														"nodeType": "YulTypedName",
														"src": "14961:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "14967:7:7",
														"nodeType": "YulTypedName",
														"src": "14967:7:7",
														"type": ""
													}
												],
												"src": "14927:410:7"
											},
											{
												"body": {
													"nativeSrc": "15371:152:7",
													"nodeType": "YulBlock",
													"src": "15371:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15388:1:7",
																		"nodeType": "YulLiteral",
																		"src": "15388:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15391:77:7",
																		"nodeType": "YulLiteral",
																		"src": "15391:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15381:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15381:6:7"
																},
																"nativeSrc": "15381:88:7",
																"nodeType": "YulFunctionCall",
																"src": "15381:88:7"
															},
															"nativeSrc": "15381:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "15381:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15485:1:7",
																		"nodeType": "YulLiteral",
																		"src": "15485:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15488:4:7",
																		"nodeType": "YulLiteral",
																		"src": "15488:4:7",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15478:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15478:6:7"
																},
																"nativeSrc": "15478:15:7",
																"nodeType": "YulFunctionCall",
																"src": "15478:15:7"
															},
															"nativeSrc": "15478:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "15478:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15509:1:7",
																		"nodeType": "YulLiteral",
																		"src": "15509:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15512:4:7",
																		"nodeType": "YulLiteral",
																		"src": "15512:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "15502:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15502:6:7"
																},
																"nativeSrc": "15502:15:7",
																"nodeType": "YulFunctionCall",
																"src": "15502:15:7"
															},
															"nativeSrc": "15502:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "15502:15:7"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "15343:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "15343:180:7"
											},
											{
												"body": {
													"nativeSrc": "15571:143:7",
													"nodeType": "YulBlock",
													"src": "15571:143:7",
													"statements": [
														{
															"nativeSrc": "15581:25:7",
															"nodeType": "YulAssignment",
															"src": "15581:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15604:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "15604:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15586:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "15586:17:7"
																},
																"nativeSrc": "15586:20:7",
																"nodeType": "YulFunctionCall",
																"src": "15586:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "15581:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "15581:1:7"
																}
															]
														},
														{
															"nativeSrc": "15615:25:7",
															"nodeType": "YulAssignment",
															"src": "15615:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "15638:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "15638:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15620:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "15620:17:7"
																},
																"nativeSrc": "15620:20:7",
																"nodeType": "YulFunctionCall",
																"src": "15620:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "15615:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "15615:1:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15662:22:7",
																"nodeType": "YulBlock",
																"src": "15662:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "15664:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "15664:16:7"
																			},
																			"nativeSrc": "15664:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "15664:18:7"
																		},
																		"nativeSrc": "15664:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "15664:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "15659:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "15659:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "15652:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15652:6:7"
																},
																"nativeSrc": "15652:9:7",
																"nodeType": "YulFunctionCall",
																"src": "15652:9:7"
															},
															"nativeSrc": "15649:35:7",
															"nodeType": "YulIf",
															"src": "15649:35:7"
														},
														{
															"nativeSrc": "15694:14:7",
															"nodeType": "YulAssignment",
															"src": "15694:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15703:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "15703:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "15706:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "15706:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "15699:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15699:3:7"
																},
																"nativeSrc": "15699:9:7",
																"nodeType": "YulFunctionCall",
																"src": "15699:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "15694:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "15694:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "15529:185:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "15560:1:7",
														"nodeType": "YulTypedName",
														"src": "15560:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "15563:1:7",
														"nodeType": "YulTypedName",
														"src": "15563:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "15569:1:7",
														"nodeType": "YulTypedName",
														"src": "15569:1:7",
														"type": ""
													}
												],
												"src": "15529:185:7"
											},
											{
												"body": {
													"nativeSrc": "15826:71:7",
													"nodeType": "YulBlock",
													"src": "15826:71:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15848:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "15848:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15856:1:7",
																				"nodeType": "YulLiteral",
																				"src": "15856:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15844:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15844:3:7"
																		},
																		"nativeSrc": "15844:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15844:14:7"
																	},
																	{
																		"hexValue": "496e73756666696369656e74207374616b65642062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "15860:29:7",
																		"nodeType": "YulLiteral",
																		"src": "15860:29:7",
																		"type": "",
																		"value": "Insufficient staked balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15837:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15837:6:7"
																},
																"nativeSrc": "15837:53:7",
																"nodeType": "YulFunctionCall",
																"src": "15837:53:7"
															},
															"nativeSrc": "15837:53:7",
															"nodeType": "YulExpressionStatement",
															"src": "15837:53:7"
														}
													]
												},
												"name": "store_literal_in_memory_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2",
												"nativeSrc": "15720:177:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15818:6:7",
														"nodeType": "YulTypedName",
														"src": "15818:6:7",
														"type": ""
													}
												],
												"src": "15720:177:7"
											},
											{
												"body": {
													"nativeSrc": "16049:220:7",
													"nodeType": "YulBlock",
													"src": "16049:220:7",
													"statements": [
														{
															"nativeSrc": "16059:74:7",
															"nodeType": "YulAssignment",
															"src": "16059:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16125:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "16125:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16130:2:7",
																		"nodeType": "YulLiteral",
																		"src": "16130:2:7",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16066:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "16066:58:7"
																},
																"nativeSrc": "16066:67:7",
																"nodeType": "YulFunctionCall",
																"src": "16066:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16059:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16059:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16231:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "16231:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2",
																	"nativeSrc": "16142:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "16142:88:7"
																},
																"nativeSrc": "16142:93:7",
																"nodeType": "YulFunctionCall",
																"src": "16142:93:7"
															},
															"nativeSrc": "16142:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "16142:93:7"
														},
														{
															"nativeSrc": "16244:19:7",
															"nodeType": "YulAssignment",
															"src": "16244:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16255:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "16255:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16260:2:7",
																		"nodeType": "YulLiteral",
																		"src": "16260:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16251:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16251:3:7"
																},
																"nativeSrc": "16251:12:7",
																"nodeType": "YulFunctionCall",
																"src": "16251:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16244:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16244:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15903:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16037:3:7",
														"nodeType": "YulTypedName",
														"src": "16037:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16045:3:7",
														"nodeType": "YulTypedName",
														"src": "16045:3:7",
														"type": ""
													}
												],
												"src": "15903:366:7"
											},
											{
												"body": {
													"nativeSrc": "16446:248:7",
													"nodeType": "YulBlock",
													"src": "16446:248:7",
													"statements": [
														{
															"nativeSrc": "16456:26:7",
															"nodeType": "YulAssignment",
															"src": "16456:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16468:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "16468:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16479:2:7",
																		"nodeType": "YulLiteral",
																		"src": "16479:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16464:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16464:3:7"
																},
																"nativeSrc": "16464:18:7",
																"nodeType": "YulFunctionCall",
																"src": "16464:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16456:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "16456:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16503:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "16503:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16514:1:7",
																				"nodeType": "YulLiteral",
																				"src": "16514:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16499:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "16499:3:7"
																		},
																		"nativeSrc": "16499:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16499:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16522:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "16522:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16528:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "16528:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16518:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "16518:3:7"
																		},
																		"nativeSrc": "16518:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16518:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16492:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "16492:6:7"
																},
																"nativeSrc": "16492:47:7",
																"nodeType": "YulFunctionCall",
																"src": "16492:47:7"
															},
															"nativeSrc": "16492:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "16492:47:7"
														},
														{
															"nativeSrc": "16548:139:7",
															"nodeType": "YulAssignment",
															"src": "16548:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16682:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "16682:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16556:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "16556:124:7"
																},
																"nativeSrc": "16556:131:7",
																"nodeType": "YulFunctionCall",
																"src": "16556:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16548:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "16548:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16275:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16426:9:7",
														"nodeType": "YulTypedName",
														"src": "16426:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16441:4:7",
														"nodeType": "YulTypedName",
														"src": "16441:4:7",
														"type": ""
													}
												],
												"src": "16275:419:7"
											},
											{
												"body": {
													"nativeSrc": "16745:149:7",
													"nodeType": "YulBlock",
													"src": "16745:149:7",
													"statements": [
														{
															"nativeSrc": "16755:25:7",
															"nodeType": "YulAssignment",
															"src": "16755:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16778:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "16778:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16760:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "16760:17:7"
																},
																"nativeSrc": "16760:20:7",
																"nodeType": "YulFunctionCall",
																"src": "16760:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "16755:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "16755:1:7"
																}
															]
														},
														{
															"nativeSrc": "16789:25:7",
															"nodeType": "YulAssignment",
															"src": "16789:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "16812:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "16812:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16794:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "16794:17:7"
																},
																"nativeSrc": "16794:20:7",
																"nodeType": "YulFunctionCall",
																"src": "16794:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "16789:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "16789:1:7"
																}
															]
														},
														{
															"nativeSrc": "16823:17:7",
															"nodeType": "YulAssignment",
															"src": "16823:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16835:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "16835:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "16838:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "16838:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "16831:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16831:3:7"
																},
																"nativeSrc": "16831:9:7",
																"nodeType": "YulFunctionCall",
																"src": "16831:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "16823:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "16823:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16865:22:7",
																"nodeType": "YulBlock",
																"src": "16865:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "16867:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "16867:16:7"
																			},
																			"nativeSrc": "16867:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "16867:18:7"
																		},
																		"nativeSrc": "16867:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "16867:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "16856:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "16856:4:7"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "16862:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "16862:1:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "16853:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "16853:2:7"
																},
																"nativeSrc": "16853:11:7",
																"nodeType": "YulFunctionCall",
																"src": "16853:11:7"
															},
															"nativeSrc": "16850:37:7",
															"nodeType": "YulIf",
															"src": "16850:37:7"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "16700:194:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "16731:1:7",
														"nodeType": "YulTypedName",
														"src": "16731:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "16734:1:7",
														"nodeType": "YulTypedName",
														"src": "16734:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "16740:4:7",
														"nodeType": "YulTypedName",
														"src": "16740:4:7",
														"type": ""
													}
												],
												"src": "16700:194:7"
											},
											{
												"body": {
													"nativeSrc": "17026:206:7",
													"nodeType": "YulBlock",
													"src": "17026:206:7",
													"statements": [
														{
															"nativeSrc": "17036:26:7",
															"nodeType": "YulAssignment",
															"src": "17036:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17048:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "17048:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17059:2:7",
																		"nodeType": "YulLiteral",
																		"src": "17059:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17044:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "17044:3:7"
																},
																"nativeSrc": "17044:18:7",
																"nodeType": "YulFunctionCall",
																"src": "17044:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17036:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "17036:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17116:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "17116:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17129:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "17129:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17140:1:7",
																				"nodeType": "YulLiteral",
																				"src": "17140:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17125:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "17125:3:7"
																		},
																		"nativeSrc": "17125:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17125:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17072:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "17072:43:7"
																},
																"nativeSrc": "17072:71:7",
																"nodeType": "YulFunctionCall",
																"src": "17072:71:7"
															},
															"nativeSrc": "17072:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "17072:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "17197:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "17197:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17210:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "17210:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17221:2:7",
																				"nodeType": "YulLiteral",
																				"src": "17221:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17206:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "17206:3:7"
																		},
																		"nativeSrc": "17206:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17206:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17153:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "17153:43:7"
																},
																"nativeSrc": "17153:72:7",
																"nodeType": "YulFunctionCall",
																"src": "17153:72:7"
															},
															"nativeSrc": "17153:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "17153:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "16900:332:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16990:9:7",
														"nodeType": "YulTypedName",
														"src": "16990:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17002:6:7",
														"nodeType": "YulTypedName",
														"src": "17002:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17010:6:7",
														"nodeType": "YulTypedName",
														"src": "17010:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17021:4:7",
														"nodeType": "YulTypedName",
														"src": "17021:4:7",
														"type": ""
													}
												],
												"src": "16900:332:7"
											},
											{
												"body": {
													"nativeSrc": "17344:73:7",
													"nodeType": "YulBlock",
													"src": "17344:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17366:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "17366:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17374:1:7",
																				"nodeType": "YulLiteral",
																				"src": "17374:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17362:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "17362:3:7"
																		},
																		"nativeSrc": "17362:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17362:14:7"
																	},
																	{
																		"hexValue": "43616e6e6f7420656e7465722077697468207a65726f20746f6b656e73",
																		"kind": "string",
																		"nativeSrc": "17378:31:7",
																		"nodeType": "YulLiteral",
																		"src": "17378:31:7",
																		"type": "",
																		"value": "Cannot enter with zero tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17355:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "17355:6:7"
																},
																"nativeSrc": "17355:55:7",
																"nodeType": "YulFunctionCall",
																"src": "17355:55:7"
															},
															"nativeSrc": "17355:55:7",
															"nodeType": "YulExpressionStatement",
															"src": "17355:55:7"
														}
													]
												},
												"name": "store_literal_in_memory_ba93e22e59dbf680aafd2aa082c307d19b1ccf283e46ba80e768770956096b94",
												"nativeSrc": "17238:179:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17336:6:7",
														"nodeType": "YulTypedName",
														"src": "17336:6:7",
														"type": ""
													}
												],
												"src": "17238:179:7"
											},
											{
												"body": {
													"nativeSrc": "17569:220:7",
													"nodeType": "YulBlock",
													"src": "17569:220:7",
													"statements": [
														{
															"nativeSrc": "17579:74:7",
															"nodeType": "YulAssignment",
															"src": "17579:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17645:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "17645:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17650:2:7",
																		"nodeType": "YulLiteral",
																		"src": "17650:2:7",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17586:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "17586:58:7"
																},
																"nativeSrc": "17586:67:7",
																"nodeType": "YulFunctionCall",
																"src": "17586:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17579:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "17579:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17751:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "17751:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ba93e22e59dbf680aafd2aa082c307d19b1ccf283e46ba80e768770956096b94",
																	"nativeSrc": "17662:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "17662:88:7"
																},
																"nativeSrc": "17662:93:7",
																"nodeType": "YulFunctionCall",
																"src": "17662:93:7"
															},
															"nativeSrc": "17662:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "17662:93:7"
														},
														{
															"nativeSrc": "17764:19:7",
															"nodeType": "YulAssignment",
															"src": "17764:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17775:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "17775:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17780:2:7",
																		"nodeType": "YulLiteral",
																		"src": "17780:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17771:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "17771:3:7"
																},
																"nativeSrc": "17771:12:7",
																"nodeType": "YulFunctionCall",
																"src": "17771:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17764:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "17764:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ba93e22e59dbf680aafd2aa082c307d19b1ccf283e46ba80e768770956096b94_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17423:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17557:3:7",
														"nodeType": "YulTypedName",
														"src": "17557:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17565:3:7",
														"nodeType": "YulTypedName",
														"src": "17565:3:7",
														"type": ""
													}
												],
												"src": "17423:366:7"
											},
											{
												"body": {
													"nativeSrc": "17966:248:7",
													"nodeType": "YulBlock",
													"src": "17966:248:7",
													"statements": [
														{
															"nativeSrc": "17976:26:7",
															"nodeType": "YulAssignment",
															"src": "17976:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17988:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "17988:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17999:2:7",
																		"nodeType": "YulLiteral",
																		"src": "17999:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17984:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "17984:3:7"
																},
																"nativeSrc": "17984:18:7",
																"nodeType": "YulFunctionCall",
																"src": "17984:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17976:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "17976:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18023:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "18023:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18034:1:7",
																				"nodeType": "YulLiteral",
																				"src": "18034:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18019:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "18019:3:7"
																		},
																		"nativeSrc": "18019:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "18019:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18042:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "18042:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18048:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "18048:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18038:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "18038:3:7"
																		},
																		"nativeSrc": "18038:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "18038:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18012:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "18012:6:7"
																},
																"nativeSrc": "18012:47:7",
																"nodeType": "YulFunctionCall",
																"src": "18012:47:7"
															},
															"nativeSrc": "18012:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "18012:47:7"
														},
														{
															"nativeSrc": "18068:139:7",
															"nodeType": "YulAssignment",
															"src": "18068:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18202:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "18202:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ba93e22e59dbf680aafd2aa082c307d19b1ccf283e46ba80e768770956096b94_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18076:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "18076:124:7"
																},
																"nativeSrc": "18076:131:7",
																"nodeType": "YulFunctionCall",
																"src": "18076:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18068:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "18068:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ba93e22e59dbf680aafd2aa082c307d19b1ccf283e46ba80e768770956096b94__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17795:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17946:9:7",
														"nodeType": "YulTypedName",
														"src": "17946:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17961:4:7",
														"nodeType": "YulTypedName",
														"src": "17961:4:7",
														"type": ""
													}
												],
												"src": "17795:419:7"
											},
											{
												"body": {
													"nativeSrc": "18264:147:7",
													"nodeType": "YulBlock",
													"src": "18264:147:7",
													"statements": [
														{
															"nativeSrc": "18274:25:7",
															"nodeType": "YulAssignment",
															"src": "18274:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18297:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "18297:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18279:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "18279:17:7"
																},
																"nativeSrc": "18279:20:7",
																"nodeType": "YulFunctionCall",
																"src": "18279:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "18274:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "18274:1:7"
																}
															]
														},
														{
															"nativeSrc": "18308:25:7",
															"nodeType": "YulAssignment",
															"src": "18308:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "18331:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "18331:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18313:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "18313:17:7"
																},
																"nativeSrc": "18313:20:7",
																"nodeType": "YulFunctionCall",
																"src": "18313:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "18308:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "18308:1:7"
																}
															]
														},
														{
															"nativeSrc": "18342:16:7",
															"nodeType": "YulAssignment",
															"src": "18342:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18353:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "18353:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "18356:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "18356:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18349:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "18349:3:7"
																},
																"nativeSrc": "18349:9:7",
																"nodeType": "YulFunctionCall",
																"src": "18349:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "18342:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "18342:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "18382:22:7",
																"nodeType": "YulBlock",
																"src": "18382:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "18384:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "18384:16:7"
																			},
																			"nativeSrc": "18384:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "18384:18:7"
																		},
																		"nativeSrc": "18384:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "18384:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18374:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "18374:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "18377:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "18377:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "18371:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "18371:2:7"
																},
																"nativeSrc": "18371:10:7",
																"nodeType": "YulFunctionCall",
																"src": "18371:10:7"
															},
															"nativeSrc": "18368:36:7",
															"nodeType": "YulIf",
															"src": "18368:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "18220:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "18251:1:7",
														"nodeType": "YulTypedName",
														"src": "18251:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "18254:1:7",
														"nodeType": "YulTypedName",
														"src": "18254:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "18260:3:7",
														"nodeType": "YulTypedName",
														"src": "18260:3:7",
														"type": ""
													}
												],
												"src": "18220:191:7"
											},
											{
												"body": {
													"nativeSrc": "18460:190:7",
													"nodeType": "YulBlock",
													"src": "18460:190:7",
													"statements": [
														{
															"nativeSrc": "18470:33:7",
															"nodeType": "YulAssignment",
															"src": "18470:33:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18497:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "18497:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18479:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "18479:17:7"
																},
																"nativeSrc": "18479:24:7",
																"nodeType": "YulFunctionCall",
																"src": "18479:24:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "18470:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "18470:5:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "18593:22:7",
																"nodeType": "YulBlock",
																"src": "18593:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "18595:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "18595:16:7"
																			},
																			"nativeSrc": "18595:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "18595:18:7"
																		},
																		"nativeSrc": "18595:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "18595:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18518:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "18518:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18525:66:7",
																		"nodeType": "YulLiteral",
																		"src": "18525:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "18515:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "18515:2:7"
																},
																"nativeSrc": "18515:77:7",
																"nodeType": "YulFunctionCall",
																"src": "18515:77:7"
															},
															"nativeSrc": "18512:103:7",
															"nodeType": "YulIf",
															"src": "18512:103:7"
														},
														{
															"nativeSrc": "18624:20:7",
															"nodeType": "YulAssignment",
															"src": "18624:20:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18635:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "18635:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18642:1:7",
																		"nodeType": "YulLiteral",
																		"src": "18642:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18631:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "18631:3:7"
																},
																"nativeSrc": "18631:13:7",
																"nodeType": "YulFunctionCall",
																"src": "18631:13:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "18624:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "18624:3:7"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "18417:233:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18446:5:7",
														"nodeType": "YulTypedName",
														"src": "18446:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "18456:3:7",
														"nodeType": "YulTypedName",
														"src": "18456:3:7",
														"type": ""
													}
												],
												"src": "18417:233:7"
											},
											{
												"body": {
													"nativeSrc": "18710:87:7",
													"nodeType": "YulBlock",
													"src": "18710:87:7",
													"statements": [
														{
															"nativeSrc": "18720:11:7",
															"nodeType": "YulAssignment",
															"src": "18720:11:7",
															"value": {
																"name": "ptr",
																"nativeSrc": "18728:3:7",
																"nodeType": "YulIdentifier",
																"src": "18728:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "18720:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "18720:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18748:1:7",
																		"nodeType": "YulLiteral",
																		"src": "18748:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "18751:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "18751:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18741:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "18741:6:7"
																},
																"nativeSrc": "18741:14:7",
																"nodeType": "YulFunctionCall",
																"src": "18741:14:7"
															},
															"nativeSrc": "18741:14:7",
															"nodeType": "YulExpressionStatement",
															"src": "18741:14:7"
														},
														{
															"nativeSrc": "18764:26:7",
															"nodeType": "YulAssignment",
															"src": "18764:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18782:1:7",
																		"nodeType": "YulLiteral",
																		"src": "18782:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18785:4:7",
																		"nodeType": "YulLiteral",
																		"src": "18785:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "18772:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "18772:9:7"
																},
																"nativeSrc": "18772:18:7",
																"nodeType": "YulFunctionCall",
																"src": "18772:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "18764:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "18764:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "18656:141:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "18697:3:7",
														"nodeType": "YulTypedName",
														"src": "18697:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "18705:4:7",
														"nodeType": "YulTypedName",
														"src": "18705:4:7",
														"type": ""
													}
												],
												"src": "18656:141:7"
											},
											{
												"body": {
													"nativeSrc": "18847:49:7",
													"nodeType": "YulBlock",
													"src": "18847:49:7",
													"statements": [
														{
															"nativeSrc": "18857:33:7",
															"nodeType": "YulAssignment",
															"src": "18857:33:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "18875:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "18875:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18882:2:7",
																				"nodeType": "YulLiteral",
																				"src": "18882:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18871:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "18871:3:7"
																		},
																		"nativeSrc": "18871:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "18871:14:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18887:2:7",
																		"nodeType": "YulLiteral",
																		"src": "18887:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "18867:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "18867:3:7"
																},
																"nativeSrc": "18867:23:7",
																"nodeType": "YulFunctionCall",
																"src": "18867:23:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "18857:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "18857:6:7"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "18803:93:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18830:5:7",
														"nodeType": "YulTypedName",
														"src": "18830:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "18840:6:7",
														"nodeType": "YulTypedName",
														"src": "18840:6:7",
														"type": ""
													}
												],
												"src": "18803:93:7"
											},
											{
												"body": {
													"nativeSrc": "18955:54:7",
													"nodeType": "YulBlock",
													"src": "18955:54:7",
													"statements": [
														{
															"nativeSrc": "18965:37:7",
															"nodeType": "YulAssignment",
															"src": "18965:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "18990:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "18990:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "18996:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "18996:5:7"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "18986:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "18986:3:7"
																},
																"nativeSrc": "18986:16:7",
																"nodeType": "YulFunctionCall",
																"src": "18986:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "18965:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "18965:8:7"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "18902:107:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "18930:4:7",
														"nodeType": "YulTypedName",
														"src": "18930:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "18936:5:7",
														"nodeType": "YulTypedName",
														"src": "18936:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "18946:8:7",
														"nodeType": "YulTypedName",
														"src": "18946:8:7",
														"type": ""
													}
												],
												"src": "18902:107:7"
											},
											{
												"body": {
													"nativeSrc": "19091:317:7",
													"nodeType": "YulBlock",
													"src": "19091:317:7",
													"statements": [
														{
															"nativeSrc": "19101:35:7",
															"nodeType": "YulVariableDeclaration",
															"src": "19101:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "19122:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "19122:10:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19134:1:7",
																		"nodeType": "YulLiteral",
																		"src": "19134:1:7",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "19118:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "19118:3:7"
																},
																"nativeSrc": "19118:18:7",
																"nodeType": "YulFunctionCall",
																"src": "19118:18:7"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "19105:9:7",
																	"nodeType": "YulTypedName",
																	"src": "19105:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "19145:109:7",
															"nodeType": "YulVariableDeclaration",
															"src": "19145:109:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "19176:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "19176:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19187:66:7",
																		"nodeType": "YulLiteral",
																		"src": "19187:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "19157:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "19157:18:7"
																},
																"nativeSrc": "19157:97:7",
																"nodeType": "YulFunctionCall",
																"src": "19157:97:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "19149:4:7",
																	"nodeType": "YulTypedName",
																	"src": "19149:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "19263:51:7",
															"nodeType": "YulAssignment",
															"src": "19263:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "19294:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "19294:9:7"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "19305:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "19305:8:7"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "19275:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "19275:18:7"
																},
																"nativeSrc": "19275:39:7",
																"nodeType": "YulFunctionCall",
																"src": "19275:39:7"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "19263:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "19263:8:7"
																}
															]
														},
														{
															"nativeSrc": "19323:30:7",
															"nodeType": "YulAssignment",
															"src": "19323:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "19336:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "19336:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "19347:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "19347:4:7"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "19343:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "19343:3:7"
																		},
																		"nativeSrc": "19343:9:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19343:9:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "19332:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "19332:3:7"
																},
																"nativeSrc": "19332:21:7",
																"nodeType": "YulFunctionCall",
																"src": "19332:21:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "19323:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "19323:5:7"
																}
															]
														},
														{
															"nativeSrc": "19362:40:7",
															"nodeType": "YulAssignment",
															"src": "19362:40:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "19375:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "19375:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "19386:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "19386:8:7"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "19396:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "19396:4:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "19382:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "19382:3:7"
																		},
																		"nativeSrc": "19382:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19382:19:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "19372:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "19372:2:7"
																},
																"nativeSrc": "19372:30:7",
																"nodeType": "YulFunctionCall",
																"src": "19372:30:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "19362:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "19362:6:7"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "19015:393:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19052:5:7",
														"nodeType": "YulTypedName",
														"src": "19052:5:7",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "19059:10:7",
														"nodeType": "YulTypedName",
														"src": "19059:10:7",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "19071:8:7",
														"nodeType": "YulTypedName",
														"src": "19071:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "19084:6:7",
														"nodeType": "YulTypedName",
														"src": "19084:6:7",
														"type": ""
													}
												],
												"src": "19015:393:7"
											},
											{
												"body": {
													"nativeSrc": "19446:28:7",
													"nodeType": "YulBlock",
													"src": "19446:28:7",
													"statements": [
														{
															"nativeSrc": "19456:12:7",
															"nodeType": "YulAssignment",
															"src": "19456:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "19463:5:7",
																"nodeType": "YulIdentifier",
																"src": "19463:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "19456:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "19456:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "19414:60:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19432:5:7",
														"nodeType": "YulTypedName",
														"src": "19432:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "19442:3:7",
														"nodeType": "YulTypedName",
														"src": "19442:3:7",
														"type": ""
													}
												],
												"src": "19414:60:7"
											},
											{
												"body": {
													"nativeSrc": "19540:82:7",
													"nodeType": "YulBlock",
													"src": "19540:82:7",
													"statements": [
														{
															"nativeSrc": "19550:66:7",
															"nodeType": "YulAssignment",
															"src": "19550:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "19608:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "19608:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "19590:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "19590:17:7"
																				},
																				"nativeSrc": "19590:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "19590:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "19581:8:7",
																			"nodeType": "YulIdentifier",
																			"src": "19581:8:7"
																		},
																		"nativeSrc": "19581:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19581:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "19563:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "19563:17:7"
																},
																"nativeSrc": "19563:53:7",
																"nodeType": "YulFunctionCall",
																"src": "19563:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "19550:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "19550:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "19480:142:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19520:5:7",
														"nodeType": "YulTypedName",
														"src": "19520:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "19530:9:7",
														"nodeType": "YulTypedName",
														"src": "19530:9:7",
														"type": ""
													}
												],
												"src": "19480:142:7"
											},
											{
												"body": {
													"nativeSrc": "19675:28:7",
													"nodeType": "YulBlock",
													"src": "19675:28:7",
													"statements": [
														{
															"nativeSrc": "19685:12:7",
															"nodeType": "YulAssignment",
															"src": "19685:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "19692:5:7",
																"nodeType": "YulIdentifier",
																"src": "19692:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "19685:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "19685:3:7"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "19628:75:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19661:5:7",
														"nodeType": "YulTypedName",
														"src": "19661:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "19671:3:7",
														"nodeType": "YulTypedName",
														"src": "19671:3:7",
														"type": ""
													}
												],
												"src": "19628:75:7"
											},
											{
												"body": {
													"nativeSrc": "19785:193:7",
													"nodeType": "YulBlock",
													"src": "19785:193:7",
													"statements": [
														{
															"nativeSrc": "19795:63:7",
															"nodeType": "YulVariableDeclaration",
															"src": "19795:63:7",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "19850:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "19850:7:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "19819:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "19819:30:7"
																},
																"nativeSrc": "19819:39:7",
																"nodeType": "YulFunctionCall",
																"src": "19819:39:7"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "19799:16:7",
																	"nodeType": "YulTypedName",
																	"src": "19799:16:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "19874:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "19874:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "19914:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "19914:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "19908:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "19908:5:7"
																				},
																				"nativeSrc": "19908:11:7",
																				"nodeType": "YulFunctionCall",
																				"src": "19908:11:7"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "19921:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "19921:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "19953:16:7",
																						"nodeType": "YulIdentifier",
																						"src": "19953:16:7"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "19929:23:7",
																					"nodeType": "YulIdentifier",
																					"src": "19929:23:7"
																				},
																				"nativeSrc": "19929:41:7",
																				"nodeType": "YulFunctionCall",
																				"src": "19929:41:7"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "19880:27:7",
																			"nodeType": "YulIdentifier",
																			"src": "19880:27:7"
																		},
																		"nativeSrc": "19880:91:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19880:91:7"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "19867:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "19867:6:7"
																},
																"nativeSrc": "19867:105:7",
																"nodeType": "YulFunctionCall",
																"src": "19867:105:7"
															},
															"nativeSrc": "19867:105:7",
															"nodeType": "YulExpressionStatement",
															"src": "19867:105:7"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "19709:269:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "19762:4:7",
														"nodeType": "YulTypedName",
														"src": "19762:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "19768:6:7",
														"nodeType": "YulTypedName",
														"src": "19768:6:7",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "19776:7:7",
														"nodeType": "YulTypedName",
														"src": "19776:7:7",
														"type": ""
													}
												],
												"src": "19709:269:7"
											},
											{
												"body": {
													"nativeSrc": "20033:24:7",
													"nodeType": "YulBlock",
													"src": "20033:24:7",
													"statements": [
														{
															"nativeSrc": "20043:8:7",
															"nodeType": "YulAssignment",
															"src": "20043:8:7",
															"value": {
																"kind": "number",
																"nativeSrc": "20050:1:7",
																"nodeType": "YulLiteral",
																"src": "20050:1:7",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "20043:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "20043:3:7"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "19984:73:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "20029:3:7",
														"nodeType": "YulTypedName",
														"src": "20029:3:7",
														"type": ""
													}
												],
												"src": "19984:73:7"
											},
											{
												"body": {
													"nativeSrc": "20116:136:7",
													"nodeType": "YulBlock",
													"src": "20116:136:7",
													"statements": [
														{
															"nativeSrc": "20126:46:7",
															"nodeType": "YulVariableDeclaration",
															"src": "20126:46:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "20140:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "20140:30:7"
																},
																"nativeSrc": "20140:32:7",
																"nodeType": "YulFunctionCall",
																"src": "20140:32:7"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "20130:6:7",
																	"nodeType": "YulTypedName",
																	"src": "20130:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "20225:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "20225:4:7"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "20231:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "20231:6:7"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "20239:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "20239:6:7"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "20181:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "20181:43:7"
																},
																"nativeSrc": "20181:65:7",
																"nodeType": "YulFunctionCall",
																"src": "20181:65:7"
															},
															"nativeSrc": "20181:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "20181:65:7"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "20063:189:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "20102:4:7",
														"nodeType": "YulTypedName",
														"src": "20102:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "20108:6:7",
														"nodeType": "YulTypedName",
														"src": "20108:6:7",
														"type": ""
													}
												],
												"src": "20063:189:7"
											},
											{
												"body": {
													"nativeSrc": "20308:136:7",
													"nodeType": "YulBlock",
													"src": "20308:136:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "20375:63:7",
																"nodeType": "YulBlock",
																"src": "20375:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "20419:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "20419:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "20426:1:7",
																					"nodeType": "YulLiteral",
																					"src": "20426:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "20389:29:7",
																				"nodeType": "YulIdentifier",
																				"src": "20389:29:7"
																			},
																			"nativeSrc": "20389:39:7",
																			"nodeType": "YulFunctionCall",
																			"src": "20389:39:7"
																		},
																		"nativeSrc": "20389:39:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "20389:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "20328:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "20328:5:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "20335:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "20335:3:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "20325:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "20325:2:7"
																},
																"nativeSrc": "20325:14:7",
																"nodeType": "YulFunctionCall",
																"src": "20325:14:7"
															},
															"nativeSrc": "20318:120:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "20340:26:7",
																"nodeType": "YulBlock",
																"src": "20340:26:7",
																"statements": [
																	{
																		"nativeSrc": "20342:22:7",
																		"nodeType": "YulAssignment",
																		"src": "20342:22:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "20355:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "20355:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "20362:1:7",
																					"nodeType": "YulLiteral",
																					"src": "20362:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "20351:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "20351:3:7"
																			},
																			"nativeSrc": "20351:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "20351:13:7"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "20342:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "20342:5:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "20322:2:7",
																"nodeType": "YulBlock",
																"src": "20322:2:7",
																"statements": []
															},
															"src": "20318:120:7"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "20258:186:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "20296:5:7",
														"nodeType": "YulTypedName",
														"src": "20296:5:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "20303:3:7",
														"nodeType": "YulTypedName",
														"src": "20303:3:7",
														"type": ""
													}
												],
												"src": "20258:186:7"
											},
											{
												"body": {
													"nativeSrc": "20529:464:7",
													"nodeType": "YulBlock",
													"src": "20529:464:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "20555:431:7",
																"nodeType": "YulBlock",
																"src": "20555:431:7",
																"statements": [
																	{
																		"nativeSrc": "20569:54:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "20569:54:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "20617:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "20617:5:7"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "20585:31:7",
																				"nodeType": "YulIdentifier",
																				"src": "20585:31:7"
																			},
																			"nativeSrc": "20585:38:7",
																			"nodeType": "YulFunctionCall",
																			"src": "20585:38:7"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "20573:8:7",
																				"nodeType": "YulTypedName",
																				"src": "20573:8:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "20636:63:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "20636:63:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "20659:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "20659:8:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "20687:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "20687:10:7"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "20669:17:7",
																						"nodeType": "YulIdentifier",
																						"src": "20669:17:7"
																					},
																					"nativeSrc": "20669:29:7",
																					"nodeType": "YulFunctionCall",
																					"src": "20669:29:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "20655:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "20655:3:7"
																			},
																			"nativeSrc": "20655:44:7",
																			"nodeType": "YulFunctionCall",
																			"src": "20655:44:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "20640:11:7",
																				"nodeType": "YulTypedName",
																				"src": "20640:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "20856:27:7",
																			"nodeType": "YulBlock",
																			"src": "20856:27:7",
																			"statements": [
																				{
																					"nativeSrc": "20858:23:7",
																					"nodeType": "YulAssignment",
																					"src": "20858:23:7",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "20873:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "20873:8:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "20858:11:7",
																							"nodeType": "YulIdentifier",
																							"src": "20858:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "20840:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "20840:10:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "20852:2:7",
																					"nodeType": "YulLiteral",
																					"src": "20852:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "20837:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "20837:2:7"
																			},
																			"nativeSrc": "20837:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "20837:18:7"
																		},
																		"nativeSrc": "20834:49:7",
																		"nodeType": "YulIf",
																		"src": "20834:49:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "20925:11:7",
																					"nodeType": "YulIdentifier",
																					"src": "20925:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "20942:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "20942:8:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "20970:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "20970:3:7"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "20952:17:7",
																								"nodeType": "YulIdentifier",
																								"src": "20952:17:7"
																							},
																							"nativeSrc": "20952:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "20952:22:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "20938:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "20938:3:7"
																					},
																					"nativeSrc": "20938:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "20938:37:7"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "20896:28:7",
																				"nodeType": "YulIdentifier",
																				"src": "20896:28:7"
																			},
																			"nativeSrc": "20896:80:7",
																			"nodeType": "YulFunctionCall",
																			"src": "20896:80:7"
																		},
																		"nativeSrc": "20896:80:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "20896:80:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "20546:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "20546:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20551:2:7",
																		"nodeType": "YulLiteral",
																		"src": "20551:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "20543:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "20543:2:7"
																},
																"nativeSrc": "20543:11:7",
																"nodeType": "YulFunctionCall",
																"src": "20543:11:7"
															},
															"nativeSrc": "20540:446:7",
															"nodeType": "YulIf",
															"src": "20540:446:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "20450:543:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "20505:5:7",
														"nodeType": "YulTypedName",
														"src": "20505:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "20512:3:7",
														"nodeType": "YulTypedName",
														"src": "20512:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "20517:10:7",
														"nodeType": "YulTypedName",
														"src": "20517:10:7",
														"type": ""
													}
												],
												"src": "20450:543:7"
											},
											{
												"body": {
													"nativeSrc": "21062:54:7",
													"nodeType": "YulBlock",
													"src": "21062:54:7",
													"statements": [
														{
															"nativeSrc": "21072:37:7",
															"nodeType": "YulAssignment",
															"src": "21072:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "21097:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "21097:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "21103:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "21103:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "21093:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "21093:3:7"
																},
																"nativeSrc": "21093:16:7",
																"nodeType": "YulFunctionCall",
																"src": "21093:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "21072:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "21072:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "20999:117:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "21037:4:7",
														"nodeType": "YulTypedName",
														"src": "21037:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "21043:5:7",
														"nodeType": "YulTypedName",
														"src": "21043:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "21053:8:7",
														"nodeType": "YulTypedName",
														"src": "21053:8:7",
														"type": ""
													}
												],
												"src": "20999:117:7"
											},
											{
												"body": {
													"nativeSrc": "21173:118:7",
													"nodeType": "YulBlock",
													"src": "21173:118:7",
													"statements": [
														{
															"nativeSrc": "21183:68:7",
															"nodeType": "YulVariableDeclaration",
															"src": "21183:68:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "21232:1:7",
																						"nodeType": "YulLiteral",
																						"src": "21232:1:7",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "21235:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "21235:5:7"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "21228:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "21228:3:7"
																				},
																				"nativeSrc": "21228:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "21228:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "21247:1:7",
																						"nodeType": "YulLiteral",
																						"src": "21247:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "21243:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "21243:3:7"
																				},
																				"nativeSrc": "21243:6:7",
																				"nodeType": "YulFunctionCall",
																				"src": "21243:6:7"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "21199:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "21199:28:7"
																		},
																		"nativeSrc": "21199:51:7",
																		"nodeType": "YulFunctionCall",
																		"src": "21199:51:7"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "21195:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "21195:3:7"
																},
																"nativeSrc": "21195:56:7",
																"nodeType": "YulFunctionCall",
																"src": "21195:56:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "21187:4:7",
																	"nodeType": "YulTypedName",
																	"src": "21187:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "21260:25:7",
															"nodeType": "YulAssignment",
															"src": "21260:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "21274:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "21274:4:7"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "21280:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "21280:4:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "21270:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "21270:3:7"
																},
																"nativeSrc": "21270:15:7",
																"nodeType": "YulFunctionCall",
																"src": "21270:15:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "21260:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "21260:6:7"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "21122:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "21150:4:7",
														"nodeType": "YulTypedName",
														"src": "21150:4:7",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "21156:5:7",
														"nodeType": "YulTypedName",
														"src": "21156:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "21166:6:7",
														"nodeType": "YulTypedName",
														"src": "21166:6:7",
														"type": ""
													}
												],
												"src": "21122:169:7"
											},
											{
												"body": {
													"nativeSrc": "21377:214:7",
													"nodeType": "YulBlock",
													"src": "21377:214:7",
													"statements": [
														{
															"nativeSrc": "21510:37:7",
															"nodeType": "YulAssignment",
															"src": "21510:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "21537:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "21537:4:7"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "21543:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "21543:3:7"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "21518:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "21518:18:7"
																},
																"nativeSrc": "21518:29:7",
																"nodeType": "YulFunctionCall",
																"src": "21518:29:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "21510:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "21510:4:7"
																}
															]
														},
														{
															"nativeSrc": "21556:29:7",
															"nodeType": "YulAssignment",
															"src": "21556:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "21567:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "21567:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "21577:1:7",
																				"nodeType": "YulLiteral",
																				"src": "21577:1:7",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "21580:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "21580:3:7"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "21573:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "21573:3:7"
																		},
																		"nativeSrc": "21573:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "21573:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "21564:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "21564:2:7"
																},
																"nativeSrc": "21564:21:7",
																"nodeType": "YulFunctionCall",
																"src": "21564:21:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "21556:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "21556:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "21296:295:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "21358:4:7",
														"nodeType": "YulTypedName",
														"src": "21358:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "21364:3:7",
														"nodeType": "YulTypedName",
														"src": "21364:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "21372:4:7",
														"nodeType": "YulTypedName",
														"src": "21372:4:7",
														"type": ""
													}
												],
												"src": "21296:295:7"
											},
											{
												"body": {
													"nativeSrc": "21688:1303:7",
													"nodeType": "YulBlock",
													"src": "21688:1303:7",
													"statements": [
														{
															"nativeSrc": "21699:51:7",
															"nodeType": "YulVariableDeclaration",
															"src": "21699:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "21746:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "21746:3:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "21713:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "21713:32:7"
																},
																"nativeSrc": "21713:37:7",
																"nodeType": "YulFunctionCall",
																"src": "21713:37:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "21703:6:7",
																	"nodeType": "YulTypedName",
																	"src": "21703:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "21835:22:7",
																"nodeType": "YulBlock",
																"src": "21835:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "21837:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "21837:16:7"
																			},
																			"nativeSrc": "21837:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "21837:18:7"
																		},
																		"nativeSrc": "21837:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "21837:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "21807:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "21807:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21815:18:7",
																		"nodeType": "YulLiteral",
																		"src": "21815:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "21804:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "21804:2:7"
																},
																"nativeSrc": "21804:30:7",
																"nodeType": "YulFunctionCall",
																"src": "21804:30:7"
															},
															"nativeSrc": "21801:56:7",
															"nodeType": "YulIf",
															"src": "21801:56:7"
														},
														{
															"nativeSrc": "21867:52:7",
															"nodeType": "YulVariableDeclaration",
															"src": "21867:52:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "21913:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "21913:4:7"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "21907:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "21907:5:7"
																		},
																		"nativeSrc": "21907:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "21907:11:7"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "21881:25:7",
																	"nodeType": "YulIdentifier",
																	"src": "21881:25:7"
																},
																"nativeSrc": "21881:38:7",
																"nodeType": "YulFunctionCall",
																"src": "21881:38:7"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "21871:6:7",
																	"nodeType": "YulTypedName",
																	"src": "21871:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "22012:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "22012:4:7"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "22018:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "22018:6:7"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "22026:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "22026:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "21966:45:7",
																	"nodeType": "YulIdentifier",
																	"src": "21966:45:7"
																},
																"nativeSrc": "21966:67:7",
																"nodeType": "YulFunctionCall",
																"src": "21966:67:7"
															},
															"nativeSrc": "21966:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "21966:67:7"
														},
														{
															"nativeSrc": "22043:18:7",
															"nodeType": "YulVariableDeclaration",
															"src": "22043:18:7",
															"value": {
																"kind": "number",
																"nativeSrc": "22060:1:7",
																"nodeType": "YulLiteral",
																"src": "22060:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "22047:9:7",
																	"nodeType": "YulTypedName",
																	"src": "22047:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "22071:17:7",
															"nodeType": "YulAssignment",
															"src": "22071:17:7",
															"value": {
																"kind": "number",
																"nativeSrc": "22084:4:7",
																"nodeType": "YulLiteral",
																"src": "22084:4:7",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "22071:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "22071:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "22135:611:7",
																		"nodeType": "YulBlock",
																		"src": "22135:611:7",
																		"statements": [
																			{
																				"nativeSrc": "22149:37:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "22149:37:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "22168:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "22168:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "22180:4:7",
																									"nodeType": "YulLiteral",
																									"src": "22180:4:7",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "22176:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "22176:3:7"
																							},
																							"nativeSrc": "22176:9:7",
																							"nodeType": "YulFunctionCall",
																							"src": "22176:9:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "22164:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "22164:3:7"
																					},
																					"nativeSrc": "22164:22:7",
																					"nodeType": "YulFunctionCall",
																					"src": "22164:22:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "22153:7:7",
																						"nodeType": "YulTypedName",
																						"src": "22153:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "22200:51:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "22200:51:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "22246:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "22246:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "22214:31:7",
																						"nodeType": "YulIdentifier",
																						"src": "22214:31:7"
																					},
																					"nativeSrc": "22214:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "22214:37:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "22204:6:7",
																						"nodeType": "YulTypedName",
																						"src": "22204:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "22264:10:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "22264:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "22273:1:7",
																					"nodeType": "YulLiteral",
																					"src": "22273:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "22268:1:7",
																						"nodeType": "YulTypedName",
																						"src": "22268:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "22332:163:7",
																					"nodeType": "YulBlock",
																					"src": "22332:163:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "22357:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "22357:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "22375:3:7",
																														"nodeType": "YulIdentifier",
																														"src": "22375:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "22380:9:7",
																														"nodeType": "YulIdentifier",
																														"src": "22380:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "22371:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "22371:3:7"
																												},
																												"nativeSrc": "22371:19:7",
																												"nodeType": "YulFunctionCall",
																												"src": "22371:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "22365:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "22365:5:7"
																										},
																										"nativeSrc": "22365:26:7",
																										"nodeType": "YulFunctionCall",
																										"src": "22365:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "22350:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "22350:6:7"
																								},
																								"nativeSrc": "22350:42:7",
																								"nodeType": "YulFunctionCall",
																								"src": "22350:42:7"
																							},
																							"nativeSrc": "22350:42:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "22350:42:7"
																						},
																						{
																							"nativeSrc": "22409:24:7",
																							"nodeType": "YulAssignment",
																							"src": "22409:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "22423:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "22423:6:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "22431:1:7",
																										"nodeType": "YulLiteral",
																										"src": "22431:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "22419:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "22419:3:7"
																								},
																								"nativeSrc": "22419:14:7",
																								"nodeType": "YulFunctionCall",
																								"src": "22419:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "22409:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "22409:6:7"
																								}
																							]
																						},
																						{
																							"nativeSrc": "22450:31:7",
																							"nodeType": "YulAssignment",
																							"src": "22450:31:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "22467:9:7",
																										"nodeType": "YulIdentifier",
																										"src": "22467:9:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "22478:2:7",
																										"nodeType": "YulLiteral",
																										"src": "22478:2:7",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "22463:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "22463:3:7"
																								},
																								"nativeSrc": "22463:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "22463:18:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "22450:9:7",
																									"nodeType": "YulIdentifier",
																									"src": "22450:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "22298:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "22298:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "22301:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "22301:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "22295:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "22295:2:7"
																					},
																					"nativeSrc": "22295:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "22295:14:7"
																				},
																				"nativeSrc": "22287:208:7",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "22310:21:7",
																					"nodeType": "YulBlock",
																					"src": "22310:21:7",
																					"statements": [
																						{
																							"nativeSrc": "22312:17:7",
																							"nodeType": "YulAssignment",
																							"src": "22312:17:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "22321:1:7",
																										"nodeType": "YulIdentifier",
																										"src": "22321:1:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "22324:4:7",
																										"nodeType": "YulLiteral",
																										"src": "22324:4:7",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "22317:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "22317:3:7"
																								},
																								"nativeSrc": "22317:12:7",
																								"nodeType": "YulFunctionCall",
																								"src": "22317:12:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "22312:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "22312:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "22291:3:7",
																					"nodeType": "YulBlock",
																					"src": "22291:3:7",
																					"statements": []
																				},
																				"src": "22287:208:7"
																			},
																			{
																				"body": {
																					"nativeSrc": "22531:156:7",
																					"nodeType": "YulBlock",
																					"src": "22531:156:7",
																					"statements": [
																						{
																							"nativeSrc": "22549:43:7",
																							"nodeType": "YulVariableDeclaration",
																							"src": "22549:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "22576:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "22576:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "22581:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "22581:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "22572:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "22572:3:7"
																										},
																										"nativeSrc": "22572:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "22572:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "22566:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "22566:5:7"
																								},
																								"nativeSrc": "22566:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "22566:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "22553:9:7",
																									"nodeType": "YulTypedName",
																									"src": "22553:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "22616:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "22616:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "22643:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "22643:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "22658:6:7",
																														"nodeType": "YulIdentifier",
																														"src": "22658:6:7"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "22666:4:7",
																														"nodeType": "YulLiteral",
																														"src": "22666:4:7",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "22654:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "22654:3:7"
																												},
																												"nativeSrc": "22654:17:7",
																												"nodeType": "YulFunctionCall",
																												"src": "22654:17:7"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "22624:18:7",
																											"nodeType": "YulIdentifier",
																											"src": "22624:18:7"
																										},
																										"nativeSrc": "22624:48:7",
																										"nodeType": "YulFunctionCall",
																										"src": "22624:48:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "22609:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "22609:6:7"
																								},
																								"nativeSrc": "22609:64:7",
																								"nodeType": "YulFunctionCall",
																								"src": "22609:64:7"
																							},
																							"nativeSrc": "22609:64:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "22609:64:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "22514:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "22514:7:7"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "22523:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "22523:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "22511:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "22511:2:7"
																					},
																					"nativeSrc": "22511:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "22511:19:7"
																				},
																				"nativeSrc": "22508:179:7",
																				"nodeType": "YulIf",
																				"src": "22508:179:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "22707:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "22707:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "22721:6:7",
																											"nodeType": "YulIdentifier",
																											"src": "22721:6:7"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "22729:1:7",
																											"nodeType": "YulLiteral",
																											"src": "22729:1:7",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "22717:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "22717:3:7"
																									},
																									"nativeSrc": "22717:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "22717:14:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "22733:1:7",
																									"nodeType": "YulLiteral",
																									"src": "22733:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "22713:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "22713:3:7"
																							},
																							"nativeSrc": "22713:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "22713:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "22700:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "22700:6:7"
																					},
																					"nativeSrc": "22700:36:7",
																					"nodeType": "YulFunctionCall",
																					"src": "22700:36:7"
																				},
																				"nativeSrc": "22700:36:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "22700:36:7"
																			}
																		]
																	},
																	"nativeSrc": "22128:618:7",
																	"nodeType": "YulCase",
																	"src": "22128:618:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "22133:1:7",
																		"nodeType": "YulLiteral",
																		"src": "22133:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "22763:222:7",
																		"nodeType": "YulBlock",
																		"src": "22763:222:7",
																		"statements": [
																			{
																				"nativeSrc": "22777:14:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "22777:14:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "22790:1:7",
																					"nodeType": "YulLiteral",
																					"src": "22790:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "22781:5:7",
																						"nodeType": "YulTypedName",
																						"src": "22781:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "22814:67:7",
																					"nodeType": "YulBlock",
																					"src": "22814:67:7",
																					"statements": [
																						{
																							"nativeSrc": "22832:35:7",
																							"nodeType": "YulAssignment",
																							"src": "22832:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "22851:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "22851:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "22856:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "22856:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "22847:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "22847:3:7"
																										},
																										"nativeSrc": "22847:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "22847:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "22841:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "22841:5:7"
																								},
																								"nativeSrc": "22841:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "22841:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "22832:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "22832:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "22807:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "22807:6:7"
																				},
																				"nativeSrc": "22804:77:7",
																				"nodeType": "YulIf",
																				"src": "22804:77:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "22901:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "22901:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "22960:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "22960:5:7"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "22967:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "22967:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "22907:52:7",
																								"nodeType": "YulIdentifier",
																								"src": "22907:52:7"
																							},
																							"nativeSrc": "22907:67:7",
																							"nodeType": "YulFunctionCall",
																							"src": "22907:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "22894:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "22894:6:7"
																					},
																					"nativeSrc": "22894:81:7",
																					"nodeType": "YulFunctionCall",
																					"src": "22894:81:7"
																				},
																				"nativeSrc": "22894:81:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "22894:81:7"
																			}
																		]
																	},
																	"nativeSrc": "22755:230:7",
																	"nodeType": "YulCase",
																	"src": "22755:230:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "22108:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "22108:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22116:2:7",
																		"nodeType": "YulLiteral",
																		"src": "22116:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "22105:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "22105:2:7"
																},
																"nativeSrc": "22105:14:7",
																"nodeType": "YulFunctionCall",
																"src": "22105:14:7"
															},
															"nativeSrc": "22098:887:7",
															"nodeType": "YulSwitch",
															"src": "22098:887:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "21596:1395:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "21677:4:7",
														"nodeType": "YulTypedName",
														"src": "21677:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "21683:3:7",
														"nodeType": "YulTypedName",
														"src": "21683:3:7",
														"type": ""
													}
												],
												"src": "21596:1395:7"
											},
											{
												"body": {
													"nativeSrc": "23103:74:7",
													"nodeType": "YulBlock",
													"src": "23103:74:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "23125:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "23125:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23133:1:7",
																				"nodeType": "YulLiteral",
																				"src": "23133:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23121:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "23121:3:7"
																		},
																		"nativeSrc": "23121:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "23121:14:7"
																	},
																	{
																		"hexValue": "4e6f207061727469636970616e747320696e20746865206c6f7474657279",
																		"kind": "string",
																		"nativeSrc": "23137:32:7",
																		"nodeType": "YulLiteral",
																		"src": "23137:32:7",
																		"type": "",
																		"value": "No participants in the lottery"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23114:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "23114:6:7"
																},
																"nativeSrc": "23114:56:7",
																"nodeType": "YulFunctionCall",
																"src": "23114:56:7"
															},
															"nativeSrc": "23114:56:7",
															"nodeType": "YulExpressionStatement",
															"src": "23114:56:7"
														}
													]
												},
												"name": "store_literal_in_memory_9134d835a173bd374f6a11e1d53fa96984ec9491b867df78baeca4c974ae9b31",
												"nativeSrc": "22997:180:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "23095:6:7",
														"nodeType": "YulTypedName",
														"src": "23095:6:7",
														"type": ""
													}
												],
												"src": "22997:180:7"
											},
											{
												"body": {
													"nativeSrc": "23329:220:7",
													"nodeType": "YulBlock",
													"src": "23329:220:7",
													"statements": [
														{
															"nativeSrc": "23339:74:7",
															"nodeType": "YulAssignment",
															"src": "23339:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23405:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "23405:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23410:2:7",
																		"nodeType": "YulLiteral",
																		"src": "23410:2:7",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "23346:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "23346:58:7"
																},
																"nativeSrc": "23346:67:7",
																"nodeType": "YulFunctionCall",
																"src": "23346:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "23339:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "23339:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23511:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "23511:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9134d835a173bd374f6a11e1d53fa96984ec9491b867df78baeca4c974ae9b31",
																	"nativeSrc": "23422:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "23422:88:7"
																},
																"nativeSrc": "23422:93:7",
																"nodeType": "YulFunctionCall",
																"src": "23422:93:7"
															},
															"nativeSrc": "23422:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "23422:93:7"
														},
														{
															"nativeSrc": "23524:19:7",
															"nodeType": "YulAssignment",
															"src": "23524:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23535:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "23535:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23540:2:7",
																		"nodeType": "YulLiteral",
																		"src": "23540:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23531:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "23531:3:7"
																},
																"nativeSrc": "23531:12:7",
																"nodeType": "YulFunctionCall",
																"src": "23531:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "23524:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "23524:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9134d835a173bd374f6a11e1d53fa96984ec9491b867df78baeca4c974ae9b31_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "23183:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "23317:3:7",
														"nodeType": "YulTypedName",
														"src": "23317:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "23325:3:7",
														"nodeType": "YulTypedName",
														"src": "23325:3:7",
														"type": ""
													}
												],
												"src": "23183:366:7"
											},
											{
												"body": {
													"nativeSrc": "23726:248:7",
													"nodeType": "YulBlock",
													"src": "23726:248:7",
													"statements": [
														{
															"nativeSrc": "23736:26:7",
															"nodeType": "YulAssignment",
															"src": "23736:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23748:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "23748:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23759:2:7",
																		"nodeType": "YulLiteral",
																		"src": "23759:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23744:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "23744:3:7"
																},
																"nativeSrc": "23744:18:7",
																"nodeType": "YulFunctionCall",
																"src": "23744:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23736:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "23736:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23783:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "23783:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23794:1:7",
																				"nodeType": "YulLiteral",
																				"src": "23794:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23779:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "23779:3:7"
																		},
																		"nativeSrc": "23779:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "23779:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "23802:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "23802:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "23808:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "23808:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "23798:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "23798:3:7"
																		},
																		"nativeSrc": "23798:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "23798:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23772:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "23772:6:7"
																},
																"nativeSrc": "23772:47:7",
																"nodeType": "YulFunctionCall",
																"src": "23772:47:7"
															},
															"nativeSrc": "23772:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "23772:47:7"
														},
														{
															"nativeSrc": "23828:139:7",
															"nodeType": "YulAssignment",
															"src": "23828:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "23962:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "23962:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9134d835a173bd374f6a11e1d53fa96984ec9491b867df78baeca4c974ae9b31_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "23836:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "23836:124:7"
																},
																"nativeSrc": "23836:131:7",
																"nodeType": "YulFunctionCall",
																"src": "23836:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23828:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "23828:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9134d835a173bd374f6a11e1d53fa96984ec9491b867df78baeca4c974ae9b31__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "23555:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23706:9:7",
														"nodeType": "YulTypedName",
														"src": "23706:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23721:4:7",
														"nodeType": "YulTypedName",
														"src": "23721:4:7",
														"type": ""
													}
												],
												"src": "23555:419:7"
											},
											{
												"body": {
													"nativeSrc": "24027:32:7",
													"nodeType": "YulBlock",
													"src": "24027:32:7",
													"statements": [
														{
															"nativeSrc": "24037:16:7",
															"nodeType": "YulAssignment",
															"src": "24037:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "24048:5:7",
																"nodeType": "YulIdentifier",
																"src": "24048:5:7"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "24037:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "24037:7:7"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_uint256",
												"nativeSrc": "23980:79:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "24009:5:7",
														"nodeType": "YulTypedName",
														"src": "24009:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "24019:7:7",
														"nodeType": "YulTypedName",
														"src": "24019:7:7",
														"type": ""
													}
												],
												"src": "23980:79:7"
											},
											{
												"body": {
													"nativeSrc": "24148:74:7",
													"nodeType": "YulBlock",
													"src": "24148:74:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24165:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "24165:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "24208:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "24208:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "24190:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "24190:17:7"
																				},
																				"nativeSrc": "24190:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "24190:24:7"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_uint256",
																			"nativeSrc": "24170:19:7",
																			"nodeType": "YulIdentifier",
																			"src": "24170:19:7"
																		},
																		"nativeSrc": "24170:45:7",
																		"nodeType": "YulFunctionCall",
																		"src": "24170:45:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24158:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "24158:6:7"
																},
																"nativeSrc": "24158:58:7",
																"nodeType": "YulFunctionCall",
																"src": "24158:58:7"
															},
															"nativeSrc": "24158:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "24158:58:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
												"nativeSrc": "24065:157:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "24136:5:7",
														"nodeType": "YulTypedName",
														"src": "24136:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "24143:3:7",
														"nodeType": "YulTypedName",
														"src": "24143:3:7",
														"type": ""
													}
												],
												"src": "24065:157:7"
											},
											{
												"body": {
													"nativeSrc": "24372:253:7",
													"nodeType": "YulBlock",
													"src": "24372:253:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "24445:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "24445:6:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "24454:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "24454:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
																	"nativeSrc": "24383:61:7",
																	"nodeType": "YulIdentifier",
																	"src": "24383:61:7"
																},
																"nativeSrc": "24383:75:7",
																"nodeType": "YulFunctionCall",
																"src": "24383:75:7"
															},
															"nativeSrc": "24383:75:7",
															"nodeType": "YulExpressionStatement",
															"src": "24383:75:7"
														},
														{
															"nativeSrc": "24467:19:7",
															"nodeType": "YulAssignment",
															"src": "24467:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24478:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "24478:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24483:2:7",
																		"nodeType": "YulLiteral",
																		"src": "24483:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24474:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "24474:3:7"
																},
																"nativeSrc": "24474:12:7",
																"nodeType": "YulFunctionCall",
																"src": "24474:12:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "24467:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "24467:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "24558:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "24558:6:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "24567:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "24567:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
																	"nativeSrc": "24496:61:7",
																	"nodeType": "YulIdentifier",
																	"src": "24496:61:7"
																},
																"nativeSrc": "24496:75:7",
																"nodeType": "YulFunctionCall",
																"src": "24496:75:7"
															},
															"nativeSrc": "24496:75:7",
															"nodeType": "YulExpressionStatement",
															"src": "24496:75:7"
														},
														{
															"nativeSrc": "24580:19:7",
															"nodeType": "YulAssignment",
															"src": "24580:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24591:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "24591:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24596:2:7",
																		"nodeType": "YulLiteral",
																		"src": "24596:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24587:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "24587:3:7"
																},
																"nativeSrc": "24587:12:7",
																"nodeType": "YulFunctionCall",
																"src": "24587:12:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "24580:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "24580:3:7"
																}
															]
														},
														{
															"nativeSrc": "24609:10:7",
															"nodeType": "YulAssignment",
															"src": "24609:10:7",
															"value": {
																"name": "pos",
																"nativeSrc": "24616:3:7",
																"nodeType": "YulIdentifier",
																"src": "24616:3:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "24609:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "24609:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_uint256_t_uint256__to_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "24228:397:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "24343:3:7",
														"nodeType": "YulTypedName",
														"src": "24343:3:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "24349:6:7",
														"nodeType": "YulTypedName",
														"src": "24349:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "24357:6:7",
														"nodeType": "YulTypedName",
														"src": "24357:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "24368:3:7",
														"nodeType": "YulTypedName",
														"src": "24368:3:7",
														"type": ""
													}
												],
												"src": "24228:397:7"
											},
											{
												"body": {
													"nativeSrc": "24665:142:7",
													"nodeType": "YulBlock",
													"src": "24665:142:7",
													"statements": [
														{
															"nativeSrc": "24675:25:7",
															"nodeType": "YulAssignment",
															"src": "24675:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "24698:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "24698:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "24680:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "24680:17:7"
																},
																"nativeSrc": "24680:20:7",
																"nodeType": "YulFunctionCall",
																"src": "24680:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "24675:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "24675:1:7"
																}
															]
														},
														{
															"nativeSrc": "24709:25:7",
															"nodeType": "YulAssignment",
															"src": "24709:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "24732:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "24732:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "24714:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "24714:17:7"
																},
																"nativeSrc": "24714:20:7",
																"nodeType": "YulFunctionCall",
																"src": "24714:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "24709:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "24709:1:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "24756:22:7",
																"nodeType": "YulBlock",
																"src": "24756:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "24758:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "24758:16:7"
																			},
																			"nativeSrc": "24758:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "24758:18:7"
																		},
																		"nativeSrc": "24758:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "24758:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "24753:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "24753:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "24746:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "24746:6:7"
																},
																"nativeSrc": "24746:9:7",
																"nodeType": "YulFunctionCall",
																"src": "24746:9:7"
															},
															"nativeSrc": "24743:35:7",
															"nodeType": "YulIf",
															"src": "24743:35:7"
														},
														{
															"nativeSrc": "24787:14:7",
															"nodeType": "YulAssignment",
															"src": "24787:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "24796:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "24796:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "24799:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "24799:1:7"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nativeSrc": "24792:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "24792:3:7"
																},
																"nativeSrc": "24792:9:7",
																"nodeType": "YulFunctionCall",
																"src": "24792:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "24787:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "24787:1:7"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nativeSrc": "24631:176:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "24654:1:7",
														"nodeType": "YulTypedName",
														"src": "24654:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "24657:1:7",
														"nodeType": "YulTypedName",
														"src": "24657:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "24663:1:7",
														"nodeType": "YulTypedName",
														"src": "24663:1:7",
														"type": ""
													}
												],
												"src": "24631:176:7"
											},
											{
												"body": {
													"nativeSrc": "24841:152:7",
													"nodeType": "YulBlock",
													"src": "24841:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "24858:1:7",
																		"nodeType": "YulLiteral",
																		"src": "24858:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24861:77:7",
																		"nodeType": "YulLiteral",
																		"src": "24861:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24851:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "24851:6:7"
																},
																"nativeSrc": "24851:88:7",
																"nodeType": "YulFunctionCall",
																"src": "24851:88:7"
															},
															"nativeSrc": "24851:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "24851:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "24955:1:7",
																		"nodeType": "YulLiteral",
																		"src": "24955:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24958:4:7",
																		"nodeType": "YulLiteral",
																		"src": "24958:4:7",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24948:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "24948:6:7"
																},
																"nativeSrc": "24948:15:7",
																"nodeType": "YulFunctionCall",
																"src": "24948:15:7"
															},
															"nativeSrc": "24948:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "24948:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "24979:1:7",
																		"nodeType": "YulLiteral",
																		"src": "24979:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24982:4:7",
																		"nodeType": "YulLiteral",
																		"src": "24982:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "24972:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "24972:6:7"
																},
																"nativeSrc": "24972:15:7",
																"nodeType": "YulFunctionCall",
																"src": "24972:15:7"
															},
															"nativeSrc": "24972:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "24972:15:7"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "24813:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "24813:180:7"
											},
											{
												"body": {
													"nativeSrc": "25105:68:7",
													"nodeType": "YulBlock",
													"src": "25105:68:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "25127:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "25127:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25135:1:7",
																				"nodeType": "YulLiteral",
																				"src": "25135:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25123:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "25123:3:7"
																		},
																		"nativeSrc": "25123:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "25123:14:7"
																	},
																	{
																		"hexValue": "43616e6e6f74207374616b65207a65726f20746f6b656e73",
																		"kind": "string",
																		"nativeSrc": "25139:26:7",
																		"nodeType": "YulLiteral",
																		"src": "25139:26:7",
																		"type": "",
																		"value": "Cannot stake zero tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25116:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "25116:6:7"
																},
																"nativeSrc": "25116:50:7",
																"nodeType": "YulFunctionCall",
																"src": "25116:50:7"
															},
															"nativeSrc": "25116:50:7",
															"nodeType": "YulExpressionStatement",
															"src": "25116:50:7"
														}
													]
												},
												"name": "store_literal_in_memory_7a02f11666a200f30cecba397f7530127901a514068b6cce650d5e1b666a5e24",
												"nativeSrc": "24999:174:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "25097:6:7",
														"nodeType": "YulTypedName",
														"src": "25097:6:7",
														"type": ""
													}
												],
												"src": "24999:174:7"
											},
											{
												"body": {
													"nativeSrc": "25325:220:7",
													"nodeType": "YulBlock",
													"src": "25325:220:7",
													"statements": [
														{
															"nativeSrc": "25335:74:7",
															"nodeType": "YulAssignment",
															"src": "25335:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25401:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "25401:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25406:2:7",
																		"nodeType": "YulLiteral",
																		"src": "25406:2:7",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "25342:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "25342:58:7"
																},
																"nativeSrc": "25342:67:7",
																"nodeType": "YulFunctionCall",
																"src": "25342:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "25335:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "25335:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25507:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "25507:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7a02f11666a200f30cecba397f7530127901a514068b6cce650d5e1b666a5e24",
																	"nativeSrc": "25418:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "25418:88:7"
																},
																"nativeSrc": "25418:93:7",
																"nodeType": "YulFunctionCall",
																"src": "25418:93:7"
															},
															"nativeSrc": "25418:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "25418:93:7"
														},
														{
															"nativeSrc": "25520:19:7",
															"nodeType": "YulAssignment",
															"src": "25520:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25531:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "25531:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25536:2:7",
																		"nodeType": "YulLiteral",
																		"src": "25536:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25527:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "25527:3:7"
																},
																"nativeSrc": "25527:12:7",
																"nodeType": "YulFunctionCall",
																"src": "25527:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "25520:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "25520:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7a02f11666a200f30cecba397f7530127901a514068b6cce650d5e1b666a5e24_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "25179:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "25313:3:7",
														"nodeType": "YulTypedName",
														"src": "25313:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "25321:3:7",
														"nodeType": "YulTypedName",
														"src": "25321:3:7",
														"type": ""
													}
												],
												"src": "25179:366:7"
											},
											{
												"body": {
													"nativeSrc": "25722:248:7",
													"nodeType": "YulBlock",
													"src": "25722:248:7",
													"statements": [
														{
															"nativeSrc": "25732:26:7",
															"nodeType": "YulAssignment",
															"src": "25732:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "25744:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "25744:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25755:2:7",
																		"nodeType": "YulLiteral",
																		"src": "25755:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25740:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "25740:3:7"
																},
																"nativeSrc": "25740:18:7",
																"nodeType": "YulFunctionCall",
																"src": "25740:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25732:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "25732:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25779:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "25779:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25790:1:7",
																				"nodeType": "YulLiteral",
																				"src": "25790:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25775:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "25775:3:7"
																		},
																		"nativeSrc": "25775:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "25775:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "25798:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "25798:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "25804:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "25804:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "25794:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "25794:3:7"
																		},
																		"nativeSrc": "25794:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "25794:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25768:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "25768:6:7"
																},
																"nativeSrc": "25768:47:7",
																"nodeType": "YulFunctionCall",
																"src": "25768:47:7"
															},
															"nativeSrc": "25768:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "25768:47:7"
														},
														{
															"nativeSrc": "25824:139:7",
															"nodeType": "YulAssignment",
															"src": "25824:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "25958:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "25958:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7a02f11666a200f30cecba397f7530127901a514068b6cce650d5e1b666a5e24_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "25832:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "25832:124:7"
																},
																"nativeSrc": "25832:131:7",
																"nodeType": "YulFunctionCall",
																"src": "25832:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25824:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "25824:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7a02f11666a200f30cecba397f7530127901a514068b6cce650d5e1b666a5e24__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "25551:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "25702:9:7",
														"nodeType": "YulTypedName",
														"src": "25702:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "25717:4:7",
														"nodeType": "YulTypedName",
														"src": "25717:4:7",
														"type": ""
													}
												],
												"src": "25551:419:7"
											},
											{
												"body": {
													"nativeSrc": "26082:63:7",
													"nodeType": "YulBlock",
													"src": "26082:63:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "26104:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "26104:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26112:1:7",
																				"nodeType": "YulLiteral",
																				"src": "26112:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26100:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "26100:3:7"
																		},
																		"nativeSrc": "26100:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "26100:14:7"
																	},
																	{
																		"hexValue": "496e76616c69642070726f706f73616c204944",
																		"kind": "string",
																		"nativeSrc": "26116:21:7",
																		"nodeType": "YulLiteral",
																		"src": "26116:21:7",
																		"type": "",
																		"value": "Invalid proposal ID"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "26093:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "26093:6:7"
																},
																"nativeSrc": "26093:45:7",
																"nodeType": "YulFunctionCall",
																"src": "26093:45:7"
															},
															"nativeSrc": "26093:45:7",
															"nodeType": "YulExpressionStatement",
															"src": "26093:45:7"
														}
													]
												},
												"name": "store_literal_in_memory_0febab928e40c46453cf5b5d4970676eff56829a16bec62dc48d209b2deaf8aa",
												"nativeSrc": "25976:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "26074:6:7",
														"nodeType": "YulTypedName",
														"src": "26074:6:7",
														"type": ""
													}
												],
												"src": "25976:169:7"
											},
											{
												"body": {
													"nativeSrc": "26297:220:7",
													"nodeType": "YulBlock",
													"src": "26297:220:7",
													"statements": [
														{
															"nativeSrc": "26307:74:7",
															"nodeType": "YulAssignment",
															"src": "26307:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26373:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "26373:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26378:2:7",
																		"nodeType": "YulLiteral",
																		"src": "26378:2:7",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "26314:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "26314:58:7"
																},
																"nativeSrc": "26314:67:7",
																"nodeType": "YulFunctionCall",
																"src": "26314:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "26307:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "26307:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26479:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "26479:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0febab928e40c46453cf5b5d4970676eff56829a16bec62dc48d209b2deaf8aa",
																	"nativeSrc": "26390:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "26390:88:7"
																},
																"nativeSrc": "26390:93:7",
																"nodeType": "YulFunctionCall",
																"src": "26390:93:7"
															},
															"nativeSrc": "26390:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "26390:93:7"
														},
														{
															"nativeSrc": "26492:19:7",
															"nodeType": "YulAssignment",
															"src": "26492:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26503:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "26503:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26508:2:7",
																		"nodeType": "YulLiteral",
																		"src": "26508:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "26499:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "26499:3:7"
																},
																"nativeSrc": "26499:12:7",
																"nodeType": "YulFunctionCall",
																"src": "26499:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "26492:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "26492:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0febab928e40c46453cf5b5d4970676eff56829a16bec62dc48d209b2deaf8aa_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "26151:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "26285:3:7",
														"nodeType": "YulTypedName",
														"src": "26285:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "26293:3:7",
														"nodeType": "YulTypedName",
														"src": "26293:3:7",
														"type": ""
													}
												],
												"src": "26151:366:7"
											},
											{
												"body": {
													"nativeSrc": "26694:248:7",
													"nodeType": "YulBlock",
													"src": "26694:248:7",
													"statements": [
														{
															"nativeSrc": "26704:26:7",
															"nodeType": "YulAssignment",
															"src": "26704:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "26716:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "26716:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26727:2:7",
																		"nodeType": "YulLiteral",
																		"src": "26727:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "26712:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "26712:3:7"
																},
																"nativeSrc": "26712:18:7",
																"nodeType": "YulFunctionCall",
																"src": "26712:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "26704:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "26704:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "26751:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "26751:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26762:1:7",
																				"nodeType": "YulLiteral",
																				"src": "26762:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26747:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "26747:3:7"
																		},
																		"nativeSrc": "26747:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "26747:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "26770:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "26770:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "26776:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "26776:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "26766:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "26766:3:7"
																		},
																		"nativeSrc": "26766:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "26766:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "26740:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "26740:6:7"
																},
																"nativeSrc": "26740:47:7",
																"nodeType": "YulFunctionCall",
																"src": "26740:47:7"
															},
															"nativeSrc": "26740:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "26740:47:7"
														},
														{
															"nativeSrc": "26796:139:7",
															"nodeType": "YulAssignment",
															"src": "26796:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "26930:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "26930:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0febab928e40c46453cf5b5d4970676eff56829a16bec62dc48d209b2deaf8aa_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "26804:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "26804:124:7"
																},
																"nativeSrc": "26804:131:7",
																"nodeType": "YulFunctionCall",
																"src": "26804:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "26796:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "26796:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0febab928e40c46453cf5b5d4970676eff56829a16bec62dc48d209b2deaf8aa__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "26523:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "26674:9:7",
														"nodeType": "YulTypedName",
														"src": "26674:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "26689:4:7",
														"nodeType": "YulTypedName",
														"src": "26689:4:7",
														"type": ""
													}
												],
												"src": "26523:419:7"
											},
											{
												"body": {
													"nativeSrc": "27054:68:7",
													"nodeType": "YulBlock",
													"src": "27054:68:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "27076:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "27076:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27084:1:7",
																				"nodeType": "YulLiteral",
																				"src": "27084:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27072:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "27072:3:7"
																		},
																		"nativeSrc": "27072:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "27072:14:7"
																	},
																	{
																		"hexValue": "4e6f207374616b656420746f6b656e7320746f20766f7465",
																		"kind": "string",
																		"nativeSrc": "27088:26:7",
																		"nodeType": "YulLiteral",
																		"src": "27088:26:7",
																		"type": "",
																		"value": "No staked tokens to vote"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "27065:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "27065:6:7"
																},
																"nativeSrc": "27065:50:7",
																"nodeType": "YulFunctionCall",
																"src": "27065:50:7"
															},
															"nativeSrc": "27065:50:7",
															"nodeType": "YulExpressionStatement",
															"src": "27065:50:7"
														}
													]
												},
												"name": "store_literal_in_memory_2ba6ba7fd9922e5e4215d4c50fe3780e179cb4252eee0ad2051198fef2d560ef",
												"nativeSrc": "26948:174:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "27046:6:7",
														"nodeType": "YulTypedName",
														"src": "27046:6:7",
														"type": ""
													}
												],
												"src": "26948:174:7"
											},
											{
												"body": {
													"nativeSrc": "27274:220:7",
													"nodeType": "YulBlock",
													"src": "27274:220:7",
													"statements": [
														{
															"nativeSrc": "27284:74:7",
															"nodeType": "YulAssignment",
															"src": "27284:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "27350:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "27350:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27355:2:7",
																		"nodeType": "YulLiteral",
																		"src": "27355:2:7",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "27291:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "27291:58:7"
																},
																"nativeSrc": "27291:67:7",
																"nodeType": "YulFunctionCall",
																"src": "27291:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "27284:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "27284:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "27456:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "27456:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2ba6ba7fd9922e5e4215d4c50fe3780e179cb4252eee0ad2051198fef2d560ef",
																	"nativeSrc": "27367:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "27367:88:7"
																},
																"nativeSrc": "27367:93:7",
																"nodeType": "YulFunctionCall",
																"src": "27367:93:7"
															},
															"nativeSrc": "27367:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "27367:93:7"
														},
														{
															"nativeSrc": "27469:19:7",
															"nodeType": "YulAssignment",
															"src": "27469:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "27480:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "27480:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27485:2:7",
																		"nodeType": "YulLiteral",
																		"src": "27485:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "27476:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "27476:3:7"
																},
																"nativeSrc": "27476:12:7",
																"nodeType": "YulFunctionCall",
																"src": "27476:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "27469:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "27469:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2ba6ba7fd9922e5e4215d4c50fe3780e179cb4252eee0ad2051198fef2d560ef_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "27128:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "27262:3:7",
														"nodeType": "YulTypedName",
														"src": "27262:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "27270:3:7",
														"nodeType": "YulTypedName",
														"src": "27270:3:7",
														"type": ""
													}
												],
												"src": "27128:366:7"
											},
											{
												"body": {
													"nativeSrc": "27671:248:7",
													"nodeType": "YulBlock",
													"src": "27671:248:7",
													"statements": [
														{
															"nativeSrc": "27681:26:7",
															"nodeType": "YulAssignment",
															"src": "27681:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "27693:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "27693:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27704:2:7",
																		"nodeType": "YulLiteral",
																		"src": "27704:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "27689:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "27689:3:7"
																},
																"nativeSrc": "27689:18:7",
																"nodeType": "YulFunctionCall",
																"src": "27689:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "27681:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "27681:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "27728:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "27728:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27739:1:7",
																				"nodeType": "YulLiteral",
																				"src": "27739:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27724:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "27724:3:7"
																		},
																		"nativeSrc": "27724:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "27724:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "27747:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "27747:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "27753:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "27753:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "27743:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "27743:3:7"
																		},
																		"nativeSrc": "27743:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "27743:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "27717:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "27717:6:7"
																},
																"nativeSrc": "27717:47:7",
																"nodeType": "YulFunctionCall",
																"src": "27717:47:7"
															},
															"nativeSrc": "27717:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "27717:47:7"
														},
														{
															"nativeSrc": "27773:139:7",
															"nodeType": "YulAssignment",
															"src": "27773:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "27907:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "27907:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2ba6ba7fd9922e5e4215d4c50fe3780e179cb4252eee0ad2051198fef2d560ef_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "27781:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "27781:124:7"
																},
																"nativeSrc": "27781:131:7",
																"nodeType": "YulFunctionCall",
																"src": "27781:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "27773:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "27773:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2ba6ba7fd9922e5e4215d4c50fe3780e179cb4252eee0ad2051198fef2d560ef__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "27500:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "27651:9:7",
														"nodeType": "YulTypedName",
														"src": "27651:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "27666:4:7",
														"nodeType": "YulTypedName",
														"src": "27666:4:7",
														"type": ""
													}
												],
												"src": "27500:419:7"
											},
											{
												"body": {
													"nativeSrc": "28079:288:7",
													"nodeType": "YulBlock",
													"src": "28079:288:7",
													"statements": [
														{
															"nativeSrc": "28089:26:7",
															"nodeType": "YulAssignment",
															"src": "28089:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "28101:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "28101:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28112:2:7",
																		"nodeType": "YulLiteral",
																		"src": "28112:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "28097:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "28097:3:7"
																},
																"nativeSrc": "28097:18:7",
																"nodeType": "YulFunctionCall",
																"src": "28097:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "28089:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "28089:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "28169:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "28169:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "28182:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "28182:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28193:1:7",
																				"nodeType": "YulLiteral",
																				"src": "28193:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28178:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "28178:3:7"
																		},
																		"nativeSrc": "28178:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "28178:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "28125:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "28125:43:7"
																},
																"nativeSrc": "28125:71:7",
																"nodeType": "YulFunctionCall",
																"src": "28125:71:7"
															},
															"nativeSrc": "28125:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "28125:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "28250:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "28250:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "28263:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "28263:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28274:2:7",
																				"nodeType": "YulLiteral",
																				"src": "28274:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28259:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "28259:3:7"
																		},
																		"nativeSrc": "28259:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "28259:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "28206:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "28206:43:7"
																},
																"nativeSrc": "28206:72:7",
																"nodeType": "YulFunctionCall",
																"src": "28206:72:7"
															},
															"nativeSrc": "28206:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "28206:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "28332:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "28332:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "28345:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "28345:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28356:2:7",
																				"nodeType": "YulLiteral",
																				"src": "28356:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28341:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "28341:3:7"
																		},
																		"nativeSrc": "28341:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "28341:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "28288:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "28288:43:7"
																},
																"nativeSrc": "28288:72:7",
																"nodeType": "YulFunctionCall",
																"src": "28288:72:7"
															},
															"nativeSrc": "28288:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "28288:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "27925:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "28035:9:7",
														"nodeType": "YulTypedName",
														"src": "28035:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "28047:6:7",
														"nodeType": "YulTypedName",
														"src": "28047:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "28055:6:7",
														"nodeType": "YulTypedName",
														"src": "28055:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "28063:6:7",
														"nodeType": "YulTypedName",
														"src": "28063:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "28074:4:7",
														"nodeType": "YulTypedName",
														"src": "28074:4:7",
														"type": ""
													}
												],
												"src": "27925:442:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_uint256_t_uint256_t_bool__to_t_string_memory_ptr_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_uint256_t_address__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient staked balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_ba93e22e59dbf680aafd2aa082c307d19b1ccf283e46ba80e768770956096b94(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot enter with zero tokens\")\n\n    }\n\n    function abi_encode_t_stringliteral_ba93e22e59dbf680aafd2aa082c307d19b1ccf283e46ba80e768770956096b94_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_ba93e22e59dbf680aafd2aa082c307d19b1ccf283e46ba80e768770956096b94(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ba93e22e59dbf680aafd2aa082c307d19b1ccf283e46ba80e768770956096b94__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ba93e22e59dbf680aafd2aa082c307d19b1ccf283e46ba80e768770956096b94_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function store_literal_in_memory_9134d835a173bd374f6a11e1d53fa96984ec9491b867df78baeca4c974ae9b31(memPtr) {\n\n        mstore(add(memPtr, 0), \"No participants in the lottery\")\n\n    }\n\n    function abi_encode_t_stringliteral_9134d835a173bd374f6a11e1d53fa96984ec9491b867df78baeca4c974ae9b31_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_9134d835a173bd374f6a11e1d53fa96984ec9491b867df78baeca4c974ae9b31(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9134d835a173bd374f6a11e1d53fa96984ec9491b867df78baeca4c974ae9b31__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9134d835a173bd374f6a11e1d53fa96984ec9491b867df78baeca4c974ae9b31_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function leftAlign_t_uint256(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint256(cleanup_t_uint256(value)))\n    }\n\n    function abi_encode_tuple_packed_t_uint256_t_uint256__to_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 32)\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_7a02f11666a200f30cecba397f7530127901a514068b6cce650d5e1b666a5e24(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot stake zero tokens\")\n\n    }\n\n    function abi_encode_t_stringliteral_7a02f11666a200f30cecba397f7530127901a514068b6cce650d5e1b666a5e24_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_7a02f11666a200f30cecba397f7530127901a514068b6cce650d5e1b666a5e24(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7a02f11666a200f30cecba397f7530127901a514068b6cce650d5e1b666a5e24__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7a02f11666a200f30cecba397f7530127901a514068b6cce650d5e1b666a5e24_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0febab928e40c46453cf5b5d4970676eff56829a16bec62dc48d209b2deaf8aa(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid proposal ID\")\n\n    }\n\n    function abi_encode_t_stringliteral_0febab928e40c46453cf5b5d4970676eff56829a16bec62dc48d209b2deaf8aa_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_0febab928e40c46453cf5b5d4970676eff56829a16bec62dc48d209b2deaf8aa(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0febab928e40c46453cf5b5d4970676eff56829a16bec62dc48d209b2deaf8aa__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0febab928e40c46453cf5b5d4970676eff56829a16bec62dc48d209b2deaf8aa_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2ba6ba7fd9922e5e4215d4c50fe3780e179cb4252eee0ad2051198fef2d560ef(memPtr) {\n\n        mstore(add(memPtr, 0), \"No staked tokens to vote\")\n\n    }\n\n    function abi_encode_t_stringliteral_2ba6ba7fd9922e5e4215d4c50fe3780e179cb4252eee0ad2051198fef2d560ef_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_2ba6ba7fd9922e5e4215d4c50fe3780e179cb4252eee0ad2051198fef2d560ef(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2ba6ba7fd9922e5e4215d4c50fe3780e179cb4252eee0ad2051198fef2d560ef__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2ba6ba7fd9922e5e4215d4c50fe3780e179cb4252eee0ad2051198fef2d560ef_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C2 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5FEC5C64 GT PUSH2 0xF7 JUMPI DUP1 PUSH4 0xB3A55A66 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xCDB12C83 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xCDB12C83 EQ PUSH2 0x4EA JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x508 JUMPI DUP1 PUSH4 0xE1913C81 EQ PUSH2 0x538 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x556 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0xB3A55A66 EQ PUSH2 0x492 JUMPI DUP1 PUSH4 0xBA13A572 EQ PUSH2 0x4B0 JUMPI DUP1 PUSH4 0xC9D27AFE EQ PUSH2 0x4CE JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x7ACB7757 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x7ACB7757 EQ PUSH2 0x40A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x426 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x444 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x462 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x5FEC5C64 EQ PUSH2 0x3B2 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3D0 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x400 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x164 JUMPI DUP1 PUSH4 0x313CE567 GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x352 JUMPI DUP1 PUSH4 0x3FD43098 EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0x49C2A1A6 EQ PUSH2 0x38C JUMPI DUP1 PUSH4 0x576B5002 EQ PUSH2 0x3A8 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2E8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x306 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x336 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0xC0512E9 GT PUSH2 0x1A0 JUMPI DUP1 PUSH4 0xC0512E9 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0xC56AE3B EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0x13ED0846 EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0x16934FC4 EQ PUSH2 0x2B5 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x13CF08B EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x217 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x1C00 JUMP JUMPDEST PUSH2 0x572 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F0 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x201 PUSH2 0x630 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20E SWAP2 SWAP1 PUSH2 0x1D0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x231 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22C SWAP2 SWAP1 PUSH2 0x1D88 JUMP JUMPDEST PUSH2 0x6C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23E SWAP2 SWAP1 PUSH2 0x1DC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24F PUSH2 0x6E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25C SWAP2 SWAP1 PUSH2 0x1DDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26D PUSH2 0x6E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x1E2D JUMP JUMPDEST PUSH2 0x6FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AC SWAP2 SWAP1 PUSH2 0x1DDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CA SWAP2 SWAP1 PUSH2 0x1E6B JUMP JUMPDEST PUSH2 0x780 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DF SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1EA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F0 PUSH2 0x7CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FD SWAP2 SWAP1 PUSH2 0x1DDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x320 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31B SWAP2 SWAP1 PUSH2 0x1EE8 JUMP JUMPDEST PUSH2 0x7D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32D SWAP2 SWAP1 PUSH2 0x1DC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x350 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34B SWAP2 SWAP1 PUSH2 0x1C00 JUMP JUMPDEST PUSH2 0x802 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x35A PUSH2 0x985 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x367 SWAP2 SWAP1 PUSH2 0x1F53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x385 SWAP2 SWAP1 PUSH2 0x1C00 JUMP JUMPDEST PUSH2 0x98D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A1 SWAP2 SWAP1 PUSH2 0x2098 JUMP JUMPDEST PUSH2 0xAA8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3B0 PUSH2 0xB84 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3BA PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C7 SWAP2 SWAP1 PUSH2 0x1DDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E5 SWAP2 SWAP1 PUSH2 0x1E6B JUMP JUMPDEST PUSH2 0xCDC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F7 SWAP2 SWAP1 PUSH2 0x1DDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x408 PUSH2 0xD21 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x424 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x41F SWAP2 SWAP1 PUSH2 0x20DF JUMP JUMPDEST PUSH2 0xD34 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x42E PUSH2 0xF8A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43B SWAP2 SWAP1 PUSH2 0x211D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x44C PUSH2 0xFB2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x459 SWAP2 SWAP1 PUSH2 0x1D0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x47C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x477 SWAP2 SWAP1 PUSH2 0x1D88 JUMP JUMPDEST PUSH2 0x1042 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x489 SWAP2 SWAP1 PUSH2 0x1DC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x49A PUSH2 0x1064 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A7 SWAP2 SWAP1 PUSH2 0x21ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B8 PUSH2 0x10F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C5 SWAP2 SWAP1 PUSH2 0x1DDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4E3 SWAP2 SWAP1 PUSH2 0x2237 JUMP JUMPDEST PUSH2 0x10FD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4F2 PUSH2 0x12A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4FF SWAP2 SWAP1 PUSH2 0x1DDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x522 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x51D SWAP2 SWAP1 PUSH2 0x2275 JUMP JUMPDEST PUSH2 0x12AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x52F SWAP2 SWAP1 PUSH2 0x1DDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x540 PUSH2 0x132F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x54D SWAP2 SWAP1 PUSH2 0x1DDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x570 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x56B SWAP2 SWAP1 PUSH2 0x1E6B JUMP JUMPDEST PUSH2 0x1334 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD DUP1 SLOAD PUSH2 0x591 SWAP1 PUSH2 0x22E0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5BD SWAP1 PUSH2 0x22E0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x608 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5DF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x608 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5EB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x63F SWAP1 PUSH2 0x22E0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x66B SWAP1 PUSH2 0x22E0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6B6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x68D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6B6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x699 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x6CA PUSH2 0x13B8 JUMP JUMPDEST SWAP1 POP PUSH2 0x6D7 DUP2 DUP6 DUP6 PUSH2 0x13BF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH0 PUSH0 PUSH10 0x21E19E0C9BAB2400000 DUP5 GT PUSH2 0x731 JUMPI PUSH9 0x3635C9ADC5DEA00000 DUP5 GT PUSH2 0x729 JUMPI PUSH1 0xA PUSH2 0x72C JUMP JUMPDEST PUSH1 0xC JUMPDEST PUSH2 0x734 JUMP JUMPDEST PUSH1 0xF JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH0 PUSH3 0x278D00 DUP5 GT PUSH2 0x74B JUMPI PUSH1 0x1 PUSH2 0x74E JUMP JUMPDEST PUSH1 0x2 JUMPDEST PUSH1 0xFF AND SWAP1 POP DUP1 PUSH1 0x64 DUP4 DUP8 PUSH2 0x762 SWAP2 SWAP1 PUSH2 0x233D JUMP JUMPDEST PUSH2 0x76C SWAP2 SWAP1 PUSH2 0x23AB JUMP JUMPDEST PUSH2 0x776 SWAP2 SWAP1 PUSH2 0x233D JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP5 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x7DE PUSH2 0x13B8 JUMP JUMPDEST SWAP1 POP PUSH2 0x7EB DUP6 DUP3 DUP6 PUSH2 0x13D1 JUMP JUMPDEST PUSH2 0x7F6 DUP6 DUP6 DUP6 PUSH2 0x1463 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP2 DUP2 PUSH0 ADD SLOAD LT ISZERO PUSH2 0x888 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x87F SWAP1 PUSH2 0x2425 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 TIMESTAMP SWAP1 POP PUSH0 DUP3 PUSH1 0x2 ADD SLOAD DUP3 PUSH2 0x89D SWAP2 SWAP1 PUSH2 0x2443 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH0 SWAP1 POP PUSH1 0xE SLOAD DUP3 LT ISZERO PUSH2 0x8DF JUMPI PUSH1 0x64 PUSH1 0x14 DUP7 PUSH2 0x8BC SWAP2 SWAP1 PUSH2 0x233D JUMP JUMPDEST PUSH2 0x8C6 SWAP2 SWAP1 PUSH2 0x23AB JUMP JUMPDEST SWAP1 POP PUSH2 0x8DE ADDRESS PUSH1 0x2 DUP4 PUSH2 0x8D9 SWAP2 SWAP1 PUSH2 0x23AB JUMP JUMPDEST PUSH2 0x1553 JUMP JUMPDEST JUMPDEST PUSH0 DUP2 DUP7 PUSH2 0x8EC SWAP2 SWAP1 PUSH2 0x2443 JUMP JUMPDEST SWAP1 POP DUP6 DUP6 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x900 SWAP2 SWAP1 PUSH2 0x2443 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0xA PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x91B SWAP2 SWAP1 PUSH2 0x2443 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x92D ADDRESS CALLER DUP4 PUSH2 0x1463 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x92CCF450A286A957AF52509BC1C9939D1A6A481783E142E41E2499F0BB66EBC6 DUP3 DUP5 PUSH1 0x40 MLOAD PUSH2 0x975 SWAP3 SWAP2 SWAP1 PUSH2 0x2476 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x9CF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C6 SWAP1 PUSH2 0x24E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9DA CALLER ADDRESS DUP4 PUSH2 0x1463 JUMP JUMPDEST PUSH1 0x8 PUSH0 ADD CALLER SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x8 PUSH1 0x1 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xA50 SWAP2 SWAP1 PUSH2 0x2505 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC28711C8DCC0CB3D25732E13809D1D8C2640669A0A3FB4F7729810A9CAAFFDFF DUP3 PUSH1 0x40 MLOAD PUSH2 0xA9D SWAP2 SWAP1 PUSH2 0x1DDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0xAB0 PUSH2 0x15D2 JUMP JUMPDEST PUSH1 0xD PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xAC2 SWAP1 PUSH2 0x2538 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x7 PUSH0 PUSH1 0xD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SWAP1 DUP2 PUSH2 0xB10 SWAP2 SWAP1 PUSH2 0x271F JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0xD SLOAD PUSH32 0x9C770C289AB5BF7E57CB1D23C8CEAE993AEA46EB64847072FD3D78CA60D3E432 DUP3 PUSH1 0x40 MLOAD PUSH2 0xB79 SWAP2 SWAP1 PUSH2 0x1D0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0xB8C PUSH2 0x15D2 JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 ADD DUP1 SLOAD SWAP1 POP GT PUSH2 0xBD5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBCC SWAP1 PUSH2 0x2838 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x8 PUSH0 ADD DUP1 SLOAD SWAP1 POP TIMESTAMP PREVRANDAO PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xBF1 SWAP3 SWAP2 SWAP1 PUSH2 0x2876 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH0 SHR PUSH2 0xC13 SWAP2 SWAP1 PUSH2 0x28A1 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x8 PUSH0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xC2C JUMPI PUSH2 0xC2B PUSH2 0x28D1 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 PUSH1 0x8 PUSH1 0x1 ADD SLOAD SWAP1 POP PUSH0 PUSH1 0x8 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x8 PUSH0 ADD PUSH0 PUSH2 0xC78 SWAP2 SWAP1 PUSH2 0x1B83 JUMP JUMPDEST PUSH2 0xC83 ADDRESS DUP4 DUP4 PUSH2 0x1463 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x275EAACF9E506F9C68B251C2F97CF723C4FB9A3B94E42A1DFB581543C135F0C0 DUP3 PUSH1 0x40 MLOAD PUSH2 0xCC9 SWAP2 SWAP1 PUSH2 0x1DDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD29 PUSH2 0x15D2 JUMP JUMPDEST PUSH2 0xD32 PUSH0 PUSH2 0x1659 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP3 GT PUSH2 0xD76 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD6D SWAP1 PUSH2 0x2948 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD81 CALLER ADDRESS DUP5 PUSH2 0x1463 JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 TIMESTAMP SWAP1 POP PUSH0 DUP3 PUSH0 ADD SLOAD GT ISZERO PUSH2 0xE0B JUMPI PUSH0 DUP3 PUSH1 0x2 ADD SLOAD DUP3 PUSH2 0xDE1 SWAP2 SWAP1 PUSH2 0x2443 JUMP JUMPDEST SWAP1 POP PUSH2 0xDF0 DUP4 PUSH0 ADD SLOAD DUP3 PUSH2 0x6FF JUMP JUMPDEST DUP4 PUSH1 0x1 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xE02 SWAP2 SWAP1 PUSH2 0x2505 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMPDEST DUP4 DUP3 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xE1D SWAP2 SWAP1 PUSH2 0x2505 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xE95 JUMPI POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xF04 JUMPI PUSH0 PUSH1 0x64 PUSH1 0x5 DUP7 PUSH2 0xEAA SWAP2 SWAP1 PUSH2 0x233D JUMP JUMPDEST PUSH2 0xEB4 SWAP2 SWAP1 PUSH2 0x23AB JUMP JUMPDEST SWAP1 POP PUSH2 0xEC0 DUP5 DUP3 PUSH2 0x171C JUMP JUMPDEST DUP4 DUP4 PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMPDEST DUP4 PUSH1 0xA PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xF18 SWAP2 SWAP1 PUSH2 0x2505 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9F9E4044C5742CCA66CA090B21552BAC14645E68BAD7A92364A9D9FF18111A1C DUP7 PUSH1 0x40 MLOAD PUSH2 0xF7C SWAP2 SWAP1 PUSH2 0x1DDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xFC1 SWAP1 PUSH2 0x22E0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xFED SWAP1 PUSH2 0x22E0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1038 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x100F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1038 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x101B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x104C PUSH2 0x13B8 JUMP JUMPDEST SWAP1 POP PUSH2 0x1059 DUP2 DUP6 DUP6 PUSH2 0x1463 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x8 PUSH0 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x10E7 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x109E JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH0 ADD DUP1 SLOAD PUSH2 0x1120 SWAP1 PUSH2 0x22E0 JUMP JUMPDEST SWAP1 POP GT PUSH2 0x1162 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1159 SWAP1 PUSH2 0x29B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0x11E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11DE SWAP1 PUSH2 0x2A18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 ISZERO PUSH2 0x120C JUMPI DUP1 DUP3 PUSH1 0x1 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1200 SWAP2 SWAP1 PUSH2 0x2505 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1227 JUMP JUMPDEST DUP1 DUP3 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x121F SWAP2 SWAP1 PUSH2 0x2505 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH1 0x2 ADD SLOAD DUP3 PUSH1 0x1 ADD SLOAD GT DUP3 PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF2913DBE661EE2ACC4A046D8FBCDC792373BDA34C41C6086484B5345E5785E5F DUP6 PUSH1 0x40 MLOAD PUSH2 0x1293 SWAP2 SWAP1 PUSH2 0x1DC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 DUP2 JUMP JUMPDEST PUSH2 0x133C PUSH2 0x15D2 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13AC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13A3 SWAP2 SWAP1 PUSH2 0x211D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13B5 DUP2 PUSH2 0x1659 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x13CC DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x179B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x13DC DUP5 DUP5 PUSH2 0x12AD JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x145D JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x144E JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1445 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2A36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x145C DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x179B JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14D3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14CA SWAP2 SWAP1 PUSH2 0x211D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1543 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x153A SWAP2 SWAP1 PUSH2 0x211D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x154E DUP4 DUP4 DUP4 PUSH2 0x196A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15C3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15BA SWAP2 SWAP1 PUSH2 0x211D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x15CE DUP3 PUSH0 DUP4 PUSH2 0x196A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x15DA PUSH2 0x13B8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x15F8 PUSH2 0xF8A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1657 JUMPI PUSH2 0x161B PUSH2 0x13B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x164E SWAP2 SWAP1 PUSH2 0x211D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x178C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1783 SWAP2 SWAP1 PUSH2 0x211D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1797 PUSH0 DUP4 DUP4 PUSH2 0x196A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x180B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1802 SWAP2 SWAP1 PUSH2 0x211D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x187B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1872 SWAP2 SWAP1 PUSH2 0x211D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1964 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x195B SWAP2 SWAP1 PUSH2 0x1DDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x19BA JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x19AE SWAP2 SWAP1 PUSH2 0x2505 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1A88 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1A43 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A3A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2A36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1ACF JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1B19 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1B76 SWAP2 SWAP1 PUSH2 0x1DDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST POP DUP1 SLOAD PUSH0 DUP3 SSTORE SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1B9E SWAP2 SWAP1 PUSH2 0x1BA1 JUMP JUMPDEST POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1BB8 JUMPI PUSH0 DUP2 PUSH0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x1BA2 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BDF DUP2 PUSH2 0x1BCD JUMP JUMPDEST DUP2 EQ PUSH2 0x1BE9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BFA DUP2 PUSH2 0x1BD6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C15 JUMPI PUSH2 0x1C14 PUSH2 0x1BC5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C22 DUP5 DUP3 DUP6 ADD PUSH2 0x1BEC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C6D DUP3 PUSH2 0x1C2B JUMP JUMPDEST PUSH2 0x1C77 DUP2 DUP6 PUSH2 0x1C35 JUMP JUMPDEST SWAP4 POP PUSH2 0x1C87 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C45 JUMP JUMPDEST PUSH2 0x1C90 DUP2 PUSH2 0x1C53 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1CA4 DUP2 PUSH2 0x1BCD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CBE DUP2 PUSH2 0x1CAA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1CDC DUP2 DUP8 PUSH2 0x1C63 JUMP JUMPDEST SWAP1 POP PUSH2 0x1CEB PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1C9B JUMP JUMPDEST PUSH2 0x1CF8 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1C9B JUMP JUMPDEST PUSH2 0x1D05 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1CB5 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D26 DUP2 DUP5 PUSH2 0x1C63 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D57 DUP3 PUSH2 0x1D2E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D67 DUP2 PUSH2 0x1D4D JUMP JUMPDEST DUP2 EQ PUSH2 0x1D71 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D82 DUP2 PUSH2 0x1D5E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D9E JUMPI PUSH2 0x1D9D PUSH2 0x1BC5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DAB DUP6 DUP3 DUP7 ADD PUSH2 0x1D74 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1DBC DUP6 DUP3 DUP7 ADD PUSH2 0x1BEC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DD9 PUSH0 DUP4 ADD DUP5 PUSH2 0x1CB5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DF2 PUSH0 DUP4 ADD DUP5 PUSH2 0x1C9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1E0B PUSH0 DUP4 ADD DUP7 PUSH2 0x1C9B JUMP JUMPDEST PUSH2 0x1E18 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1C9B JUMP JUMPDEST PUSH2 0x1E25 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1C9B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E43 JUMPI PUSH2 0x1E42 PUSH2 0x1BC5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E50 DUP6 DUP3 DUP7 ADD PUSH2 0x1BEC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E61 DUP6 DUP3 DUP7 ADD PUSH2 0x1BEC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E80 JUMPI PUSH2 0x1E7F PUSH2 0x1BC5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E8D DUP5 DUP3 DUP6 ADD PUSH2 0x1D74 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E9F DUP2 PUSH2 0x1D4D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1EB8 PUSH0 DUP4 ADD DUP8 PUSH2 0x1C9B JUMP JUMPDEST PUSH2 0x1EC5 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1C9B JUMP JUMPDEST PUSH2 0x1ED2 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1C9B JUMP JUMPDEST PUSH2 0x1EDF PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1E96 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1EFF JUMPI PUSH2 0x1EFE PUSH2 0x1BC5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F0C DUP7 DUP3 DUP8 ADD PUSH2 0x1D74 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1F1D DUP7 DUP3 DUP8 ADD PUSH2 0x1D74 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1F2E DUP7 DUP3 DUP8 ADD PUSH2 0x1BEC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F4D DUP2 PUSH2 0x1F38 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F66 PUSH0 DUP4 ADD DUP5 PUSH2 0x1F44 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1FAA DUP3 PUSH2 0x1C53 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1FC9 JUMPI PUSH2 0x1FC8 PUSH2 0x1F74 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1FDB PUSH2 0x1BBC JUMP JUMPDEST SWAP1 POP PUSH2 0x1FE7 DUP3 DUP3 PUSH2 0x1FA1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2006 JUMPI PUSH2 0x2005 PUSH2 0x1F74 JUMP JUMPDEST JUMPDEST PUSH2 0x200F DUP3 PUSH2 0x1C53 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x203C PUSH2 0x2037 DUP5 PUSH2 0x1FEC JUMP JUMPDEST PUSH2 0x1FD2 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2058 JUMPI PUSH2 0x2057 PUSH2 0x1F70 JUMP JUMPDEST JUMPDEST PUSH2 0x2063 DUP5 DUP3 DUP6 PUSH2 0x201C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x207F JUMPI PUSH2 0x207E PUSH2 0x1F6C JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x208F DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x202A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20AD JUMPI PUSH2 0x20AC PUSH2 0x1BC5 JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20CA JUMPI PUSH2 0x20C9 PUSH2 0x1BC9 JUMP JUMPDEST JUMPDEST PUSH2 0x20D6 DUP5 DUP3 DUP6 ADD PUSH2 0x206B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20F5 JUMPI PUSH2 0x20F4 PUSH2 0x1BC5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2102 DUP6 DUP3 DUP7 ADD PUSH2 0x1BEC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2113 DUP6 DUP3 DUP7 ADD PUSH2 0x1D74 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2130 PUSH0 DUP4 ADD DUP5 PUSH2 0x1E96 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2168 DUP2 PUSH2 0x1D4D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2179 DUP4 DUP4 PUSH2 0x215F JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x219B DUP3 PUSH2 0x2136 JUMP JUMPDEST PUSH2 0x21A5 DUP2 DUP6 PUSH2 0x2140 JUMP JUMPDEST SWAP4 POP PUSH2 0x21B0 DUP4 PUSH2 0x2150 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x21E0 JUMPI DUP2 MLOAD PUSH2 0x21C7 DUP9 DUP3 PUSH2 0x216E JUMP JUMPDEST SWAP8 POP PUSH2 0x21D2 DUP4 PUSH2 0x2185 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x21B3 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2205 DUP2 DUP5 PUSH2 0x2191 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2216 DUP2 PUSH2 0x1CAA JUMP JUMPDEST DUP2 EQ PUSH2 0x2220 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2231 DUP2 PUSH2 0x220D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x224D JUMPI PUSH2 0x224C PUSH2 0x1BC5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x225A DUP6 DUP3 DUP7 ADD PUSH2 0x1BEC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x226B DUP6 DUP3 DUP7 ADD PUSH2 0x2223 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x228B JUMPI PUSH2 0x228A PUSH2 0x1BC5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2298 DUP6 DUP3 DUP7 ADD PUSH2 0x1D74 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x22A9 DUP6 DUP3 DUP7 ADD PUSH2 0x1D74 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x22F7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x230A JUMPI PUSH2 0x2309 PUSH2 0x22B3 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2347 DUP3 PUSH2 0x1BCD JUMP JUMPDEST SWAP2 POP PUSH2 0x2352 DUP4 PUSH2 0x1BCD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2360 DUP2 PUSH2 0x1BCD JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2377 JUMPI PUSH2 0x2376 PUSH2 0x2310 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x23B5 DUP3 PUSH2 0x1BCD JUMP JUMPDEST SWAP2 POP PUSH2 0x23C0 DUP4 PUSH2 0x1BCD JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x23D0 JUMPI PUSH2 0x23CF PUSH2 0x237E JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74207374616B65642062616C616E63650000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x240F PUSH1 0x1B DUP4 PUSH2 0x1C35 JUMP JUMPDEST SWAP2 POP PUSH2 0x241A DUP3 PUSH2 0x23DB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x243C DUP2 PUSH2 0x2403 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x244D DUP3 PUSH2 0x1BCD JUMP JUMPDEST SWAP2 POP PUSH2 0x2458 DUP4 PUSH2 0x1BCD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2470 JUMPI PUSH2 0x246F PUSH2 0x2310 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2489 PUSH0 DUP4 ADD DUP6 PUSH2 0x1C9B JUMP JUMPDEST PUSH2 0x2496 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1C9B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F7420656E7465722077697468207A65726F20746F6B656E73000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x24D1 PUSH1 0x1D DUP4 PUSH2 0x1C35 JUMP JUMPDEST SWAP2 POP PUSH2 0x24DC DUP3 PUSH2 0x249D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x24FE DUP2 PUSH2 0x24C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x250F DUP3 PUSH2 0x1BCD JUMP JUMPDEST SWAP2 POP PUSH2 0x251A DUP4 PUSH2 0x1BCD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2532 JUMPI PUSH2 0x2531 PUSH2 0x2310 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2542 DUP3 PUSH2 0x1BCD JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2574 JUMPI PUSH2 0x2573 PUSH2 0x2310 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x25DB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x25A0 JUMP JUMPDEST PUSH2 0x25E5 DUP7 DUP4 PUSH2 0x25A0 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2620 PUSH2 0x261B PUSH2 0x2616 DUP5 PUSH2 0x1BCD JUMP JUMPDEST PUSH2 0x25FD JUMP JUMPDEST PUSH2 0x1BCD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2639 DUP4 PUSH2 0x2606 JUMP JUMPDEST PUSH2 0x264D PUSH2 0x2645 DUP3 PUSH2 0x2627 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x25AC JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x2664 PUSH2 0x2655 JUMP JUMPDEST PUSH2 0x266F DUP2 DUP5 DUP5 PUSH2 0x2630 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2692 JUMPI PUSH2 0x2687 PUSH0 DUP3 PUSH2 0x265C JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2675 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x26D7 JUMPI PUSH2 0x26A8 DUP2 PUSH2 0x257F JUMP JUMPDEST PUSH2 0x26B1 DUP5 PUSH2 0x2591 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x26C0 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x26D4 PUSH2 0x26CC DUP6 PUSH2 0x2591 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x2674 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x26F7 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x26DC JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x270F DUP4 DUP4 PUSH2 0x26E8 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2728 DUP3 PUSH2 0x1C2B JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2741 JUMPI PUSH2 0x2740 PUSH2 0x1F74 JUMP JUMPDEST JUMPDEST PUSH2 0x274B DUP3 SLOAD PUSH2 0x22E0 JUMP JUMPDEST PUSH2 0x2756 DUP3 DUP3 DUP6 PUSH2 0x2696 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2787 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x2775 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x277F DUP6 DUP3 PUSH2 0x2704 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x27E6 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2795 DUP7 PUSH2 0x257F JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x27BC JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2797 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x27D9 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x27D5 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x26E8 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E6F207061727469636970616E747320696E20746865206C6F74746572790000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2822 PUSH1 0x1E DUP4 PUSH2 0x1C35 JUMP JUMPDEST SWAP2 POP PUSH2 0x282D DUP3 PUSH2 0x27EE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x284F DUP2 PUSH2 0x2816 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2870 PUSH2 0x286B DUP3 PUSH2 0x1BCD JUMP JUMPDEST PUSH2 0x2856 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2881 DUP3 DUP6 PUSH2 0x285F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x2891 DUP3 DUP5 PUSH2 0x285F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x28AB DUP3 PUSH2 0x1BCD JUMP JUMPDEST SWAP2 POP PUSH2 0x28B6 DUP4 PUSH2 0x1BCD JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x28C6 JUMPI PUSH2 0x28C5 PUSH2 0x237E JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x43616E6E6F74207374616B65207A65726F20746F6B656E730000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2932 PUSH1 0x18 DUP4 PUSH2 0x1C35 JUMP JUMPDEST SWAP2 POP PUSH2 0x293D DUP3 PUSH2 0x28FE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x295F DUP2 PUSH2 0x2926 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C69642070726F706F73616C20494400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x299A PUSH1 0x13 DUP4 PUSH2 0x1C35 JUMP JUMPDEST SWAP2 POP PUSH2 0x29A5 DUP3 PUSH2 0x2966 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x29C7 DUP2 PUSH2 0x298E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F207374616B656420746F6B656E7320746F20766F74650000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2A02 PUSH1 0x18 DUP4 PUSH2 0x1C35 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A0D DUP3 PUSH2 0x29CE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2A2F DUP2 PUSH2 0x29F6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2A49 PUSH0 DUP4 ADD DUP7 PUSH2 0x1E96 JUMP JUMPDEST PUSH2 0x2A56 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1C9B JUMP JUMPDEST PUSH2 0x2A63 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1C9B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY 0xA9 0xBC PUSH30 0x925FD2A79FBE5CA861C774E600BCCD1EC7EA33DD3B1284506BAC0A636473 PUSH16 0x6C634300081C00330000000000000000 ",
							"sourceMap": "209:7478:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1184:45;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;1779:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1364:30:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1306;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;7345:340;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1113:39;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;2849:97:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4776:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3781:756:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2707:82:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5874:300:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4643:347;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6226:541;;;:::i;:::-;;1426:40;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3004:116:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;2704:964:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:93:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3315:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6851:109:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1259:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5150:602;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7051:104;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3551:140:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1500:42:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1184:45:6;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1779:89:2:-;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;1364:30:6:-;;;;:::o;1306:::-;;;;;;;;;;;;;;;;;;;:::o;7345:340::-;7449:14;7479:16;7508:12;7499:6;:21;7498:63;;7539:11;7530:6;:20;7529:32;;7559:2;7529:32;;;7554:2;7529:32;7498:63;;;7524:2;7498:63;7479:82;;;;7571:18;7604:7;7593:8;:18;7592:28;;7619:1;7592:28;;;7615:1;7592:28;7571:49;;;;7668:10;7661:3;7650:8;7641:6;:17;;;;:::i;:::-;:23;;;;:::i;:::-;7640:38;;;;:::i;:::-;7631:47;;7469:216;;7345:340;;;;:::o;1113:39::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2849:97:2:-;2901:7;2927:12;;2920:19;;2849:97;:::o;4776:244::-;4863:4;4879:15;4897:12;:10;:12::i;:::-;4879:30;;4919:37;4935:4;4941:7;4950:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;5009:4;5002:11;;;4776:244;;;;;:::o;3781:756:6:-;3834:23;3860:6;:18;3867:10;3860:18;;;;;;;;;;;;;;;3834:44;;3916:6;3896:9;:16;;;:26;;3888:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;3965:19;3987:15;3965:37;;4012:16;4045:9;:29;;;4031:11;:43;;;;:::i;:::-;4012:62;;4085:15;4103:1;4085:19;;4129:16;;4118:8;:27;4114:176;;;4187:3;4181:2;4172:6;:11;;;;:::i;:::-;4171:19;;;;:::i;:::-;4161:29;;4219:33;4233:4;4250:1;4240:7;:11;;;;:::i;:::-;4219:5;:33::i;:::-;4114:176;4300:17;4329:7;4320:6;:16;;;;:::i;:::-;4300:36;;4366:6;4346:9;:16;;;:26;;;;;;;:::i;:::-;;;;;;;;4409:6;4382:11;:23;;;:33;;;;;;;:::i;:::-;;;;;;;;4426:47;4444:4;4451:10;4463:9;4426;:47::i;:::-;4499:10;4489:41;;;4511:9;4522:7;4489:41;;;;;;;:::i;:::-;;;;;;;;3824:713;;;;;3781:756;:::o;2707:82:2:-;2756:5;2780:2;2773:9;;2707:82;:::o;5874:300:6:-;5948:1;5939:6;:10;5931:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;5994:44;6004:10;6024:4;6031:6;5994:9;:44::i;:::-;6048:7;:15;;6069:10;6048:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6111:6;6090:7;:17;;;:27;;;;;;;:::i;:::-;;;;;;;;6148:10;6133:34;;;6160:6;6133:34;;;;;;:::i;:::-;;;;;;;;5874:300;:::o;4643:347::-;1531:13:0;:11;:13::i;:::-;4723:15:6::1;;:17;;;;;;;;;:::i;:::-;;;;;;4779:143;;;;;;;;4815:11;4779:143;;;;4850:1;4779:143;;;;4879:1;4779:143;;;;4906:5;4779:143;;;;::::0;4750:9:::1;:26;4760:15;;4750:26;;;;;;;;;;;:172;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4954:15;;4938:45;4971:11;4938:45;;;;;;:::i;:::-;;;;;;;;4643:347:::0;:::o;6226:541::-;1531:13:0;:11;:13::i;:::-;6317:1:6::1;6292:7;:15;;:22;;;;:26;6284:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;6364:19;6482:7;:15;;:22;;;;6434:15;6451:16;6417:51;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6407:62;;;;;;6386:93;;:118;;;;:::i;:::-;6364:140;;6514:14;6531:7;:15;;6547:11;6531:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6514:45;;6570:13;6586:7;:17;;;6570:33;;6633:1;6613:7;:17;;:21;;;;6651:7;:15;;;6644:22;;;;:::i;:::-;6677:39;6695:4;6702:6;6710:5;6677:9;:39::i;:::-;6746:6;6732:28;;;6754:5;6732:28;;;;;;:::i;:::-;;;;;;;;6274:493;;;6226:541::o:0;1426:40::-;;;;:::o;3004:116:2:-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2704:964:6:-;2789:1;2780:6;:10;2772:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;2829:44;2839:10;2859:4;2866:6;2829:9;:44::i;:::-;2884:23;2910:6;:18;2917:10;2910:18;;;;;;;;;;;;;;;2884:44;;2938:19;2960:15;2938:37;;3057:1;3038:9;:16;;;:20;3034:201;;;3074:16;3107:9;:29;;;3093:11;:43;;;;:::i;:::-;3074:62;;3181:43;3197:9;:16;;;3215:8;3181:15;:43::i;:::-;3150:9;:27;;;:74;;;;;;;:::i;:::-;;;;;;;;3060:175;3034:201;3265:6;3245:9;:16;;;:26;;;;;;;:::i;:::-;;;;;;;;3313:11;3281:9;:29;;:43;;;;3385:1;3365:22;;:8;:22;;;;:48;;;;;3403:10;3391:22;;:8;:22;;;;3365:48;3361:205;;;3429:13;3473:3;1541:1;3446:6;:23;;;;:::i;:::-;3445:31;;;;:::i;:::-;3429:47;;3490:22;3496:8;3506:5;3490;:22::i;:::-;3547:8;3526:9;:18;;;:29;;;;;;;;;;;;;;;;;;3415:151;3361:205;3603:6;3576:11;:23;;;:33;;;;;;;:::i;:::-;;;;;;;;3652:8;3625:36;;3632:10;3625:36;;;3644:6;3625:36;;;;;;:::i;:::-;;;;;;;;2762:906;;2704:964;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1981:93:2:-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;3315:178::-;3384:4;3400:13;3416:12;:10;:12::i;:::-;3400:28;;3438:27;3448:5;3455:2;3459:5;3438:9;:27::i;:::-;3482:4;3475:11;;;3315:178;;;;:::o;6851:109:6:-;6903:16;6938:7;:15;;6931:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6851:109;:::o;1259:22::-;;;;;;;;;:::o;5150:602::-;5217:25;5245:9;:21;5255:10;5245:21;;;;;;;;;;;5217:49;;5321:1;5290:8;:20;;5284:34;;;;;:::i;:::-;;;:38;5276:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;5357:20;5380:6;:18;5387:10;5380:18;;;;;;;;;;;;;;;:25;;;5357:48;;5438:1;5423:12;:16;5415:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;5483:7;5479:139;;;5527:12;5506:8;:17;;;:33;;;;;;;:::i;:::-;;;;;;;;5479:139;;;5595:12;5570:8;:21;;;:37;;;;;;;:::i;:::-;;;;;;;;5479:139;5670:8;:21;;;5650:8;:17;;;:41;5628:8;:19;;;:63;;;;;;;;;;;;;;;;;;5725:10;5707:38;;5713:10;5707:38;5737:7;5707:38;;;;;;:::i;:::-;;;;;;;;5207:545;;5150:602;;:::o;7051:104::-;7105:7;7131;:17;;;7124:24;;7051:104;:::o;3551:140:2:-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;1500:42:6:-;1541:1;1500:42;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;8726:128:2:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;10415:477::-;10514:24;10541:25;10551:5;10558:7;10541:9;:25::i;:::-;10514:52;;10600:17;10580:16;:37;10576:310;;10656:5;10637:16;:24;10633:130;;;10715:7;10724:16;10742:5;10688:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10633:130;10804:57;10813:5;10820:7;10848:5;10829:16;:24;10855:5;10804:8;:57::i;:::-;10576:310;10504:388;10415:477;;;:::o;5393:300::-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;:::-;5393:300;;;:::o;7984:206::-;8073:1;8054:21;;:7;:21;;;8050:89;;8125:1;8098:30;;;;;;;;;;;:::i;:::-;;;;;;;;8050:89;8148:35;8156:7;8173:1;8177:5;8148:7;:35::i;:::-;7984:206;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7458:208:2:-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;:::-;7458:208;;:::o;9701:432::-;9830:1;9813:19;;:5;:19;;;9809:89;;9884:1;9855:32;;;;;;;;;;;:::i;:::-;;;;;;;;9809:89;9930:1;9911:21;;:7;:21;;;9907:90;;9983:1;9955:31;;;;;;;;;;;:::i;:::-;;;;;;;;9907:90;10036:5;10006:11;:18;10018:5;10006:18;;;;;;;;;;;;;;;:27;10025:7;10006:27;;;;;;;;;;;;;;;:35;;;;10055:9;10051:76;;;10101:7;10085:31;;10094:5;10085:31;;;10110:5;10085:31;;;;;;:::i;:::-;;;;;;;;10051:76;9701:432;;;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:7:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:99::-;1077:6;1111:5;1105:12;1095:22;;1025:99;;;:::o;1130:169::-;1214:11;1248:6;1243:3;1236:19;1288:4;1283:3;1279:14;1264:29;;1130:169;;;;:::o;1305:139::-;1394:6;1389:3;1384;1378:23;1435:1;1426:6;1421:3;1417:16;1410:27;1305:139;;;:::o;1450:102::-;1491:6;1542:2;1538:7;1533:2;1526:5;1522:14;1518:28;1508:38;;1450:102;;;:::o;1558:377::-;1646:3;1674:39;1707:5;1674:39;:::i;:::-;1729:71;1793:6;1788:3;1729:71;:::i;:::-;1722:78;;1809:65;1867:6;1862:3;1855:4;1848:5;1844:16;1809:65;:::i;:::-;1899:29;1921:6;1899:29;:::i;:::-;1894:3;1890:39;1883:46;;1650:285;1558:377;;;;:::o;1941:118::-;2028:24;2046:5;2028:24;:::i;:::-;2023:3;2016:37;1941:118;;:::o;2065:90::-;2099:7;2142:5;2135:13;2128:21;2117:32;;2065:90;;;:::o;2161:109::-;2242:21;2257:5;2242:21;:::i;:::-;2237:3;2230:34;2161:109;;:::o;2276:632::-;2467:4;2505:3;2494:9;2490:19;2482:27;;2555:9;2549:4;2545:20;2541:1;2530:9;2526:17;2519:47;2583:78;2656:4;2647:6;2583:78;:::i;:::-;2575:86;;2671:72;2739:2;2728:9;2724:18;2715:6;2671:72;:::i;:::-;2753;2821:2;2810:9;2806:18;2797:6;2753:72;:::i;:::-;2835:66;2897:2;2886:9;2882:18;2873:6;2835:66;:::i;:::-;2276:632;;;;;;;:::o;2914:313::-;3027:4;3065:2;3054:9;3050:18;3042:26;;3114:9;3108:4;3104:20;3100:1;3089:9;3085:17;3078:47;3142:78;3215:4;3206:6;3142:78;:::i;:::-;3134:86;;2914:313;;;;:::o;3233:126::-;3270:7;3310:42;3303:5;3299:54;3288:65;;3233:126;;;:::o;3365:96::-;3402:7;3431:24;3449:5;3431:24;:::i;:::-;3420:35;;3365:96;;;:::o;3467:122::-;3540:24;3558:5;3540:24;:::i;:::-;3533:5;3530:35;3520:63;;3579:1;3576;3569:12;3520:63;3467:122;:::o;3595:139::-;3641:5;3679:6;3666:20;3657:29;;3695:33;3722:5;3695:33;:::i;:::-;3595:139;;;;:::o;3740:474::-;3808:6;3816;3865:2;3853:9;3844:7;3840:23;3836:32;3833:119;;;3871:79;;:::i;:::-;3833:119;3991:1;4016:53;4061:7;4052:6;4041:9;4037:22;4016:53;:::i;:::-;4006:63;;3962:117;4118:2;4144:53;4189:7;4180:6;4169:9;4165:22;4144:53;:::i;:::-;4134:63;;4089:118;3740:474;;;;;:::o;4220:210::-;4307:4;4345:2;4334:9;4330:18;4322:26;;4358:65;4420:1;4409:9;4405:17;4396:6;4358:65;:::i;:::-;4220:210;;;;:::o;4436:222::-;4529:4;4567:2;4556:9;4552:18;4544:26;;4580:71;4648:1;4637:9;4633:17;4624:6;4580:71;:::i;:::-;4436:222;;;;:::o;4664:442::-;4813:4;4851:2;4840:9;4836:18;4828:26;;4864:71;4932:1;4921:9;4917:17;4908:6;4864:71;:::i;:::-;4945:72;5013:2;5002:9;4998:18;4989:6;4945:72;:::i;:::-;5027;5095:2;5084:9;5080:18;5071:6;5027:72;:::i;:::-;4664:442;;;;;;:::o;5112:474::-;5180:6;5188;5237:2;5225:9;5216:7;5212:23;5208:32;5205:119;;;5243:79;;:::i;:::-;5205:119;5363:1;5388:53;5433:7;5424:6;5413:9;5409:22;5388:53;:::i;:::-;5378:63;;5334:117;5490:2;5516:53;5561:7;5552:6;5541:9;5537:22;5516:53;:::i;:::-;5506:63;;5461:118;5112:474;;;;;:::o;5592:329::-;5651:6;5700:2;5688:9;5679:7;5675:23;5671:32;5668:119;;;5706:79;;:::i;:::-;5668:119;5826:1;5851:53;5896:7;5887:6;5876:9;5872:22;5851:53;:::i;:::-;5841:63;;5797:117;5592:329;;;;:::o;5927:118::-;6014:24;6032:5;6014:24;:::i;:::-;6009:3;6002:37;5927:118;;:::o;6051:553::-;6228:4;6266:3;6255:9;6251:19;6243:27;;6280:71;6348:1;6337:9;6333:17;6324:6;6280:71;:::i;:::-;6361:72;6429:2;6418:9;6414:18;6405:6;6361:72;:::i;:::-;6443;6511:2;6500:9;6496:18;6487:6;6443:72;:::i;:::-;6525;6593:2;6582:9;6578:18;6569:6;6525:72;:::i;:::-;6051:553;;;;;;;:::o;6610:619::-;6687:6;6695;6703;6752:2;6740:9;6731:7;6727:23;6723:32;6720:119;;;6758:79;;:::i;:::-;6720:119;6878:1;6903:53;6948:7;6939:6;6928:9;6924:22;6903:53;:::i;:::-;6893:63;;6849:117;7005:2;7031:53;7076:7;7067:6;7056:9;7052:22;7031:53;:::i;:::-;7021:63;;6976:118;7133:2;7159:53;7204:7;7195:6;7184:9;7180:22;7159:53;:::i;:::-;7149:63;;7104:118;6610:619;;;;;:::o;7235:86::-;7270:7;7310:4;7303:5;7299:16;7288:27;;7235:86;;;:::o;7327:112::-;7410:22;7426:5;7410:22;:::i;:::-;7405:3;7398:35;7327:112;;:::o;7445:214::-;7534:4;7572:2;7561:9;7557:18;7549:26;;7585:67;7649:1;7638:9;7634:17;7625:6;7585:67;:::i;:::-;7445:214;;;;:::o;7665:117::-;7774:1;7771;7764:12;7788:117;7897:1;7894;7887:12;7911:180;7959:77;7956:1;7949:88;8056:4;8053:1;8046:15;8080:4;8077:1;8070:15;8097:281;8180:27;8202:4;8180:27;:::i;:::-;8172:6;8168:40;8310:6;8298:10;8295:22;8274:18;8262:10;8259:34;8256:62;8253:88;;;8321:18;;:::i;:::-;8253:88;8361:10;8357:2;8350:22;8140:238;8097:281;;:::o;8384:129::-;8418:6;8445:20;;:::i;:::-;8435:30;;8474:33;8502:4;8494:6;8474:33;:::i;:::-;8384:129;;;:::o;8519:308::-;8581:4;8671:18;8663:6;8660:30;8657:56;;;8693:18;;:::i;:::-;8657:56;8731:29;8753:6;8731:29;:::i;:::-;8723:37;;8815:4;8809;8805:15;8797:23;;8519:308;;;:::o;8833:148::-;8931:6;8926:3;8921;8908:30;8972:1;8963:6;8958:3;8954:16;8947:27;8833:148;;;:::o;8987:425::-;9065:5;9090:66;9106:49;9148:6;9106:49;:::i;:::-;9090:66;:::i;:::-;9081:75;;9179:6;9172:5;9165:21;9217:4;9210:5;9206:16;9255:3;9246:6;9241:3;9237:16;9234:25;9231:112;;;9262:79;;:::i;:::-;9231:112;9352:54;9399:6;9394:3;9389;9352:54;:::i;:::-;9071:341;8987:425;;;;;:::o;9432:340::-;9488:5;9537:3;9530:4;9522:6;9518:17;9514:27;9504:122;;9545:79;;:::i;:::-;9504:122;9662:6;9649:20;9687:79;9762:3;9754:6;9747:4;9739:6;9735:17;9687:79;:::i;:::-;9678:88;;9494:278;9432:340;;;;:::o;9778:509::-;9847:6;9896:2;9884:9;9875:7;9871:23;9867:32;9864:119;;;9902:79;;:::i;:::-;9864:119;10050:1;10039:9;10035:17;10022:31;10080:18;10072:6;10069:30;10066:117;;;10102:79;;:::i;:::-;10066:117;10207:63;10262:7;10253:6;10242:9;10238:22;10207:63;:::i;:::-;10197:73;;9993:287;9778:509;;;;:::o;10293:474::-;10361:6;10369;10418:2;10406:9;10397:7;10393:23;10389:32;10386:119;;;10424:79;;:::i;:::-;10386:119;10544:1;10569:53;10614:7;10605:6;10594:9;10590:22;10569:53;:::i;:::-;10559:63;;10515:117;10671:2;10697:53;10742:7;10733:6;10722:9;10718:22;10697:53;:::i;:::-;10687:63;;10642:118;10293:474;;;;;:::o;10773:222::-;10866:4;10904:2;10893:9;10889:18;10881:26;;10917:71;10985:1;10974:9;10970:17;10961:6;10917:71;:::i;:::-;10773:222;;;;:::o;11001:114::-;11068:6;11102:5;11096:12;11086:22;;11001:114;;;:::o;11121:184::-;11220:11;11254:6;11249:3;11242:19;11294:4;11289:3;11285:14;11270:29;;11121:184;;;;:::o;11311:132::-;11378:4;11401:3;11393:11;;11431:4;11426:3;11422:14;11414:22;;11311:132;;;:::o;11449:108::-;11526:24;11544:5;11526:24;:::i;:::-;11521:3;11514:37;11449:108;;:::o;11563:179::-;11632:10;11653:46;11695:3;11687:6;11653:46;:::i;:::-;11731:4;11726:3;11722:14;11708:28;;11563:179;;;;:::o;11748:113::-;11818:4;11850;11845:3;11841:14;11833:22;;11748:113;;;:::o;11897:732::-;12016:3;12045:54;12093:5;12045:54;:::i;:::-;12115:86;12194:6;12189:3;12115:86;:::i;:::-;12108:93;;12225:56;12275:5;12225:56;:::i;:::-;12304:7;12335:1;12320:284;12345:6;12342:1;12339:13;12320:284;;;12421:6;12415:13;12448:63;12507:3;12492:13;12448:63;:::i;:::-;12441:70;;12534:60;12587:6;12534:60;:::i;:::-;12524:70;;12380:224;12367:1;12364;12360:9;12355:14;;12320:284;;;12324:14;12620:3;12613:10;;12021:608;;;11897:732;;;;:::o;12635:373::-;12778:4;12816:2;12805:9;12801:18;12793:26;;12865:9;12859:4;12855:20;12851:1;12840:9;12836:17;12829:47;12893:108;12996:4;12987:6;12893:108;:::i;:::-;12885:116;;12635:373;;;;:::o;13014:116::-;13084:21;13099:5;13084:21;:::i;:::-;13077:5;13074:32;13064:60;;13120:1;13117;13110:12;13064:60;13014:116;:::o;13136:133::-;13179:5;13217:6;13204:20;13195:29;;13233:30;13257:5;13233:30;:::i;:::-;13136:133;;;;:::o;13275:468::-;13340:6;13348;13397:2;13385:9;13376:7;13372:23;13368:32;13365:119;;;13403:79;;:::i;:::-;13365:119;13523:1;13548:53;13593:7;13584:6;13573:9;13569:22;13548:53;:::i;:::-;13538:63;;13494:117;13650:2;13676:50;13718:7;13709:6;13698:9;13694:22;13676:50;:::i;:::-;13666:60;;13621:115;13275:468;;;;;:::o;13749:474::-;13817:6;13825;13874:2;13862:9;13853:7;13849:23;13845:32;13842:119;;;13880:79;;:::i;:::-;13842:119;14000:1;14025:53;14070:7;14061:6;14050:9;14046:22;14025:53;:::i;:::-;14015:63;;13971:117;14127:2;14153:53;14198:7;14189:6;14178:9;14174:22;14153:53;:::i;:::-;14143:63;;14098:118;13749:474;;;;;:::o;14229:180::-;14277:77;14274:1;14267:88;14374:4;14371:1;14364:15;14398:4;14395:1;14388:15;14415:320;14459:6;14496:1;14490:4;14486:12;14476:22;;14543:1;14537:4;14533:12;14564:18;14554:81;;14620:4;14612:6;14608:17;14598:27;;14554:81;14682:2;14674:6;14671:14;14651:18;14648:38;14645:84;;14701:18;;:::i;:::-;14645:84;14466:269;14415:320;;;:::o;14741:180::-;14789:77;14786:1;14779:88;14886:4;14883:1;14876:15;14910:4;14907:1;14900:15;14927:410;14967:7;14990:20;15008:1;14990:20;:::i;:::-;14985:25;;15024:20;15042:1;15024:20;:::i;:::-;15019:25;;15079:1;15076;15072:9;15101:30;15119:11;15101:30;:::i;:::-;15090:41;;15280:1;15271:7;15267:15;15264:1;15261:22;15241:1;15234:9;15214:83;15191:139;;15310:18;;:::i;:::-;15191:139;14975:362;14927:410;;;;:::o;15343:180::-;15391:77;15388:1;15381:88;15488:4;15485:1;15478:15;15512:4;15509:1;15502:15;15529:185;15569:1;15586:20;15604:1;15586:20;:::i;:::-;15581:25;;15620:20;15638:1;15620:20;:::i;:::-;15615:25;;15659:1;15649:35;;15664:18;;:::i;:::-;15649:35;15706:1;15703;15699:9;15694:14;;15529:185;;;;:::o;15720:177::-;15860:29;15856:1;15848:6;15844:14;15837:53;15720:177;:::o;15903:366::-;16045:3;16066:67;16130:2;16125:3;16066:67;:::i;:::-;16059:74;;16142:93;16231:3;16142:93;:::i;:::-;16260:2;16255:3;16251:12;16244:19;;15903:366;;;:::o;16275:419::-;16441:4;16479:2;16468:9;16464:18;16456:26;;16528:9;16522:4;16518:20;16514:1;16503:9;16499:17;16492:47;16556:131;16682:4;16556:131;:::i;:::-;16548:139;;16275:419;;;:::o;16700:194::-;16740:4;16760:20;16778:1;16760:20;:::i;:::-;16755:25;;16794:20;16812:1;16794:20;:::i;:::-;16789:25;;16838:1;16835;16831:9;16823:17;;16862:1;16856:4;16853:11;16850:37;;;16867:18;;:::i;:::-;16850:37;16700:194;;;;:::o;16900:332::-;17021:4;17059:2;17048:9;17044:18;17036:26;;17072:71;17140:1;17129:9;17125:17;17116:6;17072:71;:::i;:::-;17153:72;17221:2;17210:9;17206:18;17197:6;17153:72;:::i;:::-;16900:332;;;;;:::o;17238:179::-;17378:31;17374:1;17366:6;17362:14;17355:55;17238:179;:::o;17423:366::-;17565:3;17586:67;17650:2;17645:3;17586:67;:::i;:::-;17579:74;;17662:93;17751:3;17662:93;:::i;:::-;17780:2;17775:3;17771:12;17764:19;;17423:366;;;:::o;17795:419::-;17961:4;17999:2;17988:9;17984:18;17976:26;;18048:9;18042:4;18038:20;18034:1;18023:9;18019:17;18012:47;18076:131;18202:4;18076:131;:::i;:::-;18068:139;;17795:419;;;:::o;18220:191::-;18260:3;18279:20;18297:1;18279:20;:::i;:::-;18274:25;;18313:20;18331:1;18313:20;:::i;:::-;18308:25;;18356:1;18353;18349:9;18342:16;;18377:3;18374:1;18371:10;18368:36;;;18384:18;;:::i;:::-;18368:36;18220:191;;;;:::o;18417:233::-;18456:3;18479:24;18497:5;18479:24;:::i;:::-;18470:33;;18525:66;18518:5;18515:77;18512:103;;18595:18;;:::i;:::-;18512:103;18642:1;18635:5;18631:13;18624:20;;18417:233;;;:::o;18656:141::-;18705:4;18728:3;18720:11;;18751:3;18748:1;18741:14;18785:4;18782:1;18772:18;18764:26;;18656:141;;;:::o;18803:93::-;18840:6;18887:2;18882;18875:5;18871:14;18867:23;18857:33;;18803:93;;;:::o;18902:107::-;18946:8;18996:5;18990:4;18986:16;18965:37;;18902:107;;;;:::o;19015:393::-;19084:6;19134:1;19122:10;19118:18;19157:97;19187:66;19176:9;19157:97;:::i;:::-;19275:39;19305:8;19294:9;19275:39;:::i;:::-;19263:51;;19347:4;19343:9;19336:5;19332:21;19323:30;;19396:4;19386:8;19382:19;19375:5;19372:30;19362:40;;19091:317;;19015:393;;;;;:::o;19414:60::-;19442:3;19463:5;19456:12;;19414:60;;;:::o;19480:142::-;19530:9;19563:53;19581:34;19590:24;19608:5;19590:24;:::i;:::-;19581:34;:::i;:::-;19563:53;:::i;:::-;19550:66;;19480:142;;;:::o;19628:75::-;19671:3;19692:5;19685:12;;19628:75;;;:::o;19709:269::-;19819:39;19850:7;19819:39;:::i;:::-;19880:91;19929:41;19953:16;19929:41;:::i;:::-;19921:6;19914:4;19908:11;19880:91;:::i;:::-;19874:4;19867:105;19785:193;19709:269;;;:::o;19984:73::-;20029:3;20050:1;20043:8;;19984:73;:::o;20063:189::-;20140:32;;:::i;:::-;20181:65;20239:6;20231;20225:4;20181:65;:::i;:::-;20116:136;20063:189;;:::o;20258:186::-;20318:120;20335:3;20328:5;20325:14;20318:120;;;20389:39;20426:1;20419:5;20389:39;:::i;:::-;20362:1;20355:5;20351:13;20342:22;;20318:120;;;20258:186;;:::o;20450:543::-;20551:2;20546:3;20543:11;20540:446;;;20585:38;20617:5;20585:38;:::i;:::-;20669:29;20687:10;20669:29;:::i;:::-;20659:8;20655:44;20852:2;20840:10;20837:18;20834:49;;;20873:8;20858:23;;20834:49;20896:80;20952:22;20970:3;20952:22;:::i;:::-;20942:8;20938:37;20925:11;20896:80;:::i;:::-;20555:431;;20540:446;20450:543;;;:::o;20999:117::-;21053:8;21103:5;21097:4;21093:16;21072:37;;20999:117;;;;:::o;21122:169::-;21166:6;21199:51;21247:1;21243:6;21235:5;21232:1;21228:13;21199:51;:::i;:::-;21195:56;21280:4;21274;21270:15;21260:25;;21173:118;21122:169;;;;:::o;21296:295::-;21372:4;21518:29;21543:3;21537:4;21518:29;:::i;:::-;21510:37;;21580:3;21577:1;21573:11;21567:4;21564:21;21556:29;;21296:295;;;;:::o;21596:1395::-;21713:37;21746:3;21713:37;:::i;:::-;21815:18;21807:6;21804:30;21801:56;;;21837:18;;:::i;:::-;21801:56;21881:38;21913:4;21907:11;21881:38;:::i;:::-;21966:67;22026:6;22018;22012:4;21966:67;:::i;:::-;22060:1;22084:4;22071:17;;22116:2;22108:6;22105:14;22133:1;22128:618;;;;22790:1;22807:6;22804:77;;;22856:9;22851:3;22847:19;22841:26;22832:35;;22804:77;22907:67;22967:6;22960:5;22907:67;:::i;:::-;22901:4;22894:81;22763:222;22098:887;;22128:618;22180:4;22176:9;22168:6;22164:22;22214:37;22246:4;22214:37;:::i;:::-;22273:1;22287:208;22301:7;22298:1;22295:14;22287:208;;;22380:9;22375:3;22371:19;22365:26;22357:6;22350:42;22431:1;22423:6;22419:14;22409:24;;22478:2;22467:9;22463:18;22450:31;;22324:4;22321:1;22317:12;22312:17;;22287:208;;;22523:6;22514:7;22511:19;22508:179;;;22581:9;22576:3;22572:19;22566:26;22624:48;22666:4;22658:6;22654:17;22643:9;22624:48;:::i;:::-;22616:6;22609:64;22531:156;22508:179;22733:1;22729;22721:6;22717:14;22713:22;22707:4;22700:36;22135:611;;;22098:887;;21688:1303;;;21596:1395;;:::o;22997:180::-;23137:32;23133:1;23125:6;23121:14;23114:56;22997:180;:::o;23183:366::-;23325:3;23346:67;23410:2;23405:3;23346:67;:::i;:::-;23339:74;;23422:93;23511:3;23422:93;:::i;:::-;23540:2;23535:3;23531:12;23524:19;;23183:366;;;:::o;23555:419::-;23721:4;23759:2;23748:9;23744:18;23736:26;;23808:9;23802:4;23798:20;23794:1;23783:9;23779:17;23772:47;23836:131;23962:4;23836:131;:::i;:::-;23828:139;;23555:419;;;:::o;23980:79::-;24019:7;24048:5;24037:16;;23980:79;;;:::o;24065:157::-;24170:45;24190:24;24208:5;24190:24;:::i;:::-;24170:45;:::i;:::-;24165:3;24158:58;24065:157;;:::o;24228:397::-;24368:3;24383:75;24454:3;24445:6;24383:75;:::i;:::-;24483:2;24478:3;24474:12;24467:19;;24496:75;24567:3;24558:6;24496:75;:::i;:::-;24596:2;24591:3;24587:12;24580:19;;24616:3;24609:10;;24228:397;;;;;:::o;24631:176::-;24663:1;24680:20;24698:1;24680:20;:::i;:::-;24675:25;;24714:20;24732:1;24714:20;:::i;:::-;24709:25;;24753:1;24743:35;;24758:18;;:::i;:::-;24743:35;24799:1;24796;24792:9;24787:14;;24631:176;;;;:::o;24813:180::-;24861:77;24858:1;24851:88;24958:4;24955:1;24948:15;24982:4;24979:1;24972:15;24999:174;25139:26;25135:1;25127:6;25123:14;25116:50;24999:174;:::o;25179:366::-;25321:3;25342:67;25406:2;25401:3;25342:67;:::i;:::-;25335:74;;25418:93;25507:3;25418:93;:::i;:::-;25536:2;25531:3;25527:12;25520:19;;25179:366;;;:::o;25551:419::-;25717:4;25755:2;25744:9;25740:18;25732:26;;25804:9;25798:4;25794:20;25790:1;25779:9;25775:17;25768:47;25832:131;25958:4;25832:131;:::i;:::-;25824:139;;25551:419;;;:::o;25976:169::-;26116:21;26112:1;26104:6;26100:14;26093:45;25976:169;:::o;26151:366::-;26293:3;26314:67;26378:2;26373:3;26314:67;:::i;:::-;26307:74;;26390:93;26479:3;26390:93;:::i;:::-;26508:2;26503:3;26499:12;26492:19;;26151:366;;;:::o;26523:419::-;26689:4;26727:2;26716:9;26712:18;26704:26;;26776:9;26770:4;26766:20;26762:1;26751:9;26747:17;26740:47;26804:131;26930:4;26804:131;:::i;:::-;26796:139;;26523:419;;;:::o;26948:174::-;27088:26;27084:1;27076:6;27072:14;27065:50;26948:174;:::o;27128:366::-;27270:3;27291:67;27355:2;27350:3;27291:67;:::i;:::-;27284:74;;27367:93;27456:3;27367:93;:::i;:::-;27485:2;27480:3;27476:12;27469:19;;27128:366;;;:::o;27500:419::-;27666:4;27704:2;27693:9;27689:18;27681:26;;27753:9;27747:4;27743:20;27739:1;27728:9;27724:17;27717:47;27781:131;27907:4;27781:131;:::i;:::-;27773:139;;27500:419;;;:::o;27925:442::-;28074:4;28112:2;28101:9;28097:18;28089:26;;28125:71;28193:1;28182:9;28178:17;28169:6;28125:71;:::i;:::-;28206:72;28274:2;28263:9;28259:18;28250:6;28206:72;:::i;:::-;28288;28356:2;28345:9;28341:18;28332:6;28288:72;:::i;:::-;27925:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2182600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"REFERRAL_BONUS()": "413",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2896",
								"calculateReward(uint256,uint256)": "infinite",
								"createProposal(string)": "infinite",
								"decimals()": "383",
								"drawLotteryWinner()": "infinite",
								"enterLottery(uint256)": "infinite",
								"getLotteryEntries()": "infinite",
								"getLotteryPrizePool()": "2482",
								"lottery()": "2506",
								"minStakeDuration()": "2471",
								"name()": "infinite",
								"owner()": "2582",
								"proposalCounter()": "2471",
								"proposals(uint256)": "infinite",
								"renounceOwnership()": "infinite",
								"stake(uint256,address)": "infinite",
								"stakes(address)": "infinite",
								"stakingPool()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2478",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"vote(uint256,bool)": "infinite",
								"withdraw(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 209,
									"end": 7687,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 209,
									"end": 7687,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 209,
									"end": 7687,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1460,
									"end": 1466,
									"name": "PUSH",
									"source": 6,
									"value": "93A80"
								},
								{
									"begin": 1426,
									"end": 1466,
									"name": "PUSH",
									"source": 6,
									"value": "E"
								},
								{
									"begin": 1426,
									"end": 1466,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2228,
									"end": 2555,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 2228,
									"end": 2555,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2228,
									"end": 2555,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2228,
									"end": 2555,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2228,
									"end": 2555,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2228,
									"end": 2555,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2228,
									"end": 2555,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2228,
									"end": 2555,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 2228,
									"end": 2555,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2228,
									"end": 2555,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2228,
									"end": 2555,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2228,
									"end": 2555,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2228,
									"end": 2555,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2228,
									"end": 2555,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 2228,
									"end": 2555,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 2228,
									"end": 2555,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 2228,
									"end": 2555,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2228,
									"end": 2555,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 2228,
									"end": 2555,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2228,
									"end": 2555,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 2228,
									"end": 2555,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2228,
									"end": 2555,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2228,
									"end": 2555,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2228,
									"end": 2555,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2228,
									"end": 2555,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2228,
									"end": 2555,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2228,
									"end": 2555,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2228,
									"end": 2555,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2228,
									"end": 2555,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 2228,
									"end": 2555,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2228,
									"end": 2555,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2228,
									"end": 2555,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 2228,
									"end": 2555,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2228,
									"end": 2555,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 2228,
									"end": 2555,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2374,
									"end": 2384,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "4672657361436F696E0000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "4652455341000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1675,
									"end": 1680,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1667,
									"end": 1680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1700,
									"end": 1707,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1690,
									"end": 1707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2396,
									"end": 2429,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 2402,
									"end": 2412,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 2414,
									"end": 2428,
									"modifierDepth": 2,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2396,
									"end": 2401,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 2396,
									"end": 2401,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2396,
									"end": 2401,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 2396,
									"end": 2429,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2396,
									"end": 2429,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 2396,
									"end": 2429,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2396,
									"end": 2429,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 2396,
									"end": 2429,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2487,
									"end": 2498,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2462,
									"end": 2473,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "A"
								},
								{
									"begin": 2462,
									"end": 2484,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2462,
									"end": 2484,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2462,
									"end": 2498,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2462,
									"end": 2498,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2462,
									"end": 2498,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2462,
									"end": 2498,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2535,
									"end": 2548,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2508,
									"end": 2519,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "A"
								},
								{
									"begin": 2508,
									"end": 2532,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2508,
									"end": 2532,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2508,
									"end": 2548,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2508,
									"end": 2548,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2508,
									"end": 2548,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2508,
									"end": 2548,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2228,
									"end": 2555,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2228,
									"end": 2555,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2228,
									"end": 2555,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 209,
									"end": 7687,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 209,
									"end": 7687,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7547,
									"end": 7548,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7535,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7601,
									"end": 7602,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 2,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 7572,
									"end": 7604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "tag",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 7640,
									"end": 7641,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7644,
									"end": 7651,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7653,
									"end": 7658,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7659,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7458,
									"end": 7666,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "tag",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6113,
									"end": 6114,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6097,
									"end": 6101,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6249,
									"end": 6254,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 6233,
									"end": 6254,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6285,
									"end": 6304,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6316,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6317,
									"end": 6321,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6285,
									"end": 6322,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6285,
									"end": 6322,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6354,
									"end": 6359,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6340,
									"end": 6351,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6340,
									"end": 6359,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6411,
									"end": 6415,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6417,
									"end": 6428,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6430,
									"end": 6435,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 2,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 6386,
									"end": 6436,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "tag",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "tag",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6603,
									"end": 6608,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6589,
									"end": 6600,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6589,
									"end": 6608,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6580,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6581,
									"end": 6585,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 6633,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6661,
									"end": 6662,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6647,
									"end": 6649,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6826,
									"end": 6831,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7038,
									"end": 7043,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7030,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7031,
									"end": 7033,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7098,
									"end": 7100,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7092,
									"end": 7096,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7102,
									"end": 7107,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 7083,
									"end": 7108,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "tag",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 334,
									"end": 411,
									"name": "tag",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 334,
									"end": 411,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 405,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 389,
									"end": 405,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 389,
									"end": 405,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 334,
									"end": 411,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 411,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 417,
									"end": 539,
									"name": "tag",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 417,
									"end": 539,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 508,
									"end": 513,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 490,
									"end": 514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 490,
									"end": 514,
									"name": "tag",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 483,
									"end": 488,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 480,
									"end": 515,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 470,
									"end": 533,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 529,
									"end": 530,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 527,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 519,
									"end": 531,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 470,
									"end": 533,
									"name": "tag",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 417,
									"end": 539,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 417,
									"end": 539,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 545,
									"end": 688,
									"name": "tag",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 545,
									"end": 688,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 602,
									"end": 607,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 639,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 627,
									"end": 640,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 618,
									"end": 640,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 618,
									"end": 640,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 676,
									"end": 681,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 649,
									"end": 682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 649,
									"end": 682,
									"name": "tag",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 545,
									"end": 688,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 694,
									"end": 1357,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 694,
									"end": 1357,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 782,
									"end": 788,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 790,
									"end": 796,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 798,
									"end": 804,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 849,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 835,
									"end": 844,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 826,
									"end": 833,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 822,
									"end": 845,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 818,
									"end": 850,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 815,
									"end": 934,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 815,
									"end": 934,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 815,
									"end": 934,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 853,
									"end": 932,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 853,
									"end": 932,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 853,
									"end": 932,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 853,
									"end": 932,
									"name": "tag",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 853,
									"end": 932,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 815,
									"end": 934,
									"name": "tag",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 815,
									"end": 934,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 973,
									"end": 974,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 998,
									"end": 1062,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 1054,
									"end": 1061,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1045,
									"end": 1051,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1034,
									"end": 1043,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 1030,
									"end": 1052,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 998,
									"end": 1062,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 998,
									"end": 1062,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 998,
									"end": 1062,
									"name": "tag",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 998,
									"end": 1062,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 988,
									"end": 1062,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 988,
									"end": 1062,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 944,
									"end": 1072,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1111,
									"end": 1113,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1137,
									"end": 1201,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 1193,
									"end": 1200,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1184,
									"end": 1190,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1173,
									"end": 1182,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1191,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1137,
									"end": 1201,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 1137,
									"end": 1201,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1137,
									"end": 1201,
									"name": "tag",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 1137,
									"end": 1201,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1127,
									"end": 1201,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1127,
									"end": 1201,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1082,
									"end": 1211,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1250,
									"end": 1252,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1276,
									"end": 1340,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 1332,
									"end": 1339,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1323,
									"end": 1329,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1312,
									"end": 1321,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 1308,
									"end": 1330,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1276,
									"end": 1340,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 1276,
									"end": 1340,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1276,
									"end": 1340,
									"name": "tag",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 1276,
									"end": 1340,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1266,
									"end": 1340,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1266,
									"end": 1340,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1221,
									"end": 1350,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 694,
									"end": 1357,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 694,
									"end": 1357,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 694,
									"end": 1357,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 694,
									"end": 1357,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 694,
									"end": 1357,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 694,
									"end": 1357,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1363,
									"end": 1462,
									"name": "tag",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 1363,
									"end": 1462,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1415,
									"end": 1421,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1449,
									"end": 1454,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1443,
									"end": 1455,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1433,
									"end": 1455,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1433,
									"end": 1455,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1363,
									"end": 1462,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1363,
									"end": 1462,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1363,
									"end": 1462,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1363,
									"end": 1462,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1468,
									"end": 1648,
									"name": "tag",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 1468,
									"end": 1648,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1516,
									"end": 1593,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1513,
									"end": 1514,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1506,
									"end": 1594,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1613,
									"end": 1617,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 1610,
									"end": 1611,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1603,
									"end": 1618,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1637,
									"end": 1641,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1634,
									"end": 1635,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1627,
									"end": 1642,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1654,
									"end": 1834,
									"name": "tag",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 1654,
									"end": 1834,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1702,
									"end": 1779,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1699,
									"end": 1700,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1692,
									"end": 1780,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1799,
									"end": 1803,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1796,
									"end": 1797,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1789,
									"end": 1804,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1823,
									"end": 1827,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1820,
									"end": 1821,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1813,
									"end": 1828,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1840,
									"end": 2160,
									"name": "tag",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 1840,
									"end": 2160,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1884,
									"end": 1890,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1921,
									"end": 1922,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1915,
									"end": 1919,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1911,
									"end": 1923,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 1901,
									"end": 1923,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1901,
									"end": 1923,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1968,
									"end": 1969,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1962,
									"end": 1966,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1958,
									"end": 1970,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1989,
									"end": 2007,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1979,
									"end": 2060,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 1979,
									"end": 2060,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2045,
									"end": 2049,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 2037,
									"end": 2043,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2033,
									"end": 2050,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2023,
									"end": 2050,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2023,
									"end": 2050,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1979,
									"end": 2060,
									"name": "tag",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 1979,
									"end": 2060,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2107,
									"end": 2109,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2099,
									"end": 2105,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2096,
									"end": 2110,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2076,
									"end": 2094,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2073,
									"end": 2111,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 2070,
									"end": 2154,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 2070,
									"end": 2154,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2126,
									"end": 2144,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 2126,
									"end": 2144,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 2126,
									"end": 2144,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2126,
									"end": 2144,
									"name": "tag",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 2126,
									"end": 2144,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2070,
									"end": 2154,
									"name": "tag",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 2070,
									"end": 2154,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1891,
									"end": 2160,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1840,
									"end": 2160,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1840,
									"end": 2160,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1840,
									"end": 2160,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1840,
									"end": 2160,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2166,
									"end": 2307,
									"name": "tag",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 2166,
									"end": 2307,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2215,
									"end": 2219,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2238,
									"end": 2241,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2230,
									"end": 2241,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2230,
									"end": 2241,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2261,
									"end": 2264,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2258,
									"end": 2259,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2251,
									"end": 2265,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2295,
									"end": 2299,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2292,
									"end": 2293,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2282,
									"end": 2300,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 2274,
									"end": 2300,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2274,
									"end": 2300,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2166,
									"end": 2307,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2166,
									"end": 2307,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2166,
									"end": 2307,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2166,
									"end": 2307,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2313,
									"end": 2406,
									"name": "tag",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 2313,
									"end": 2406,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2350,
									"end": 2356,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2397,
									"end": 2399,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2392,
									"end": 2394,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2385,
									"end": 2390,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2381,
									"end": 2395,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2377,
									"end": 2400,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 2367,
									"end": 2400,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2367,
									"end": 2400,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2313,
									"end": 2406,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2313,
									"end": 2406,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2313,
									"end": 2406,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2313,
									"end": 2406,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2412,
									"end": 2519,
									"name": "tag",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 2412,
									"end": 2519,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2456,
									"end": 2464,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2506,
									"end": 2511,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2500,
									"end": 2504,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2496,
									"end": 2512,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 2475,
									"end": 2512,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2475,
									"end": 2512,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2412,
									"end": 2519,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2412,
									"end": 2519,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2412,
									"end": 2519,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2412,
									"end": 2519,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2412,
									"end": 2519,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2525,
									"end": 2918,
									"name": "tag",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 2525,
									"end": 2918,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2594,
									"end": 2600,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2644,
									"end": 2645,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 2632,
									"end": 2642,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2628,
									"end": 2646,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 2667,
									"end": 2764,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 2697,
									"end": 2763,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2686,
									"end": 2695,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2667,
									"end": 2764,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 2667,
									"end": 2764,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2667,
									"end": 2764,
									"name": "tag",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 2667,
									"end": 2764,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2785,
									"end": 2824,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 2815,
									"end": 2823,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 2804,
									"end": 2813,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2785,
									"end": 2824,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 2785,
									"end": 2824,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2785,
									"end": 2824,
									"name": "tag",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 2785,
									"end": 2824,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2773,
									"end": 2824,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 2773,
									"end": 2824,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2857,
									"end": 2861,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2853,
									"end": 2862,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 2846,
									"end": 2851,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2842,
									"end": 2863,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2833,
									"end": 2863,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 2833,
									"end": 2863,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2906,
									"end": 2910,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 2892,
									"end": 2911,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2885,
									"end": 2890,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2882,
									"end": 2912,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 2872,
									"end": 2912,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2872,
									"end": 2912,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2601,
									"end": 2918,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2601,
									"end": 2918,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2525,
									"end": 2918,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 2525,
									"end": 2918,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2525,
									"end": 2918,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2525,
									"end": 2918,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2525,
									"end": 2918,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2525,
									"end": 2918,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2924,
									"end": 2984,
									"name": "tag",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 2924,
									"end": 2984,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2952,
									"end": 2955,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2973,
									"end": 2978,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2966,
									"end": 2978,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2966,
									"end": 2978,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2924,
									"end": 2984,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2924,
									"end": 2984,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2924,
									"end": 2984,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2924,
									"end": 2984,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2990,
									"end": 3132,
									"name": "tag",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 2990,
									"end": 3132,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3040,
									"end": 3049,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3073,
									"end": 3126,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 3091,
									"end": 3125,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "101"
								},
								{
									"begin": 3100,
									"end": 3124,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "102"
								},
								{
									"begin": 3118,
									"end": 3123,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3100,
									"end": 3124,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 3100,
									"end": 3124,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3100,
									"end": 3124,
									"name": "tag",
									"source": 7,
									"value": "102"
								},
								{
									"begin": 3100,
									"end": 3124,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3091,
									"end": 3125,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 3091,
									"end": 3125,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3091,
									"end": 3125,
									"name": "tag",
									"source": 7,
									"value": "101"
								},
								{
									"begin": 3091,
									"end": 3125,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3073,
									"end": 3126,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 3073,
									"end": 3126,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3073,
									"end": 3126,
									"name": "tag",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 3073,
									"end": 3126,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3060,
									"end": 3126,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3060,
									"end": 3126,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2990,
									"end": 3132,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2990,
									"end": 3132,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2990,
									"end": 3132,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2990,
									"end": 3132,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3138,
									"end": 3213,
									"name": "tag",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 3138,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3181,
									"end": 3184,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3202,
									"end": 3207,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3195,
									"end": 3207,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3195,
									"end": 3207,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3138,
									"end": 3213,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3138,
									"end": 3213,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3138,
									"end": 3213,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3138,
									"end": 3213,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3219,
									"end": 3488,
									"name": "tag",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 3219,
									"end": 3488,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3329,
									"end": 3368,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "105"
								},
								{
									"begin": 3360,
									"end": 3367,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3329,
									"end": 3368,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 3329,
									"end": 3368,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3329,
									"end": 3368,
									"name": "tag",
									"source": 7,
									"value": "105"
								},
								{
									"begin": 3329,
									"end": 3368,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3390,
									"end": 3481,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "106"
								},
								{
									"begin": 3439,
									"end": 3480,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "107"
								},
								{
									"begin": 3463,
									"end": 3479,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3439,
									"end": 3480,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 3439,
									"end": 3480,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3439,
									"end": 3480,
									"name": "tag",
									"source": 7,
									"value": "107"
								},
								{
									"begin": 3439,
									"end": 3480,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3431,
									"end": 3437,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3424,
									"end": 3428,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3418,
									"end": 3429,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 3390,
									"end": 3481,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 3390,
									"end": 3481,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3390,
									"end": 3481,
									"name": "tag",
									"source": 7,
									"value": "106"
								},
								{
									"begin": 3390,
									"end": 3481,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3384,
									"end": 3388,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3377,
									"end": 3482,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 3295,
									"end": 3488,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3219,
									"end": 3488,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3219,
									"end": 3488,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3219,
									"end": 3488,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3219,
									"end": 3488,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3494,
									"end": 3567,
									"name": "tag",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 3494,
									"end": 3567,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3539,
									"end": 3542,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3560,
									"end": 3561,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3553,
									"end": 3561,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3553,
									"end": 3561,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3494,
									"end": 3567,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3494,
									"end": 3567,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3573,
									"end": 3762,
									"name": "tag",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 3573,
									"end": 3762,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3650,
									"end": 3682,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "110"
								},
								{
									"begin": 3650,
									"end": 3682,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 3650,
									"end": 3682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3650,
									"end": 3682,
									"name": "tag",
									"source": 7,
									"value": "110"
								},
								{
									"begin": 3650,
									"end": 3682,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3691,
									"end": 3756,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "111"
								},
								{
									"begin": 3749,
									"end": 3755,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3741,
									"end": 3747,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3735,
									"end": 3739,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3691,
									"end": 3756,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 3691,
									"end": 3756,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3691,
									"end": 3756,
									"name": "tag",
									"source": 7,
									"value": "111"
								},
								{
									"begin": 3691,
									"end": 3756,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3626,
									"end": 3762,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3573,
									"end": 3762,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3573,
									"end": 3762,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3573,
									"end": 3762,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3768,
									"end": 3954,
									"name": "tag",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 3768,
									"end": 3954,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3828,
									"end": 3948,
									"name": "tag",
									"source": 7,
									"value": "113"
								},
								{
									"begin": 3828,
									"end": 3948,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3845,
									"end": 3848,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3838,
									"end": 3843,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3835,
									"end": 3849,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 3828,
									"end": 3948,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3828,
									"end": 3948,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "115"
								},
								{
									"begin": 3828,
									"end": 3948,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3899,
									"end": 3938,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "116"
								},
								{
									"begin": 3936,
									"end": 3937,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3929,
									"end": 3934,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3899,
									"end": 3938,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 3899,
									"end": 3938,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3899,
									"end": 3938,
									"name": "tag",
									"source": 7,
									"value": "116"
								},
								{
									"begin": 3899,
									"end": 3938,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3872,
									"end": 3873,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3865,
									"end": 3870,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3861,
									"end": 3874,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3852,
									"end": 3874,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3852,
									"end": 3874,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3828,
									"end": 3948,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "113"
								},
								{
									"begin": 3828,
									"end": 3948,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3828,
									"end": 3948,
									"name": "tag",
									"source": 7,
									"value": "115"
								},
								{
									"begin": 3828,
									"end": 3948,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3768,
									"end": 3954,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3768,
									"end": 3954,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3768,
									"end": 3954,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3960,
									"end": 4503,
									"name": "tag",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 3960,
									"end": 4503,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4061,
									"end": 4063,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 4056,
									"end": 4059,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4053,
									"end": 4064,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 4050,
									"end": 4496,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4050,
									"end": 4496,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "118"
								},
								{
									"begin": 4050,
									"end": 4496,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4095,
									"end": 4133,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "119"
								},
								{
									"begin": 4127,
									"end": 4132,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4095,
									"end": 4133,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 4095,
									"end": 4133,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4095,
									"end": 4133,
									"name": "tag",
									"source": 7,
									"value": "119"
								},
								{
									"begin": 4095,
									"end": 4133,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4179,
									"end": 4208,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "120"
								},
								{
									"begin": 4197,
									"end": 4207,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4179,
									"end": 4208,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 4179,
									"end": 4208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4179,
									"end": 4208,
									"name": "tag",
									"source": 7,
									"value": "120"
								},
								{
									"begin": 4179,
									"end": 4208,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4169,
									"end": 4177,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4165,
									"end": 4209,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4362,
									"end": 4364,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4350,
									"end": 4360,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4347,
									"end": 4365,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 4344,
									"end": 4393,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4344,
									"end": 4393,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "121"
								},
								{
									"begin": 4344,
									"end": 4393,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4383,
									"end": 4391,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4368,
									"end": 4391,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4368,
									"end": 4391,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4344,
									"end": 4393,
									"name": "tag",
									"source": 7,
									"value": "121"
								},
								{
									"begin": 4344,
									"end": 4393,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4406,
									"end": 4486,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "122"
								},
								{
									"begin": 4462,
									"end": 4484,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "123"
								},
								{
									"begin": 4480,
									"end": 4483,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4462,
									"end": 4484,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 4462,
									"end": 4484,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4462,
									"end": 4484,
									"name": "tag",
									"source": 7,
									"value": "123"
								},
								{
									"begin": 4462,
									"end": 4484,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4452,
									"end": 4460,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4448,
									"end": 4485,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4435,
									"end": 4446,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4406,
									"end": 4486,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 4406,
									"end": 4486,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4406,
									"end": 4486,
									"name": "tag",
									"source": 7,
									"value": "122"
								},
								{
									"begin": 4406,
									"end": 4486,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4065,
									"end": 4496,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4065,
									"end": 4496,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4050,
									"end": 4496,
									"name": "tag",
									"source": 7,
									"value": "118"
								},
								{
									"begin": 4050,
									"end": 4496,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3960,
									"end": 4503,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3960,
									"end": 4503,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3960,
									"end": 4503,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3960,
									"end": 4503,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4509,
									"end": 4626,
									"name": "tag",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 4509,
									"end": 4626,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4563,
									"end": 4571,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4613,
									"end": 4618,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4607,
									"end": 4611,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4603,
									"end": 4619,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 4582,
									"end": 4619,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4582,
									"end": 4619,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4509,
									"end": 4626,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 4509,
									"end": 4626,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4509,
									"end": 4626,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4509,
									"end": 4626,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4509,
									"end": 4626,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4632,
									"end": 4801,
									"name": "tag",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 4632,
									"end": 4801,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4676,
									"end": 4682,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4709,
									"end": 4760,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "126"
								},
								{
									"begin": 4757,
									"end": 4758,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4753,
									"end": 4759,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 4745,
									"end": 4750,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4742,
									"end": 4743,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 4738,
									"end": 4751,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 4709,
									"end": 4760,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 4709,
									"end": 4760,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4709,
									"end": 4760,
									"name": "tag",
									"source": 7,
									"value": "126"
								},
								{
									"begin": 4709,
									"end": 4760,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4705,
									"end": 4761,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 4790,
									"end": 4794,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 4784,
									"end": 4788,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4780,
									"end": 4795,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4770,
									"end": 4795,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4770,
									"end": 4795,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4683,
									"end": 4801,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4632,
									"end": 4801,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 4632,
									"end": 4801,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4632,
									"end": 4801,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4632,
									"end": 4801,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4632,
									"end": 4801,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4806,
									"end": 5101,
									"name": "tag",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 4806,
									"end": 5101,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4882,
									"end": 4886,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5028,
									"end": 5057,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "128"
								},
								{
									"begin": 5053,
									"end": 5056,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5047,
									"end": 5051,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5028,
									"end": 5057,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 5028,
									"end": 5057,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5028,
									"end": 5057,
									"name": "tag",
									"source": 7,
									"value": "128"
								},
								{
									"begin": 5028,
									"end": 5057,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5020,
									"end": 5057,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5020,
									"end": 5057,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5090,
									"end": 5093,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5087,
									"end": 5088,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 5083,
									"end": 5094,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 5077,
									"end": 5081,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5074,
									"end": 5095,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 5066,
									"end": 5095,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5066,
									"end": 5095,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4806,
									"end": 5101,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 4806,
									"end": 5101,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4806,
									"end": 5101,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4806,
									"end": 5101,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4806,
									"end": 5101,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5106,
									"end": 6501,
									"name": "tag",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 5106,
									"end": 6501,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5223,
									"end": 5260,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "130"
								},
								{
									"begin": 5256,
									"end": 5259,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5223,
									"end": 5260,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 5223,
									"end": 5260,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5223,
									"end": 5260,
									"name": "tag",
									"source": 7,
									"value": "130"
								},
								{
									"begin": 5223,
									"end": 5260,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5325,
									"end": 5343,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5317,
									"end": 5323,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5314,
									"end": 5344,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 5311,
									"end": 5367,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 5311,
									"end": 5367,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "131"
								},
								{
									"begin": 5311,
									"end": 5367,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5347,
									"end": 5365,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "132"
								},
								{
									"begin": 5347,
									"end": 5365,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 5347,
									"end": 5365,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5347,
									"end": 5365,
									"name": "tag",
									"source": 7,
									"value": "132"
								},
								{
									"begin": 5347,
									"end": 5365,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5311,
									"end": 5367,
									"name": "tag",
									"source": 7,
									"value": "131"
								},
								{
									"begin": 5311,
									"end": 5367,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5391,
									"end": 5429,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 5423,
									"end": 5427,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5417,
									"end": 5428,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 5391,
									"end": 5429,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 5391,
									"end": 5429,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5391,
									"end": 5429,
									"name": "tag",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 5391,
									"end": 5429,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5476,
									"end": 5543,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "134"
								},
								{
									"begin": 5536,
									"end": 5542,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5528,
									"end": 5534,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5522,
									"end": 5526,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 5476,
									"end": 5543,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 5476,
									"end": 5543,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5476,
									"end": 5543,
									"name": "tag",
									"source": 7,
									"value": "134"
								},
								{
									"begin": 5476,
									"end": 5543,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5570,
									"end": 5571,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5594,
									"end": 5598,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5581,
									"end": 5598,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5581,
									"end": 5598,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5626,
									"end": 5628,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 5618,
									"end": 5624,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5615,
									"end": 5629,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 5643,
									"end": 5644,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 5638,
									"end": 6256,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5638,
									"end": 6256,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 5638,
									"end": 6256,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "136"
								},
								{
									"begin": 5638,
									"end": 6256,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6300,
									"end": 6301,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6317,
									"end": 6323,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6314,
									"end": 6391,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6314,
									"end": 6391,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "137"
								},
								{
									"begin": 6314,
									"end": 6391,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6366,
									"end": 6375,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6361,
									"end": 6364,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 6357,
									"end": 6376,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6351,
									"end": 6377,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 6342,
									"end": 6377,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6342,
									"end": 6377,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6314,
									"end": 6391,
									"name": "tag",
									"source": 7,
									"value": "137"
								},
								{
									"begin": 6314,
									"end": 6391,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6417,
									"end": 6484,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "138"
								},
								{
									"begin": 6477,
									"end": 6483,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 6470,
									"end": 6475,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6417,
									"end": 6484,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 6417,
									"end": 6484,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6417,
									"end": 6484,
									"name": "tag",
									"source": 7,
									"value": "138"
								},
								{
									"begin": 6417,
									"end": 6484,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6411,
									"end": 6415,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 6404,
									"end": 6485,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 6273,
									"end": 6495,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5608,
									"end": 6495,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "135"
								},
								{
									"begin": 5608,
									"end": 6495,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5638,
									"end": 6256,
									"name": "tag",
									"source": 7,
									"value": "136"
								},
								{
									"begin": 5638,
									"end": 6256,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5690,
									"end": 5694,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 5686,
									"end": 5695,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 5678,
									"end": 5684,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5674,
									"end": 5696,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5724,
									"end": 5761,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "139"
								},
								{
									"begin": 5756,
									"end": 5760,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 5724,
									"end": 5761,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 5724,
									"end": 5761,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5724,
									"end": 5761,
									"name": "tag",
									"source": 7,
									"value": "139"
								},
								{
									"begin": 5724,
									"end": 5761,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5783,
									"end": 5784,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5797,
									"end": 6005,
									"name": "tag",
									"source": 7,
									"value": "140"
								},
								{
									"begin": 5797,
									"end": 6005,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5811,
									"end": 5818,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5808,
									"end": 5809,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5805,
									"end": 5819,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 5797,
									"end": 6005,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 5797,
									"end": 6005,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "142"
								},
								{
									"begin": 5797,
									"end": 6005,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5890,
									"end": 5899,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5885,
									"end": 5888,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 5881,
									"end": 5900,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5875,
									"end": 5901,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 5867,
									"end": 5873,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5860,
									"end": 5902,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 5941,
									"end": 5942,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 5933,
									"end": 5939,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5929,
									"end": 5943,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5919,
									"end": 5943,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5919,
									"end": 5943,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5988,
									"end": 5990,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5977,
									"end": 5986,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 5973,
									"end": 5991,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5960,
									"end": 5991,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 5960,
									"end": 5991,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5834,
									"end": 5838,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5831,
									"end": 5832,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5827,
									"end": 5839,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5822,
									"end": 5839,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5822,
									"end": 5839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5797,
									"end": 6005,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "140"
								},
								{
									"begin": 5797,
									"end": 6005,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5797,
									"end": 6005,
									"name": "tag",
									"source": 7,
									"value": "142"
								},
								{
									"begin": 5797,
									"end": 6005,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6033,
									"end": 6039,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 6024,
									"end": 6031,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6021,
									"end": 6040,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 6018,
									"end": 6197,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6018,
									"end": 6197,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "143"
								},
								{
									"begin": 6018,
									"end": 6197,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6091,
									"end": 6100,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6086,
									"end": 6089,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 6082,
									"end": 6101,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6076,
									"end": 6102,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 6134,
									"end": 6182,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "144"
								},
								{
									"begin": 6176,
									"end": 6180,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 6168,
									"end": 6174,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 6164,
									"end": 6181,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 6153,
									"end": 6162,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6134,
									"end": 6182,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 6134,
									"end": 6182,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6134,
									"end": 6182,
									"name": "tag",
									"source": 7,
									"value": "144"
								},
								{
									"begin": 6134,
									"end": 6182,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6126,
									"end": 6132,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6119,
									"end": 6183,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 6041,
									"end": 6197,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6018,
									"end": 6197,
									"name": "tag",
									"source": 7,
									"value": "143"
								},
								{
									"begin": 6018,
									"end": 6197,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6243,
									"end": 6244,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 6239,
									"end": 6240,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 6231,
									"end": 6237,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 6227,
									"end": 6241,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 6223,
									"end": 6245,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6217,
									"end": 6221,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 6210,
									"end": 6246,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 5645,
									"end": 6256,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5645,
									"end": 6256,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5645,
									"end": 6256,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5608,
									"end": 6495,
									"name": "tag",
									"source": 7,
									"value": "135"
								},
								{
									"begin": 5608,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5608,
									"end": 6495,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5198,
									"end": 6501,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5198,
									"end": 6501,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5198,
									"end": 6501,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5106,
									"end": 6501,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5106,
									"end": 6501,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5106,
									"end": 6501,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6507,
									"end": 6633,
									"name": "tag",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 6507,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6544,
									"end": 6551,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6584,
									"end": 6626,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6577,
									"end": 6582,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6573,
									"end": 6627,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 6562,
									"end": 6627,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6562,
									"end": 6627,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6507,
									"end": 6633,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6507,
									"end": 6633,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6507,
									"end": 6633,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6507,
									"end": 6633,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6639,
									"end": 6735,
									"name": "tag",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 6639,
									"end": 6735,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6676,
									"end": 6683,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6705,
									"end": 6729,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "147"
								},
								{
									"begin": 6723,
									"end": 6728,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6705,
									"end": 6729,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 6705,
									"end": 6729,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6705,
									"end": 6729,
									"name": "tag",
									"source": 7,
									"value": "147"
								},
								{
									"begin": 6705,
									"end": 6729,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6694,
									"end": 6729,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6694,
									"end": 6729,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6639,
									"end": 6735,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6639,
									"end": 6735,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6639,
									"end": 6735,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6639,
									"end": 6735,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6741,
									"end": 6859,
									"name": "tag",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 6741,
									"end": 6859,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6828,
									"end": 6852,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "149"
								},
								{
									"begin": 6846,
									"end": 6851,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6828,
									"end": 6852,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 6828,
									"end": 6852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6828,
									"end": 6852,
									"name": "tag",
									"source": 7,
									"value": "149"
								},
								{
									"begin": 6828,
									"end": 6852,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6823,
									"end": 6826,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6816,
									"end": 6853,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6741,
									"end": 6859,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6741,
									"end": 6859,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6741,
									"end": 6859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6865,
									"end": 7087,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 6865,
									"end": 7087,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6958,
									"end": 6962,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6996,
									"end": 6998,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 6985,
									"end": 6994,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6981,
									"end": 6999,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6973,
									"end": 6999,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6973,
									"end": 6999,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7009,
									"end": 7080,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "151"
								},
								{
									"begin": 7077,
									"end": 7078,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7066,
									"end": 7075,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7062,
									"end": 7079,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7053,
									"end": 7059,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7009,
									"end": 7080,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 7009,
									"end": 7080,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7009,
									"end": 7080,
									"name": "tag",
									"source": 7,
									"value": "151"
								},
								{
									"begin": 7009,
									"end": 7080,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6865,
									"end": 7087,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 6865,
									"end": 7087,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6865,
									"end": 7087,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6865,
									"end": 7087,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6865,
									"end": 7087,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7093,
									"end": 7273,
									"name": "tag",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 7093,
									"end": 7273,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7141,
									"end": 7218,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7138,
									"end": 7139,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7131,
									"end": 7219,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 7238,
									"end": 7242,
									"name": "PUSH",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 7235,
									"end": 7236,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 7228,
									"end": 7243,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 7262,
									"end": 7266,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 7259,
									"end": 7260,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7252,
									"end": 7267,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 7279,
									"end": 7470,
									"name": "tag",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 7279,
									"end": 7470,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7319,
									"end": 7322,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7338,
									"end": 7358,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "154"
								},
								{
									"begin": 7356,
									"end": 7357,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7338,
									"end": 7358,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 7338,
									"end": 7358,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7338,
									"end": 7358,
									"name": "tag",
									"source": 7,
									"value": "154"
								},
								{
									"begin": 7338,
									"end": 7358,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7333,
									"end": 7358,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7333,
									"end": 7358,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7372,
									"end": 7392,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "155"
								},
								{
									"begin": 7390,
									"end": 7391,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7372,
									"end": 7392,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 7372,
									"end": 7392,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7372,
									"end": 7392,
									"name": "tag",
									"source": 7,
									"value": "155"
								},
								{
									"begin": 7372,
									"end": 7392,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7367,
									"end": 7392,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7367,
									"end": 7392,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7415,
									"end": 7416,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7412,
									"end": 7413,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7408,
									"end": 7417,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7401,
									"end": 7417,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7401,
									"end": 7417,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7436,
									"end": 7439,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 7433,
									"end": 7434,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7430,
									"end": 7440,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 7427,
									"end": 7463,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 7427,
									"end": 7463,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "156"
								},
								{
									"begin": 7427,
									"end": 7463,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7443,
									"end": 7461,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "157"
								},
								{
									"begin": 7443,
									"end": 7461,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 7443,
									"end": 7461,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7443,
									"end": 7461,
									"name": "tag",
									"source": 7,
									"value": "157"
								},
								{
									"begin": 7443,
									"end": 7461,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7427,
									"end": 7463,
									"name": "tag",
									"source": 7,
									"value": "156"
								},
								{
									"begin": 7427,
									"end": 7463,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7279,
									"end": 7470,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7279,
									"end": 7470,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7279,
									"end": 7470,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7279,
									"end": 7470,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7279,
									"end": 7470,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7476,
									"end": 7594,
									"name": "tag",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 7476,
									"end": 7594,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7563,
									"end": 7587,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "159"
								},
								{
									"begin": 7581,
									"end": 7586,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7563,
									"end": 7587,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 7563,
									"end": 7587,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7563,
									"end": 7587,
									"name": "tag",
									"source": 7,
									"value": "159"
								},
								{
									"begin": 7563,
									"end": 7587,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7558,
									"end": 7561,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7551,
									"end": 7588,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 7476,
									"end": 7594,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7476,
									"end": 7594,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7476,
									"end": 7594,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7600,
									"end": 8042,
									"name": "tag",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 7600,
									"end": 8042,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7749,
									"end": 7753,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7787,
									"end": 7789,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 7776,
									"end": 7785,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7772,
									"end": 7790,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7764,
									"end": 7790,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7764,
									"end": 7790,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7800,
									"end": 7871,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "161"
								},
								{
									"begin": 7868,
									"end": 7869,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7857,
									"end": 7866,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7853,
									"end": 7870,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7844,
									"end": 7850,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 7800,
									"end": 7871,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 7800,
									"end": 7871,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7800,
									"end": 7871,
									"name": "tag",
									"source": 7,
									"value": "161"
								},
								{
									"begin": 7800,
									"end": 7871,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7881,
									"end": 7953,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "162"
								},
								{
									"begin": 7949,
									"end": 7951,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 7938,
									"end": 7947,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7934,
									"end": 7952,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7925,
									"end": 7931,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 7881,
									"end": 7953,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 7881,
									"end": 7953,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7881,
									"end": 7953,
									"name": "tag",
									"source": 7,
									"value": "162"
								},
								{
									"begin": 7881,
									"end": 7953,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7963,
									"end": 8035,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "163"
								},
								{
									"begin": 8031,
									"end": 8033,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 8020,
									"end": 8029,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8016,
									"end": 8034,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8007,
									"end": 8013,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7963,
									"end": 8035,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 7963,
									"end": 8035,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7963,
									"end": 8035,
									"name": "tag",
									"source": 7,
									"value": "163"
								},
								{
									"begin": 7963,
									"end": 8035,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7600,
									"end": 8042,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 7600,
									"end": 8042,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 7600,
									"end": 8042,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7600,
									"end": 8042,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7600,
									"end": 8042,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7600,
									"end": 8042,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7600,
									"end": 8042,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8048,
									"end": 8270,
									"name": "tag",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 8048,
									"end": 8270,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8141,
									"end": 8145,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8179,
									"end": 8181,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 8168,
									"end": 8177,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8164,
									"end": 8182,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8156,
									"end": 8182,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8156,
									"end": 8182,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8192,
									"end": 8263,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "165"
								},
								{
									"begin": 8260,
									"end": 8261,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8249,
									"end": 8258,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8245,
									"end": 8262,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8236,
									"end": 8242,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 8192,
									"end": 8263,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 8192,
									"end": 8263,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8192,
									"end": 8263,
									"name": "tag",
									"source": 7,
									"value": "165"
								},
								{
									"begin": 8192,
									"end": 8263,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8048,
									"end": 8270,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 8048,
									"end": 8270,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8048,
									"end": 8270,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8048,
									"end": 8270,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8048,
									"end": 8270,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 209,
									"end": 7687,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 209,
									"end": 7687,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 209,
									"end": 7687,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 209,
									"end": 7687,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 209,
									"end": 7687,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 209,
									"end": 7687,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 209,
									"end": 7687,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 209,
									"end": 7687,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 209,
									"end": 7687,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122039a9bc7d925fd2a79fbe5ca861c774e600bccd1ec7ea33dd3b1284506bac0a6364736f6c634300081c0033",
									".code": [
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH",
											"source": 6,
											"value": "5FEC5C64"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH",
											"source": 6,
											"value": "B3A55A66"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH",
											"source": 6,
											"value": "CDB12C83"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH",
											"source": 6,
											"value": "CDB12C83"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH",
											"source": 6,
											"value": "E1913C81"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH",
											"source": 6,
											"value": "B3A55A66"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH",
											"source": 6,
											"value": "BA13A572"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH",
											"source": 6,
											"value": "C9D27AFE"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH",
											"source": 6,
											"value": "7ACB7757"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH",
											"source": 6,
											"value": "7ACB7757"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH",
											"source": 6,
											"value": "5FEC5C64"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH",
											"source": 6,
											"value": "3FD43098"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH",
											"source": 6,
											"value": "49C2A1A6"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH",
											"source": 6,
											"value": "576B5002"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH",
											"source": 6,
											"value": "2E1A7D4D"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH",
											"source": 6,
											"value": "C0512E9"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH",
											"source": 6,
											"value": "C0512E9"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH",
											"source": 6,
											"value": "C56AE3B"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH",
											"source": 6,
											"value": "13ED0846"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH",
											"source": 6,
											"value": "16934FC4"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH",
											"source": 6,
											"value": "13CF08B"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 209,
											"end": 7687,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1184,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 1184,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 1184,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1364,
											"end": 1394,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1364,
											"end": 1394,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1364,
											"end": 1394,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 1364,
											"end": 1394,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 1364,
											"end": 1394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1364,
											"end": 1394,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 1364,
											"end": 1394,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1364,
											"end": 1394,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1364,
											"end": 1394,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1364,
											"end": 1394,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 1364,
											"end": 1394,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1364,
											"end": 1394,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1364,
											"end": 1394,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 1364,
											"end": 1394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1364,
											"end": 1394,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 1364,
											"end": 1394,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1364,
											"end": 1394,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1364,
											"end": 1394,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1364,
											"end": 1394,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1364,
											"end": 1394,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1364,
											"end": 1394,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1364,
											"end": 1394,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1364,
											"end": 1394,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1306,
											"end": 1336,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1306,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1306,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 1306,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 1306,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1306,
											"end": 1336,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 1306,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1306,
											"end": 1336,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1306,
											"end": 1336,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1306,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1306,
											"end": 1336,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1306,
											"end": 1336,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1306,
											"end": 1336,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1306,
											"end": 1336,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1306,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 1306,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1306,
											"end": 1336,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1306,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1306,
											"end": 1336,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1306,
											"end": 1336,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1306,
											"end": 1336,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1306,
											"end": 1336,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1306,
											"end": 1336,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1306,
											"end": 1336,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1306,
											"end": 1336,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 7345,
											"end": 7685,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 7345,
											"end": 7685,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7345,
											"end": 7685,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 7345,
											"end": 7685,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7345,
											"end": 7685,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7345,
											"end": 7685,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 7345,
											"end": 7685,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7345,
											"end": 7685,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7345,
											"end": 7685,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7345,
											"end": 7685,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7345,
											"end": 7685,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 7345,
											"end": 7685,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7345,
											"end": 7685,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7345,
											"end": 7685,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 7345,
											"end": 7685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7345,
											"end": 7685,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 7345,
											"end": 7685,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7345,
											"end": 7685,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 7345,
											"end": 7685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7345,
											"end": 7685,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 7345,
											"end": 7685,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7345,
											"end": 7685,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7345,
											"end": 7685,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7345,
											"end": 7685,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 7345,
											"end": 7685,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7345,
											"end": 7685,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7345,
											"end": 7685,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 7345,
											"end": 7685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7345,
											"end": 7685,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 7345,
											"end": 7685,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7345,
											"end": 7685,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7345,
											"end": 7685,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7345,
											"end": 7685,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7345,
											"end": 7685,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7345,
											"end": 7685,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7345,
											"end": 7685,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7345,
											"end": 7685,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 1113,
											"end": 1152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 1113,
											"end": 1152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 1113,
											"end": 1152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3781,
											"end": 4537,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 3781,
											"end": 4537,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3781,
											"end": 4537,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 3781,
											"end": 4537,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3781,
											"end": 4537,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3781,
											"end": 4537,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3781,
											"end": 4537,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3781,
											"end": 4537,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3781,
											"end": 4537,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3781,
											"end": 4537,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3781,
											"end": 4537,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 3781,
											"end": 4537,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3781,
											"end": 4537,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3781,
											"end": 4537,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3781,
											"end": 4537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3781,
											"end": 4537,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 3781,
											"end": 4537,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3781,
											"end": 4537,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 3781,
											"end": 4537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3781,
											"end": 4537,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 3781,
											"end": 4537,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3781,
											"end": 4537,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 5874,
											"end": 6174,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 5874,
											"end": 6174,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5874,
											"end": 6174,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 5874,
											"end": 6174,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5874,
											"end": 6174,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5874,
											"end": 6174,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 5874,
											"end": 6174,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5874,
											"end": 6174,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5874,
											"end": 6174,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5874,
											"end": 6174,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5874,
											"end": 6174,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 5874,
											"end": 6174,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5874,
											"end": 6174,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5874,
											"end": 6174,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5874,
											"end": 6174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5874,
											"end": 6174,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 5874,
											"end": 6174,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5874,
											"end": 6174,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 5874,
											"end": 6174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5874,
											"end": 6174,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 5874,
											"end": 6174,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5874,
											"end": 6174,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 4643,
											"end": 4990,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 4643,
											"end": 4990,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4643,
											"end": 4990,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 4643,
											"end": 4990,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4643,
											"end": 4990,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4643,
											"end": 4990,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4643,
											"end": 4990,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4643,
											"end": 4990,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4643,
											"end": 4990,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4643,
											"end": 4990,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4643,
											"end": 4990,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 4643,
											"end": 4990,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4643,
											"end": 4990,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4643,
											"end": 4990,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 4643,
											"end": 4990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4643,
											"end": 4990,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 4643,
											"end": 4990,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4643,
											"end": 4990,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 4643,
											"end": 4990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4643,
											"end": 4990,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 4643,
											"end": 4990,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4643,
											"end": 4990,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 6226,
											"end": 6767,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 6226,
											"end": 6767,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6226,
											"end": 6767,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 6226,
											"end": 6767,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 6226,
											"end": 6767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6226,
											"end": 6767,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 6226,
											"end": 6767,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6226,
											"end": 6767,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1426,
											"end": 1466,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 1426,
											"end": 1466,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1426,
											"end": 1466,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 1426,
											"end": 1466,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 1426,
											"end": 1466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1426,
											"end": 1466,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 1426,
											"end": 1466,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1426,
											"end": 1466,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1426,
											"end": 1466,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1426,
											"end": 1466,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 1426,
											"end": 1466,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1426,
											"end": 1466,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1426,
											"end": 1466,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 1426,
											"end": 1466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1426,
											"end": 1466,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 1426,
											"end": 1466,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1426,
											"end": 1466,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1426,
											"end": 1466,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1426,
											"end": 1466,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1426,
											"end": 1466,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1426,
											"end": 1466,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1426,
											"end": 1466,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1426,
											"end": 1466,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2704,
											"end": 3668,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2704,
											"end": 3668,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2704,
											"end": 3668,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 2704,
											"end": 3668,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2704,
											"end": 3668,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2704,
											"end": 3668,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2704,
											"end": 3668,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2704,
											"end": 3668,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2704,
											"end": 3668,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2704,
											"end": 3668,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2704,
											"end": 3668,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 2704,
											"end": 3668,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2704,
											"end": 3668,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2704,
											"end": 3668,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 2704,
											"end": 3668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2704,
											"end": 3668,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 2704,
											"end": 3668,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2704,
											"end": 3668,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 2704,
											"end": 3668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2704,
											"end": 3668,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 2704,
											"end": 3668,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2704,
											"end": 3668,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 6851,
											"end": 6960,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6851,
											"end": 6960,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6851,
											"end": 6960,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 6851,
											"end": 6960,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 6851,
											"end": 6960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6851,
											"end": 6960,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 6851,
											"end": 6960,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6851,
											"end": 6960,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6851,
											"end": 6960,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6851,
											"end": 6960,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 6851,
											"end": 6960,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6851,
											"end": 6960,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6851,
											"end": 6960,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 6851,
											"end": 6960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6851,
											"end": 6960,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 6851,
											"end": 6960,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6851,
											"end": 6960,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6851,
											"end": 6960,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6851,
											"end": 6960,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6851,
											"end": 6960,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6851,
											"end": 6960,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6851,
											"end": 6960,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6851,
											"end": 6960,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1281,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 1259,
											"end": 1281,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 1259,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 1259,
											"end": 1281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1281,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 1259,
											"end": 1281,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1281,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1259,
											"end": 1281,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 1259,
											"end": 1281,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1281,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 1259,
											"end": 1281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1281,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 1259,
											"end": 1281,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1281,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1259,
											"end": 1281,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1281,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1281,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1281,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1281,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1281,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 5150,
											"end": 5752,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 5150,
											"end": 5752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5150,
											"end": 5752,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 5150,
											"end": 5752,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5150,
											"end": 5752,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5150,
											"end": 5752,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 5150,
											"end": 5752,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5150,
											"end": 5752,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5150,
											"end": 5752,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5150,
											"end": 5752,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5150,
											"end": 5752,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 5150,
											"end": 5752,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5150,
											"end": 5752,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5150,
											"end": 5752,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 5150,
											"end": 5752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5150,
											"end": 5752,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 5150,
											"end": 5752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5150,
											"end": 5752,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 5150,
											"end": 5752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5150,
											"end": 5752,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 5150,
											"end": 5752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5150,
											"end": 5752,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 7051,
											"end": 7155,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 7051,
											"end": 7155,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7051,
											"end": 7155,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 7051,
											"end": 7155,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 7051,
											"end": 7155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7051,
											"end": 7155,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 7051,
											"end": 7155,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7051,
											"end": 7155,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7051,
											"end": 7155,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7051,
											"end": 7155,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 7051,
											"end": 7155,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7051,
											"end": 7155,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7051,
											"end": 7155,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 7051,
											"end": 7155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7051,
											"end": 7155,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 7051,
											"end": 7155,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7051,
											"end": 7155,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7051,
											"end": 7155,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7051,
											"end": 7155,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7051,
											"end": 7155,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7051,
											"end": 7155,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7051,
											"end": 7155,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7051,
											"end": 7155,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1500,
											"end": 1542,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 1500,
											"end": 1542,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1500,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 1500,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 1500,
											"end": 1542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1500,
											"end": 1542,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 1500,
											"end": 1542,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1500,
											"end": 1542,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1500,
											"end": 1542,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1500,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 1500,
											"end": 1542,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1500,
											"end": 1542,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1500,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 1500,
											"end": 1542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1500,
											"end": 1542,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 1500,
											"end": 1542,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1500,
											"end": 1542,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1500,
											"end": 1542,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1500,
											"end": 1542,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1500,
											"end": 1542,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1500,
											"end": 1542,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1500,
											"end": 1542,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1500,
											"end": 1542,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 1184,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 1184,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1229,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4087,
											"end": 4100,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 4103,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 4103,
											"end": 4115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 4134,
											"end": 4139,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 4125,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1364,
											"end": 1394,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 1364,
											"end": 1394,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1364,
											"end": 1394,
											"name": "PUSH",
											"source": 6,
											"value": "D"
										},
										{
											"begin": 1364,
											"end": 1394,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1364,
											"end": 1394,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1364,
											"end": 1394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1306,
											"end": 1336,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 1306,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1306,
											"end": 1336,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 1306,
											"end": 1336,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1306,
											"end": 1336,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1306,
											"end": 1336,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1306,
											"end": 1336,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1306,
											"end": 1336,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1306,
											"end": 1336,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1306,
											"end": 1336,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1306,
											"end": 1336,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1306,
											"end": 1336,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1306,
											"end": 1336,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1306,
											"end": 1336,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1306,
											"end": 1336,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1306,
											"end": 1336,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1306,
											"end": 1336,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1306,
											"end": 1336,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1306,
											"end": 1336,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1306,
											"end": 1336,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1306,
											"end": 1336,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7345,
											"end": 7685,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 7345,
											"end": 7685,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7449,
											"end": 7463,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7479,
											"end": 7495,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7508,
											"end": 7520,
											"name": "PUSH",
											"source": 6,
											"value": "21E19E0C9BAB2400000"
										},
										{
											"begin": 7499,
											"end": 7505,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7499,
											"end": 7520,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 7498,
											"end": 7561,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 7498,
											"end": 7561,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7539,
											"end": 7550,
											"name": "PUSH",
											"source": 6,
											"value": "3635C9ADC5DEA00000"
										},
										{
											"begin": 7530,
											"end": 7536,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7530,
											"end": 7550,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 7529,
											"end": 7561,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 7529,
											"end": 7561,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7559,
											"end": 7561,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 7529,
											"end": 7561,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 7529,
											"end": 7561,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7529,
											"end": 7561,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 7529,
											"end": 7561,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7554,
											"end": 7556,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 7529,
											"end": 7561,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 7529,
											"end": 7561,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7498,
											"end": 7561,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 7498,
											"end": 7561,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7498,
											"end": 7561,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 7498,
											"end": 7561,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7524,
											"end": 7526,
											"name": "PUSH",
											"source": 6,
											"value": "F"
										},
										{
											"begin": 7498,
											"end": 7561,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 7498,
											"end": 7561,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7479,
											"end": 7561,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 7479,
											"end": 7561,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7479,
											"end": 7561,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7479,
											"end": 7561,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7571,
											"end": 7589,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7604,
											"end": 7611,
											"name": "PUSH",
											"source": 6,
											"value": "278D00"
										},
										{
											"begin": 7593,
											"end": 7601,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 7592,
											"end": 7620,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 7592,
											"end": 7620,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7619,
											"end": 7620,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 7592,
											"end": 7620,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 7592,
											"end": 7620,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7592,
											"end": 7620,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 7592,
											"end": 7620,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7615,
											"end": 7616,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 7592,
											"end": 7620,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 7592,
											"end": 7620,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7571,
											"end": 7620,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 7571,
											"end": 7620,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7571,
											"end": 7620,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7571,
											"end": 7620,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7668,
											"end": 7678,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7661,
											"end": 7664,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 7650,
											"end": 7658,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7641,
											"end": 7647,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 7641,
											"end": 7658,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 7641,
											"end": 7658,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7641,
											"end": 7658,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7641,
											"end": 7658,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 7641,
											"end": 7658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7641,
											"end": 7658,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 7641,
											"end": 7658,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7641,
											"end": 7664,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 7641,
											"end": 7664,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7641,
											"end": 7664,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7641,
											"end": 7664,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 7641,
											"end": 7664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7641,
											"end": 7664,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 7641,
											"end": 7664,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7640,
											"end": 7678,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 7640,
											"end": 7678,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7640,
											"end": 7678,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7640,
											"end": 7678,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 7640,
											"end": 7678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7640,
											"end": 7678,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 7640,
											"end": 7678,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7631,
											"end": 7678,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7631,
											"end": 7678,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7469,
											"end": 7685,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7469,
											"end": 7685,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7345,
											"end": 7685,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7345,
											"end": 7685,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7345,
											"end": 7685,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7345,
											"end": 7685,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7345,
											"end": 7685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4879,
											"end": 4894,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 4897,
											"end": 4907,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 4897,
											"end": 4909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "tag",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4941,
											"end": 4948,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4955,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 4919,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4982,
											"end": 4984,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4986,
											"end": 4991,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 4966,
											"end": 4992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3781,
											"end": 4537,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 3781,
											"end": 4537,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3834,
											"end": 3857,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3860,
											"end": 3866,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3860,
											"end": 3878,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3867,
											"end": 3877,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3860,
											"end": 3878,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3860,
											"end": 3878,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3860,
											"end": 3878,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3860,
											"end": 3878,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3860,
											"end": 3878,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3860,
											"end": 3878,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3860,
											"end": 3878,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3860,
											"end": 3878,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3860,
											"end": 3878,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3860,
											"end": 3878,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3860,
											"end": 3878,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3860,
											"end": 3878,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3860,
											"end": 3878,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3860,
											"end": 3878,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3860,
											"end": 3878,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3834,
											"end": 3878,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3834,
											"end": 3878,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3916,
											"end": 3922,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3896,
											"end": 3905,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3896,
											"end": 3912,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3896,
											"end": 3912,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3896,
											"end": 3912,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3896,
											"end": 3922,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3896,
											"end": 3922,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3888,
											"end": 3954,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 3888,
											"end": 3954,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3888,
											"end": 3954,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3888,
											"end": 3954,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3888,
											"end": 3954,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3888,
											"end": 3954,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3888,
											"end": 3954,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3888,
											"end": 3954,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3888,
											"end": 3954,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3888,
											"end": 3954,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 3888,
											"end": 3954,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3888,
											"end": 3954,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 3888,
											"end": 3954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3888,
											"end": 3954,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 3888,
											"end": 3954,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3888,
											"end": 3954,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3888,
											"end": 3954,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3888,
											"end": 3954,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3888,
											"end": 3954,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3888,
											"end": 3954,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3888,
											"end": 3954,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3888,
											"end": 3954,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3888,
											"end": 3954,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 3888,
											"end": 3954,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 3984,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3987,
											"end": 4002,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4002,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4002,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4012,
											"end": 4028,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4045,
											"end": 4054,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4045,
											"end": 4074,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 4045,
											"end": 4074,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4045,
											"end": 4074,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4031,
											"end": 4042,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4031,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 4031,
											"end": 4074,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4031,
											"end": 4074,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4031,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 4031,
											"end": 4074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4031,
											"end": 4074,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 4031,
											"end": 4074,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4012,
											"end": 4074,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4012,
											"end": 4074,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4085,
											"end": 4100,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4103,
											"end": 4104,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4085,
											"end": 4104,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4085,
											"end": 4104,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4129,
											"end": 4145,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 4129,
											"end": 4145,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4118,
											"end": 4126,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4118,
											"end": 4145,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4114,
											"end": 4290,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4114,
											"end": 4290,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 4114,
											"end": 4290,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4187,
											"end": 4190,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4181,
											"end": 4183,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 4172,
											"end": 4178,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4172,
											"end": 4183,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 4172,
											"end": 4183,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4172,
											"end": 4183,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4172,
											"end": 4183,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 4172,
											"end": 4183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4172,
											"end": 4183,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 4172,
											"end": 4183,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4171,
											"end": 4190,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 4171,
											"end": 4190,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4171,
											"end": 4190,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4171,
											"end": 4190,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 4171,
											"end": 4190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4171,
											"end": 4190,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 4171,
											"end": 4190,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4161,
											"end": 4190,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4161,
											"end": 4190,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4219,
											"end": 4252,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 4233,
											"end": 4237,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 4250,
											"end": 4251,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 4240,
											"end": 4247,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4240,
											"end": 4251,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 4240,
											"end": 4251,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4240,
											"end": 4251,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4240,
											"end": 4251,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 4240,
											"end": 4251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4240,
											"end": 4251,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 4240,
											"end": 4251,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4219,
											"end": 4224,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 4219,
											"end": 4252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4219,
											"end": 4252,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 4219,
											"end": 4252,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4114,
											"end": 4290,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 4114,
											"end": 4290,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4300,
											"end": 4317,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4329,
											"end": 4336,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4320,
											"end": 4326,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4320,
											"end": 4336,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 4320,
											"end": 4336,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4320,
											"end": 4336,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4320,
											"end": 4336,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 4320,
											"end": 4336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4320,
											"end": 4336,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 4320,
											"end": 4336,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4300,
											"end": 4336,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4300,
											"end": 4336,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4366,
											"end": 4372,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4346,
											"end": 4355,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4346,
											"end": 4362,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4346,
											"end": 4362,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4346,
											"end": 4362,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4346,
											"end": 4372,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4346,
											"end": 4372,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4346,
											"end": 4372,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4346,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 4346,
											"end": 4372,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4346,
											"end": 4372,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4346,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 4346,
											"end": 4372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4346,
											"end": 4372,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 4346,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4346,
											"end": 4372,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4346,
											"end": 4372,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4346,
											"end": 4372,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4346,
											"end": 4372,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4346,
											"end": 4372,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4346,
											"end": 4372,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4346,
											"end": 4372,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4409,
											"end": 4415,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4382,
											"end": 4393,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 4382,
											"end": 4405,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 4382,
											"end": 4405,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4382,
											"end": 4405,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4415,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4382,
											"end": 4415,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4382,
											"end": 4415,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4382,
											"end": 4415,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 4382,
											"end": 4415,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4382,
											"end": 4415,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4382,
											"end": 4415,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 4382,
											"end": 4415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4382,
											"end": 4415,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 4382,
											"end": 4415,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4382,
											"end": 4415,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4382,
											"end": 4415,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4382,
											"end": 4415,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4382,
											"end": 4415,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4382,
											"end": 4415,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4382,
											"end": 4415,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4382,
											"end": 4415,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4426,
											"end": 4473,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 4444,
											"end": 4448,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 4451,
											"end": 4461,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4463,
											"end": 4472,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4426,
											"end": 4435,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 4426,
											"end": 4473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4426,
											"end": 4473,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 4426,
											"end": 4473,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4499,
											"end": 4509,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4489,
											"end": 4530,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4489,
											"end": 4530,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4489,
											"end": 4530,
											"name": "PUSH",
											"source": 6,
											"value": "92CCF450A286A957AF52509BC1C9939D1A6A481783E142E41E2499F0BB66EBC6"
										},
										{
											"begin": 4511,
											"end": 4520,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4522,
											"end": 4529,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4489,
											"end": 4530,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4489,
											"end": 4530,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4489,
											"end": 4530,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 4489,
											"end": 4530,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4489,
											"end": 4530,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4489,
											"end": 4530,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4489,
											"end": 4530,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 4489,
											"end": 4530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4489,
											"end": 4530,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 4489,
											"end": 4530,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4489,
											"end": 4530,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4489,
											"end": 4530,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4489,
											"end": 4530,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4489,
											"end": 4530,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4489,
											"end": 4530,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4489,
											"end": 4530,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4489,
											"end": 4530,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 3824,
											"end": 4537,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3824,
											"end": 4537,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3824,
											"end": 4537,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3824,
											"end": 4537,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3824,
											"end": 4537,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3781,
											"end": 4537,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3781,
											"end": 4537,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5874,
											"end": 6174,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 5874,
											"end": 6174,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5948,
											"end": 5949,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5939,
											"end": 5945,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5939,
											"end": 5949,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5931,
											"end": 5983,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 5931,
											"end": 5983,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5931,
											"end": 5983,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5931,
											"end": 5983,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5931,
											"end": 5983,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5931,
											"end": 5983,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5931,
											"end": 5983,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5931,
											"end": 5983,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5931,
											"end": 5983,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5931,
											"end": 5983,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 5931,
											"end": 5983,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5931,
											"end": 5983,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 5931,
											"end": 5983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5931,
											"end": 5983,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 5931,
											"end": 5983,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5931,
											"end": 5983,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5931,
											"end": 5983,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5931,
											"end": 5983,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5931,
											"end": 5983,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5931,
											"end": 5983,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5931,
											"end": 5983,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5931,
											"end": 5983,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5931,
											"end": 5983,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 5931,
											"end": 5983,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5994,
											"end": 6038,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 6004,
											"end": 6014,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6024,
											"end": 6028,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 6031,
											"end": 6037,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5994,
											"end": 6003,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 5994,
											"end": 6038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5994,
											"end": 6038,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 5994,
											"end": 6038,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6048,
											"end": 6055,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 6048,
											"end": 6063,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6048,
											"end": 6063,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6069,
											"end": 6079,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6048,
											"end": 6080,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6048,
											"end": 6080,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6048,
											"end": 6080,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6048,
											"end": 6080,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6048,
											"end": 6080,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6048,
											"end": 6080,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6048,
											"end": 6080,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6048,
											"end": 6080,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6048,
											"end": 6080,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6048,
											"end": 6080,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6048,
											"end": 6080,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6048,
											"end": 6080,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6048,
											"end": 6080,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6048,
											"end": 6080,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6048,
											"end": 6080,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6048,
											"end": 6080,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6048,
											"end": 6080,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6048,
											"end": 6080,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6048,
											"end": 6080,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6048,
											"end": 6080,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6048,
											"end": 6080,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6048,
											"end": 6080,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6048,
											"end": 6080,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6048,
											"end": 6080,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6048,
											"end": 6080,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6048,
											"end": 6080,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6048,
											"end": 6080,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6048,
											"end": 6080,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6048,
											"end": 6080,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6048,
											"end": 6080,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6048,
											"end": 6080,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 6048,
											"end": 6080,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 6048,
											"end": 6080,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6048,
											"end": 6080,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6048,
											"end": 6080,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6048,
											"end": 6080,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6048,
											"end": 6080,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 6048,
											"end": 6080,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 6048,
											"end": 6080,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6048,
											"end": 6080,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6048,
											"end": 6080,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6048,
											"end": 6080,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6048,
											"end": 6080,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6048,
											"end": 6080,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 6048,
											"end": 6080,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 6048,
											"end": 6080,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6048,
											"end": 6080,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6048,
											"end": 6080,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6111,
											"end": 6117,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6090,
											"end": 6097,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 6090,
											"end": 6107,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6090,
											"end": 6107,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6090,
											"end": 6107,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6090,
											"end": 6117,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6090,
											"end": 6117,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6090,
											"end": 6117,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6090,
											"end": 6117,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 6090,
											"end": 6117,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6090,
											"end": 6117,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6090,
											"end": 6117,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 6090,
											"end": 6117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6090,
											"end": 6117,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 6090,
											"end": 6117,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6090,
											"end": 6117,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6090,
											"end": 6117,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6090,
											"end": 6117,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6090,
											"end": 6117,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6090,
											"end": 6117,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6090,
											"end": 6117,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6090,
											"end": 6117,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6148,
											"end": 6158,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6133,
											"end": 6167,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6133,
											"end": 6167,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6133,
											"end": 6167,
											"name": "PUSH",
											"source": 6,
											"value": "C28711C8DCC0CB3D25732E13809D1D8C2640669A0A3FB4F7729810A9CAAFFDFF"
										},
										{
											"begin": 6160,
											"end": 6166,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6133,
											"end": 6167,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6133,
											"end": 6167,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6133,
											"end": 6167,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 6133,
											"end": 6167,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6133,
											"end": 6167,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6133,
											"end": 6167,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 6133,
											"end": 6167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6133,
											"end": 6167,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 6133,
											"end": 6167,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6133,
											"end": 6167,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6133,
											"end": 6167,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6133,
											"end": 6167,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6133,
											"end": 6167,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6133,
											"end": 6167,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6133,
											"end": 6167,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6133,
											"end": 6167,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 5874,
											"end": 6174,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5874,
											"end": 6174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4643,
											"end": 4990,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 4643,
											"end": 4990,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4723,
											"end": 4738,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "D"
										},
										{
											"begin": 4723,
											"end": 4738,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4723,
											"end": 4740,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4723,
											"end": 4740,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4723,
											"end": 4740,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4723,
											"end": 4740,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4723,
											"end": 4740,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4723,
											"end": 4740,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4723,
											"end": 4740,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 4723,
											"end": 4740,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4723,
											"end": 4740,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 4723,
											"end": 4740,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4723,
											"end": 4740,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 4723,
											"end": 4740,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4723,
											"end": 4740,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4723,
											"end": 4740,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4723,
											"end": 4740,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4723,
											"end": 4740,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4723,
											"end": 4740,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4779,
											"end": 4922,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4779,
											"end": 4922,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4779,
											"end": 4922,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4779,
											"end": 4922,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 4779,
											"end": 4922,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4779,
											"end": 4922,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4779,
											"end": 4922,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4779,
											"end": 4922,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4815,
											"end": 4826,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4779,
											"end": 4922,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4779,
											"end": 4922,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4779,
											"end": 4922,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4779,
											"end": 4922,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4850,
											"end": 4851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4779,
											"end": 4922,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4779,
											"end": 4922,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4779,
											"end": 4922,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4779,
											"end": 4922,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4879,
											"end": 4880,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4779,
											"end": 4922,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4779,
											"end": 4922,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4779,
											"end": 4922,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4779,
											"end": 4922,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4906,
											"end": 4911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4779,
											"end": 4922,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4779,
											"end": 4922,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4779,
											"end": 4922,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4779,
											"end": 4922,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4779,
											"end": 4922,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4750,
											"end": 4759,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 4750,
											"end": 4776,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4760,
											"end": 4775,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "D"
										},
										{
											"begin": 4760,
											"end": 4775,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4750,
											"end": 4776,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4750,
											"end": 4776,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4750,
											"end": 4776,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4750,
											"end": 4776,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4750,
											"end": 4776,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4750,
											"end": 4776,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4750,
											"end": 4776,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4750,
											"end": 4776,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4750,
											"end": 4776,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4750,
											"end": 4776,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4750,
											"end": 4776,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4750,
											"end": 4922,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4750,
											"end": 4922,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4750,
											"end": 4922,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4750,
											"end": 4922,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4750,
											"end": 4922,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4750,
											"end": 4922,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4750,
											"end": 4922,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4750,
											"end": 4922,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4750,
											"end": 4922,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4750,
											"end": 4922,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 4750,
											"end": 4922,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4750,
											"end": 4922,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4750,
											"end": 4922,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 4750,
											"end": 4922,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4750,
											"end": 4922,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 4750,
											"end": 4922,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4750,
											"end": 4922,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4750,
											"end": 4922,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4750,
											"end": 4922,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4750,
											"end": 4922,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4750,
											"end": 4922,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4750,
											"end": 4922,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4750,
											"end": 4922,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4750,
											"end": 4922,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4750,
											"end": 4922,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4750,
											"end": 4922,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4750,
											"end": 4922,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4750,
											"end": 4922,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4750,
											"end": 4922,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4750,
											"end": 4922,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4750,
											"end": 4922,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 4750,
											"end": 4922,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4750,
											"end": 4922,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4750,
											"end": 4922,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4750,
											"end": 4922,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4750,
											"end": 4922,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4750,
											"end": 4922,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4750,
											"end": 4922,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4750,
											"end": 4922,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 4750,
											"end": 4922,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4750,
											"end": 4922,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4750,
											"end": 4922,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4750,
											"end": 4922,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4750,
											"end": 4922,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4750,
											"end": 4922,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4750,
											"end": 4922,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4750,
											"end": 4922,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4750,
											"end": 4922,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4750,
											"end": 4922,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 4750,
											"end": 4922,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4750,
											"end": 4922,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4750,
											"end": 4922,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4750,
											"end": 4922,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4750,
											"end": 4922,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4750,
											"end": 4922,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4750,
											"end": 4922,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 4750,
											"end": 4922,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4750,
											"end": 4922,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4750,
											"end": 4922,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4750,
											"end": 4922,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4750,
											"end": 4922,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4750,
											"end": 4922,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4954,
											"end": 4969,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "D"
										},
										{
											"begin": 4954,
											"end": 4969,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4938,
											"end": 4983,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "9C770C289AB5BF7E57CB1D23C8CEAE993AEA46EB64847072FD3D78CA60D3E432"
										},
										{
											"begin": 4971,
											"end": 4982,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4938,
											"end": 4983,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4938,
											"end": 4983,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4938,
											"end": 4983,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 4938,
											"end": 4983,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4938,
											"end": 4983,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4938,
											"end": 4983,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 4938,
											"end": 4983,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4938,
											"end": 4983,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 4938,
											"end": 4983,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4938,
											"end": 4983,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4938,
											"end": 4983,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4938,
											"end": 4983,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4938,
											"end": 4983,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4938,
											"end": 4983,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4938,
											"end": 4983,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4938,
											"end": 4983,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 4643,
											"end": 4990,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4643,
											"end": 4990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6226,
											"end": 6767,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 6226,
											"end": 6767,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6317,
											"end": 6318,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6292,
											"end": 6299,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 6292,
											"end": 6307,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6292,
											"end": 6307,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6292,
											"end": 6314,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6292,
											"end": 6314,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6292,
											"end": 6314,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6292,
											"end": 6314,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6292,
											"end": 6318,
											"modifierDepth": 1,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 6284,
											"end": 6353,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 6284,
											"end": 6353,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6284,
											"end": 6353,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6284,
											"end": 6353,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6284,
											"end": 6353,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6284,
											"end": 6353,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6284,
											"end": 6353,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6284,
											"end": 6353,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6284,
											"end": 6353,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6284,
											"end": 6353,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 6284,
											"end": 6353,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6284,
											"end": 6353,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 6284,
											"end": 6353,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6284,
											"end": 6353,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 6284,
											"end": 6353,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6284,
											"end": 6353,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6284,
											"end": 6353,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6284,
											"end": 6353,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6284,
											"end": 6353,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6284,
											"end": 6353,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6284,
											"end": 6353,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6284,
											"end": 6353,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6284,
											"end": 6353,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 6284,
											"end": 6353,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6364,
											"end": 6383,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6482,
											"end": 6489,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 6482,
											"end": 6497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6482,
											"end": 6497,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6482,
											"end": 6504,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6482,
											"end": 6504,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6482,
											"end": 6504,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6482,
											"end": 6504,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6434,
											"end": 6449,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 6451,
											"end": 6467,
											"modifierDepth": 1,
											"name": "PREVRANDAO",
											"source": 6
										},
										{
											"begin": 6417,
											"end": 6468,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6417,
											"end": 6468,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6417,
											"end": 6468,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6417,
											"end": 6468,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6417,
											"end": 6468,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 6417,
											"end": 6468,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6417,
											"end": 6468,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6417,
											"end": 6468,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6417,
											"end": 6468,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 6417,
											"end": 6468,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6417,
											"end": 6468,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 6417,
											"end": 6468,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6417,
											"end": 6468,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6417,
											"end": 6468,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6417,
											"end": 6468,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6417,
											"end": 6468,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6417,
											"end": 6468,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6417,
											"end": 6468,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6417,
											"end": 6468,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6417,
											"end": 6468,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6417,
											"end": 6468,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6417,
											"end": 6468,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6417,
											"end": 6468,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6417,
											"end": 6468,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6407,
											"end": 6469,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6407,
											"end": 6469,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6407,
											"end": 6469,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6407,
											"end": 6469,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6407,
											"end": 6469,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6407,
											"end": 6469,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6386,
											"end": 6479,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6386,
											"end": 6479,
											"modifierDepth": 1,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 6386,
											"end": 6504,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 6386,
											"end": 6504,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6386,
											"end": 6504,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6386,
											"end": 6504,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 6386,
											"end": 6504,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6386,
											"end": 6504,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 6386,
											"end": 6504,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6364,
											"end": 6504,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6364,
											"end": 6504,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6528,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6531,
											"end": 6538,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 6531,
											"end": 6546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6531,
											"end": 6546,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6547,
											"end": 6558,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6531,
											"end": 6559,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6531,
											"end": 6559,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6531,
											"end": 6559,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6531,
											"end": 6559,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6531,
											"end": 6559,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 6531,
											"end": 6559,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6531,
											"end": 6559,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 6531,
											"end": 6559,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 6531,
											"end": 6559,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6531,
											"end": 6559,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 6531,
											"end": 6559,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6531,
											"end": 6559,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 6531,
											"end": 6559,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6531,
											"end": 6559,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6531,
											"end": 6559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6531,
											"end": 6559,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6531,
											"end": 6559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6531,
											"end": 6559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6531,
											"end": 6559,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6531,
											"end": 6559,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6531,
											"end": 6559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6531,
											"end": 6559,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6531,
											"end": 6559,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6531,
											"end": 6559,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6531,
											"end": 6559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 6531,
											"end": 6559,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 6531,
											"end": 6559,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6531,
											"end": 6559,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 6531,
											"end": 6559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6531,
											"end": 6559,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6559,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6559,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6570,
											"end": 6583,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6586,
											"end": 6593,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 6586,
											"end": 6603,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6586,
											"end": 6603,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6586,
											"end": 6603,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6570,
											"end": 6603,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6570,
											"end": 6603,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6633,
											"end": 6634,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6613,
											"end": 6620,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 6613,
											"end": 6630,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6613,
											"end": 6630,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6613,
											"end": 6634,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6613,
											"end": 6634,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6613,
											"end": 6634,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6613,
											"end": 6634,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6651,
											"end": 6658,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 6651,
											"end": 6666,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6651,
											"end": 6666,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6651,
											"end": 6666,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6644,
											"end": 6666,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 6644,
											"end": 6666,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6644,
											"end": 6666,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6644,
											"end": 6666,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 6644,
											"end": 6666,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6644,
											"end": 6666,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 6644,
											"end": 6666,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6677,
											"end": 6716,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 6695,
											"end": 6699,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 6702,
											"end": 6708,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6710,
											"end": 6715,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6677,
											"end": 6686,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 6677,
											"end": 6716,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6677,
											"end": 6716,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 6677,
											"end": 6716,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6746,
											"end": 6752,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6732,
											"end": 6760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6732,
											"end": 6760,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6732,
											"end": 6760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "275EAACF9E506F9C68B251C2F97CF723C4FB9A3B94E42A1DFB581543C135F0C0"
										},
										{
											"begin": 6754,
											"end": 6759,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6732,
											"end": 6760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6732,
											"end": 6760,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6732,
											"end": 6760,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 6732,
											"end": 6760,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6732,
											"end": 6760,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6732,
											"end": 6760,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 6732,
											"end": 6760,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6732,
											"end": 6760,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 6732,
											"end": 6760,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6732,
											"end": 6760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6732,
											"end": 6760,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6732,
											"end": 6760,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6732,
											"end": 6760,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6732,
											"end": 6760,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6732,
											"end": 6760,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6732,
											"end": 6760,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 6274,
											"end": 6767,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6274,
											"end": 6767,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6274,
											"end": 6767,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6226,
											"end": 6767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1426,
											"end": 1466,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 1426,
											"end": 1466,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1426,
											"end": 1466,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 1426,
											"end": 1466,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1426,
											"end": 1466,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1426,
											"end": 1466,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2704,
											"end": 3668,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 2704,
											"end": 3668,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2789,
											"end": 2790,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2786,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2780,
											"end": 2790,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2772,
											"end": 2819,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 2772,
											"end": 2819,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2772,
											"end": 2819,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2772,
											"end": 2819,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2772,
											"end": 2819,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2772,
											"end": 2819,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2772,
											"end": 2819,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2772,
											"end": 2819,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2772,
											"end": 2819,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2772,
											"end": 2819,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 2772,
											"end": 2819,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2772,
											"end": 2819,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 2772,
											"end": 2819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2772,
											"end": 2819,
											"name": "tag",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 2772,
											"end": 2819,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2772,
											"end": 2819,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2772,
											"end": 2819,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2772,
											"end": 2819,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2772,
											"end": 2819,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2772,
											"end": 2819,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2772,
											"end": 2819,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2772,
											"end": 2819,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2772,
											"end": 2819,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 2772,
											"end": 2819,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2829,
											"end": 2873,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 2839,
											"end": 2849,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2859,
											"end": 2863,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 2866,
											"end": 2872,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2829,
											"end": 2838,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 2829,
											"end": 2873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2829,
											"end": 2873,
											"name": "tag",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 2829,
											"end": 2873,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2884,
											"end": 2907,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2910,
											"end": 2916,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2910,
											"end": 2928,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2917,
											"end": 2927,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2910,
											"end": 2928,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2910,
											"end": 2928,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2910,
											"end": 2928,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2910,
											"end": 2928,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2910,
											"end": 2928,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2910,
											"end": 2928,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2910,
											"end": 2928,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2910,
											"end": 2928,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2910,
											"end": 2928,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2910,
											"end": 2928,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2910,
											"end": 2928,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2910,
											"end": 2928,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2910,
											"end": 2928,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2910,
											"end": 2928,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2910,
											"end": 2928,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2884,
											"end": 2928,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2884,
											"end": 2928,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2938,
											"end": 2957,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2960,
											"end": 2975,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 2938,
											"end": 2975,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2938,
											"end": 2975,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3058,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3038,
											"end": 3047,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3038,
											"end": 3054,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3038,
											"end": 3054,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3038,
											"end": 3054,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3038,
											"end": 3058,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3034,
											"end": 3235,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3034,
											"end": 3235,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 3034,
											"end": 3235,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3074,
											"end": 3090,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3107,
											"end": 3116,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3107,
											"end": 3136,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 3107,
											"end": 3136,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3107,
											"end": 3136,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3093,
											"end": 3104,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3093,
											"end": 3136,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 3093,
											"end": 3136,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3093,
											"end": 3136,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3093,
											"end": 3136,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 3093,
											"end": 3136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3093,
											"end": 3136,
											"name": "tag",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 3093,
											"end": 3136,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3074,
											"end": 3136,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3074,
											"end": 3136,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3181,
											"end": 3224,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 3197,
											"end": 3206,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3197,
											"end": 3213,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3197,
											"end": 3213,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3197,
											"end": 3213,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3215,
											"end": 3223,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3181,
											"end": 3196,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 3181,
											"end": 3224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3181,
											"end": 3224,
											"name": "tag",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 3181,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3150,
											"end": 3159,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3150,
											"end": 3177,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3150,
											"end": 3177,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3150,
											"end": 3177,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3150,
											"end": 3224,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3150,
											"end": 3224,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3150,
											"end": 3224,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3150,
											"end": 3224,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 3150,
											"end": 3224,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3150,
											"end": 3224,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3150,
											"end": 3224,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 3150,
											"end": 3224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3150,
											"end": 3224,
											"name": "tag",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 3150,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3150,
											"end": 3224,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3150,
											"end": 3224,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3150,
											"end": 3224,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3150,
											"end": 3224,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3150,
											"end": 3224,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3150,
											"end": 3224,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3150,
											"end": 3224,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3060,
											"end": 3235,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3034,
											"end": 3235,
											"name": "tag",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 3034,
											"end": 3235,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3265,
											"end": 3271,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3245,
											"end": 3254,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3245,
											"end": 3261,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3245,
											"end": 3261,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3245,
											"end": 3261,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3245,
											"end": 3271,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3245,
											"end": 3271,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3245,
											"end": 3271,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3245,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 3245,
											"end": 3271,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3245,
											"end": 3271,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3245,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 3245,
											"end": 3271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3245,
											"end": 3271,
											"name": "tag",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 3245,
											"end": 3271,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3245,
											"end": 3271,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3245,
											"end": 3271,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3245,
											"end": 3271,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3245,
											"end": 3271,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3245,
											"end": 3271,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3245,
											"end": 3271,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3245,
											"end": 3271,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3313,
											"end": 3324,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3281,
											"end": 3290,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3281,
											"end": 3310,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 3281,
											"end": 3310,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3281,
											"end": 3324,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3281,
											"end": 3324,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3281,
											"end": 3324,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3281,
											"end": 3324,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3385,
											"end": 3386,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3365,
											"end": 3387,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3365,
											"end": 3387,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3365,
											"end": 3373,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3365,
											"end": 3387,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3365,
											"end": 3387,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3365,
											"end": 3387,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3365,
											"end": 3387,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3365,
											"end": 3413,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3365,
											"end": 3413,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3365,
											"end": 3413,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 3365,
											"end": 3413,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3365,
											"end": 3413,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3403,
											"end": 3413,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3391,
											"end": 3413,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3391,
											"end": 3413,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3391,
											"end": 3399,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3391,
											"end": 3413,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3391,
											"end": 3413,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3391,
											"end": 3413,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3391,
											"end": 3413,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3365,
											"end": 3413,
											"name": "tag",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 3365,
											"end": 3413,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3361,
											"end": 3566,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3361,
											"end": 3566,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 3361,
											"end": 3566,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3429,
											"end": 3442,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3473,
											"end": 3476,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 1541,
											"end": 1542,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3446,
											"end": 3452,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3446,
											"end": 3469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 3446,
											"end": 3469,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3446,
											"end": 3469,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3446,
											"end": 3469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 3446,
											"end": 3469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3446,
											"end": 3469,
											"name": "tag",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 3446,
											"end": 3469,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3476,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 3445,
											"end": 3476,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3476,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3476,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 3445,
											"end": 3476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3476,
											"name": "tag",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 3445,
											"end": 3476,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3429,
											"end": 3476,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3429,
											"end": 3476,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3490,
											"end": 3512,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 3496,
											"end": 3504,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3506,
											"end": 3511,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3490,
											"end": 3495,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 3490,
											"end": 3512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3490,
											"end": 3512,
											"name": "tag",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 3490,
											"end": 3512,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3547,
											"end": 3555,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3526,
											"end": 3535,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3526,
											"end": 3544,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3526,
											"end": 3544,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3526,
											"end": 3544,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3526,
											"end": 3555,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3526,
											"end": 3555,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3526,
											"end": 3555,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3526,
											"end": 3555,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3526,
											"end": 3555,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3526,
											"end": 3555,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3526,
											"end": 3555,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3526,
											"end": 3555,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3526,
											"end": 3555,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3526,
											"end": 3555,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3526,
											"end": 3555,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3526,
											"end": 3555,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3526,
											"end": 3555,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3526,
											"end": 3555,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3526,
											"end": 3555,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 3526,
											"end": 3555,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3526,
											"end": 3555,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3526,
											"end": 3555,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3415,
											"end": 3566,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3361,
											"end": 3566,
											"name": "tag",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 3361,
											"end": 3566,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3603,
											"end": 3609,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3576,
											"end": 3587,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 3576,
											"end": 3599,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 3576,
											"end": 3599,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3576,
											"end": 3599,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3576,
											"end": 3609,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3576,
											"end": 3609,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3576,
											"end": 3609,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3576,
											"end": 3609,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 3576,
											"end": 3609,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3576,
											"end": 3609,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3576,
											"end": 3609,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 3576,
											"end": 3609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3576,
											"end": 3609,
											"name": "tag",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 3576,
											"end": 3609,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3576,
											"end": 3609,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3576,
											"end": 3609,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3576,
											"end": 3609,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3576,
											"end": 3609,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3576,
											"end": 3609,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3576,
											"end": 3609,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3576,
											"end": 3609,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3652,
											"end": 3660,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3625,
											"end": 3661,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3625,
											"end": 3661,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3632,
											"end": 3642,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3625,
											"end": 3661,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3625,
											"end": 3661,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3625,
											"end": 3661,
											"name": "PUSH",
											"source": 6,
											"value": "9F9E4044C5742CCA66CA090B21552BAC14645E68BAD7A92364A9D9FF18111A1C"
										},
										{
											"begin": 3644,
											"end": 3650,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3625,
											"end": 3661,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3625,
											"end": 3661,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3625,
											"end": 3661,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 3625,
											"end": 3661,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3625,
											"end": 3661,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3625,
											"end": 3661,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 3625,
											"end": 3661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3625,
											"end": 3661,
											"name": "tag",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 3625,
											"end": 3661,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3625,
											"end": 3661,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3625,
											"end": 3661,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3625,
											"end": 3661,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3625,
											"end": 3661,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3625,
											"end": 3661,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3625,
											"end": 3661,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3625,
											"end": 3661,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 2762,
											"end": 3668,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2762,
											"end": 3668,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2704,
											"end": 3668,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2704,
											"end": 3668,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2704,
											"end": 3668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2028,
											"end": 2041,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3413,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 3448,
											"end": 3453,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3457,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 3438,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "tag",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3482,
											"end": 3486,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6851,
											"end": 6960,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 6851,
											"end": 6960,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6903,
											"end": 6919,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 6938,
											"end": 6945,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 6938,
											"end": 6953,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6938,
											"end": 6953,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6931,
											"end": 6953,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6931,
											"end": 6953,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6931,
											"end": 6953,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6931,
											"end": 6953,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6931,
											"end": 6953,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 6931,
											"end": 6953,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6931,
											"end": 6953,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6931,
											"end": 6953,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6931,
											"end": 6953,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6931,
											"end": 6953,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6931,
											"end": 6953,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6931,
											"end": 6953,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6931,
											"end": 6953,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6931,
											"end": 6953,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6931,
											"end": 6953,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6931,
											"end": 6953,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6931,
											"end": 6953,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6931,
											"end": 6953,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6931,
											"end": 6953,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6931,
											"end": 6953,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6931,
											"end": 6953,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6931,
											"end": 6953,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6931,
											"end": 6953,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6931,
											"end": 6953,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6931,
											"end": 6953,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6931,
											"end": 6953,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6931,
											"end": 6953,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6931,
											"end": 6953,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6931,
											"end": 6953,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 6931,
											"end": 6953,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6931,
											"end": 6953,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6931,
											"end": 6953,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 6931,
											"end": 6953,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6931,
											"end": 6953,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6931,
											"end": 6953,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6931,
											"end": 6953,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6931,
											"end": 6953,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6931,
											"end": 6953,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6931,
											"end": 6953,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6931,
											"end": 6953,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6931,
											"end": 6953,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6931,
											"end": 6953,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6931,
											"end": 6953,
											"name": "tag",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 6931,
											"end": 6953,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6931,
											"end": 6953,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6931,
											"end": 6953,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6931,
											"end": 6953,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6931,
											"end": 6953,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6931,
											"end": 6953,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6931,
											"end": 6953,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 6931,
											"end": 6953,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 6931,
											"end": 6953,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6931,
											"end": 6953,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 6931,
											"end": 6953,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6931,
											"end": 6953,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6931,
											"end": 6953,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6931,
											"end": 6953,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6931,
											"end": 6953,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6931,
											"end": 6953,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6931,
											"end": 6953,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6931,
											"end": 6953,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6931,
											"end": 6953,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6931,
											"end": 6953,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6931,
											"end": 6953,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6931,
											"end": 6953,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6931,
											"end": 6953,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6931,
											"end": 6953,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6931,
											"end": 6953,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 6931,
											"end": 6953,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 6931,
											"end": 6953,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6931,
											"end": 6953,
											"name": "tag",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 6931,
											"end": 6953,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6931,
											"end": 6953,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6931,
											"end": 6953,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6931,
											"end": 6953,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6931,
											"end": 6953,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6931,
											"end": 6953,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6931,
											"end": 6953,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6931,
											"end": 6953,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6851,
											"end": 6960,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6851,
											"end": 6960,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1281,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 1259,
											"end": 1281,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1281,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 1259,
											"end": 1281,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1281,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1259,
											"end": 1281,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1281,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1281,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1281,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5150,
											"end": 5752,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 5150,
											"end": 5752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5217,
											"end": 5242,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5245,
											"end": 5254,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 5245,
											"end": 5266,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5255,
											"end": 5265,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5245,
											"end": 5266,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5245,
											"end": 5266,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5245,
											"end": 5266,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5245,
											"end": 5266,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5245,
											"end": 5266,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5245,
											"end": 5266,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5245,
											"end": 5266,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5245,
											"end": 5266,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5245,
											"end": 5266,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5245,
											"end": 5266,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5245,
											"end": 5266,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5217,
											"end": 5266,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5217,
											"end": 5266,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5321,
											"end": 5322,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5290,
											"end": 5298,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5290,
											"end": 5310,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5290,
											"end": 5310,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5284,
											"end": 5318,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5284,
											"end": 5318,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5284,
											"end": 5318,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 5284,
											"end": 5318,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5284,
											"end": 5318,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 5284,
											"end": 5318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5284,
											"end": 5318,
											"name": "tag",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 5284,
											"end": 5318,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5284,
											"end": 5318,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5284,
											"end": 5318,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5284,
											"end": 5322,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5276,
											"end": 5346,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 5276,
											"end": 5346,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5276,
											"end": 5346,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5276,
											"end": 5346,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5276,
											"end": 5346,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5276,
											"end": 5346,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5276,
											"end": 5346,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5276,
											"end": 5346,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5276,
											"end": 5346,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5276,
											"end": 5346,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 5276,
											"end": 5346,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5276,
											"end": 5346,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 5276,
											"end": 5346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5276,
											"end": 5346,
											"name": "tag",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 5276,
											"end": 5346,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5276,
											"end": 5346,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5276,
											"end": 5346,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5276,
											"end": 5346,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5276,
											"end": 5346,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5276,
											"end": 5346,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5276,
											"end": 5346,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5276,
											"end": 5346,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5276,
											"end": 5346,
											"name": "tag",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 5276,
											"end": 5346,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5357,
											"end": 5377,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5380,
											"end": 5386,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5387,
											"end": 5397,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5380,
											"end": 5405,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5380,
											"end": 5405,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5380,
											"end": 5405,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5357,
											"end": 5405,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5357,
											"end": 5405,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5438,
											"end": 5439,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5423,
											"end": 5435,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5423,
											"end": 5439,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5415,
											"end": 5468,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 5415,
											"end": 5468,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5415,
											"end": 5468,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5415,
											"end": 5468,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5415,
											"end": 5468,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5415,
											"end": 5468,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5415,
											"end": 5468,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5415,
											"end": 5468,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5415,
											"end": 5468,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5415,
											"end": 5468,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 5415,
											"end": 5468,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5415,
											"end": 5468,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 5415,
											"end": 5468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5415,
											"end": 5468,
											"name": "tag",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 5415,
											"end": 5468,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5415,
											"end": 5468,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5415,
											"end": 5468,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5415,
											"end": 5468,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5415,
											"end": 5468,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5415,
											"end": 5468,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5415,
											"end": 5468,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5415,
											"end": 5468,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5415,
											"end": 5468,
											"name": "tag",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 5415,
											"end": 5468,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5483,
											"end": 5490,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5479,
											"end": 5618,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5479,
											"end": 5618,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 5479,
											"end": 5618,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5527,
											"end": 5539,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5506,
											"end": 5514,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5506,
											"end": 5523,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5506,
											"end": 5523,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5506,
											"end": 5523,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5506,
											"end": 5539,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5506,
											"end": 5539,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5506,
											"end": 5539,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5506,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 5506,
											"end": 5539,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5506,
											"end": 5539,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5506,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 5506,
											"end": 5539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5506,
											"end": 5539,
											"name": "tag",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 5506,
											"end": 5539,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5506,
											"end": 5539,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5506,
											"end": 5539,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5506,
											"end": 5539,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5506,
											"end": 5539,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5506,
											"end": 5539,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5506,
											"end": 5539,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5506,
											"end": 5539,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5479,
											"end": 5618,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 5479,
											"end": 5618,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5479,
											"end": 5618,
											"name": "tag",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 5479,
											"end": 5618,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5595,
											"end": 5607,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5570,
											"end": 5578,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5570,
											"end": 5591,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 5570,
											"end": 5591,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5570,
											"end": 5591,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5570,
											"end": 5607,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5570,
											"end": 5607,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5570,
											"end": 5607,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5570,
											"end": 5607,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 5570,
											"end": 5607,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5570,
											"end": 5607,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5570,
											"end": 5607,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 5570,
											"end": 5607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5570,
											"end": 5607,
											"name": "tag",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 5570,
											"end": 5607,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5570,
											"end": 5607,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5570,
											"end": 5607,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5570,
											"end": 5607,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5570,
											"end": 5607,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5570,
											"end": 5607,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5570,
											"end": 5607,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5570,
											"end": 5607,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5479,
											"end": 5618,
											"name": "tag",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 5479,
											"end": 5618,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5670,
											"end": 5678,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5670,
											"end": 5691,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 5670,
											"end": 5691,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5670,
											"end": 5691,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5650,
											"end": 5658,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5650,
											"end": 5667,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5650,
											"end": 5667,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5650,
											"end": 5667,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5650,
											"end": 5691,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5628,
											"end": 5636,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5628,
											"end": 5647,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 5628,
											"end": 5647,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5628,
											"end": 5647,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5628,
											"end": 5691,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 5628,
											"end": 5691,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 5628,
											"end": 5691,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5628,
											"end": 5691,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5628,
											"end": 5691,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5628,
											"end": 5691,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 5628,
											"end": 5691,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5628,
											"end": 5691,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 5628,
											"end": 5691,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5628,
											"end": 5691,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5628,
											"end": 5691,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5628,
											"end": 5691,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5628,
											"end": 5691,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5628,
											"end": 5691,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5628,
											"end": 5691,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 5628,
											"end": 5691,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5628,
											"end": 5691,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5628,
											"end": 5691,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5725,
											"end": 5735,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5707,
											"end": 5745,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5707,
											"end": 5745,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5723,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5707,
											"end": 5745,
											"name": "PUSH",
											"source": 6,
											"value": "F2913DBE661EE2ACC4A046D8FBCDC792373BDA34C41C6086484B5345E5785E5F"
										},
										{
											"begin": 5737,
											"end": 5744,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5707,
											"end": 5745,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5707,
											"end": 5745,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5707,
											"end": 5745,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 5707,
											"end": 5745,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5707,
											"end": 5745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5707,
											"end": 5745,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 5707,
											"end": 5745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5707,
											"end": 5745,
											"name": "tag",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 5707,
											"end": 5745,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5707,
											"end": 5745,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5707,
											"end": 5745,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5707,
											"end": 5745,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5707,
											"end": 5745,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5707,
											"end": 5745,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5707,
											"end": 5745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5707,
											"end": 5745,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 5207,
											"end": 5752,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5207,
											"end": 5752,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5150,
											"end": 5752,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5150,
											"end": 5752,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5150,
											"end": 5752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7051,
											"end": 7155,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 7051,
											"end": 7155,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7105,
											"end": 7112,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7131,
											"end": 7138,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 7131,
											"end": 7148,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 7131,
											"end": 7148,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7131,
											"end": 7148,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7124,
											"end": 7148,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7124,
											"end": 7148,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7051,
											"end": 7155,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7051,
											"end": 7155,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3674,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3683,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1500,
											"end": 1542,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 1500,
											"end": 1542,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1541,
											"end": 1542,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1500,
											"end": 1542,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1500,
											"end": 1542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 8819,
											"end": 8824,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8826,
											"end": 8833,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8835,
											"end": 8840,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8810,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 8810,
											"end": 8847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "tag",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10514,
											"end": 10538,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "300"
										},
										{
											"begin": 10551,
											"end": 10556,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10558,
											"end": 10565,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10541,
											"end": 10550,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 10541,
											"end": 10566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "tag",
											"source": 2,
											"value": "300"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10600,
											"end": 10617,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10580,
											"end": 10596,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10580,
											"end": 10617,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10656,
											"end": 10661,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10637,
											"end": 10653,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10637,
											"end": 10661,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "302"
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10715,
											"end": 10722,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10724,
											"end": 10740,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10742,
											"end": 10747,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 2,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "304"
										},
										{
											"begin": 10688,
											"end": 10748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "tag",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "tag",
											"source": 2,
											"value": "302"
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "305"
										},
										{
											"begin": 10813,
											"end": 10818,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10820,
											"end": 10827,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10848,
											"end": 10853,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10829,
											"end": 10845,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10829,
											"end": 10853,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10855,
											"end": 10860,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10804,
											"end": 10812,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 10804,
											"end": 10861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "tag",
											"source": 2,
											"value": "305"
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "tag",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10504,
											"end": 10892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5492,
											"end": 5493,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5480,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "307"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5544,
											"end": 5545,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 5517,
											"end": 5547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "tag",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "tag",
											"source": 2,
											"value": "307"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5586,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5573,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "310"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 5610,
											"end": 5642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "tag",
											"source": 2,
											"value": "310"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "tag",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "311"
										},
										{
											"begin": 5670,
											"end": 5674,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5680,
											"end": 5685,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "312"
										},
										{
											"begin": 5662,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "tag",
											"source": 2,
											"value": "311"
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "tag",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8074,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8054,
											"end": 8061,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "314"
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8125,
											"end": 8126,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 8098,
											"end": 8128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "tag",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "tag",
											"source": 2,
											"value": "314"
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 8156,
											"end": 8163,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8173,
											"end": 8174,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8177,
											"end": 8182,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8148,
											"end": 8155,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "312"
										},
										{
											"begin": 8148,
											"end": 8183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "tag",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7984,
											"end": 8190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "tag",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7547,
											"end": 7548,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7528,
											"end": 7535,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "325"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7601,
											"end": 7602,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "326"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 7572,
											"end": 7604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "tag",
											"source": 2,
											"value": "326"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "tag",
											"source": 2,
											"value": "325"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "327"
										},
										{
											"begin": 7640,
											"end": 7641,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7644,
											"end": 7651,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7653,
											"end": 7658,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7624,
											"end": 7631,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "312"
										},
										{
											"begin": 7624,
											"end": 7659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "tag",
											"source": 2,
											"value": "327"
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7458,
											"end": 7666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "tag",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9830,
											"end": 9831,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9813,
											"end": 9818,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "329"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9884,
											"end": 9885,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "330"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 9855,
											"end": 9887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "tag",
											"source": 2,
											"value": "330"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "tag",
											"source": 2,
											"value": "329"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9930,
											"end": 9931,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9918,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "331"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "332"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 9955,
											"end": 9986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "tag",
											"source": 2,
											"value": "332"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "tag",
											"source": 2,
											"value": "331"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10036,
											"end": 10041,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10017,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10018,
											"end": 10023,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10025,
											"end": 10032,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10055,
											"end": 10064,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "333"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "334"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 10085,
											"end": 10116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "tag",
											"source": 2,
											"value": "334"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "tag",
											"source": 2,
											"value": "333"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "tag",
											"source": 2,
											"value": "312"
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6113,
											"end": 6114,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6097,
											"end": 6101,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "336"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "337"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 6233,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "tag",
											"source": 2,
											"value": "337"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "338"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 2,
											"value": "336"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6285,
											"end": 6304,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6316,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6317,
											"end": 6321,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6354,
											"end": 6359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6340,
											"end": 6351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "339"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6411,
											"end": 6415,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6417,
											"end": 6428,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6430,
											"end": 6435,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "340"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "304"
										},
										{
											"begin": 6386,
											"end": 6436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "tag",
											"source": 2,
											"value": "340"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "tag",
											"source": 2,
											"value": "339"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6608,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6589,
											"end": 6600,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6581,
											"end": 6585,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 6633,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 2,
											"value": "338"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6661,
											"end": 6662,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 6649,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "341"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6826,
											"end": 6831,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "342"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 2,
											"value": "341"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7038,
											"end": 7043,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7031,
											"end": 7033,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 2,
											"value": "342"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7092,
											"end": 7096,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7102,
											"end": 7107,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "343"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 7083,
											"end": 7108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "tag",
											"source": 2,
											"value": "343"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "234"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "345"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "346"
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "345"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "346"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "347"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "348"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "347"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "348"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "427"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 7,
											"value": "427"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "429"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 7,
											"value": "429"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "431"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "432"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 7,
											"value": "432"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 7,
											"value": "431"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "433"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 7,
											"value": "433"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "tag",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1077,
											"end": 1083,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1111,
											"end": 1116,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1105,
											"end": 1117,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1095,
											"end": 1117,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1095,
											"end": 1117,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1025,
											"end": 1124,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1130,
											"end": 1299,
											"name": "tag",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 1130,
											"end": 1299,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1214,
											"end": 1225,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1248,
											"end": 1254,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1243,
											"end": 1246,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1236,
											"end": 1255,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1288,
											"end": 1292,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1283,
											"end": 1286,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1279,
											"end": 1293,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1264,
											"end": 1293,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1264,
											"end": 1293,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1130,
											"end": 1299,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1130,
											"end": 1299,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1130,
											"end": 1299,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1130,
											"end": 1299,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1130,
											"end": 1299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1305,
											"end": 1444,
											"name": "tag",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 1305,
											"end": 1444,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1394,
											"end": 1400,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1392,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1384,
											"end": 1387,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1378,
											"end": 1401,
											"name": "MCOPY",
											"source": 7
										},
										{
											"begin": 1435,
											"end": 1436,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1426,
											"end": 1432,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1421,
											"end": 1424,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1417,
											"end": 1433,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1410,
											"end": 1437,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1305,
											"end": 1444,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1305,
											"end": 1444,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1305,
											"end": 1444,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1305,
											"end": 1444,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1450,
											"end": 1552,
											"name": "tag",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 1450,
											"end": 1552,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1491,
											"end": 1497,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1542,
											"end": 1544,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1538,
											"end": 1545,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 1533,
											"end": 1535,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1526,
											"end": 1531,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1522,
											"end": 1536,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1518,
											"end": 1546,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1508,
											"end": 1546,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1508,
											"end": 1546,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1450,
											"end": 1552,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1450,
											"end": 1552,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1450,
											"end": 1552,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1450,
											"end": 1552,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1558,
											"end": 1935,
											"name": "tag",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 1558,
											"end": 1935,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1646,
											"end": 1649,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1674,
											"end": 1713,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "439"
										},
										{
											"begin": 1707,
											"end": 1712,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1674,
											"end": 1713,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 1674,
											"end": 1713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1674,
											"end": 1713,
											"name": "tag",
											"source": 7,
											"value": "439"
										},
										{
											"begin": 1674,
											"end": 1713,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1729,
											"end": 1800,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "440"
										},
										{
											"begin": 1793,
											"end": 1799,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1788,
											"end": 1791,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1729,
											"end": 1800,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 1729,
											"end": 1800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1729,
											"end": 1800,
											"name": "tag",
											"source": 7,
											"value": "440"
										},
										{
											"begin": 1729,
											"end": 1800,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1722,
											"end": 1800,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1722,
											"end": 1800,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1874,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "441"
										},
										{
											"begin": 1867,
											"end": 1873,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1862,
											"end": 1865,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1855,
											"end": 1859,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1848,
											"end": 1853,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1844,
											"end": 1860,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1874,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 1809,
											"end": 1874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1874,
											"name": "tag",
											"source": 7,
											"value": "441"
										},
										{
											"begin": 1809,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1899,
											"end": 1928,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "442"
										},
										{
											"begin": 1921,
											"end": 1927,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1899,
											"end": 1928,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 1899,
											"end": 1928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1899,
											"end": 1928,
											"name": "tag",
											"source": 7,
											"value": "442"
										},
										{
											"begin": 1899,
											"end": 1928,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1894,
											"end": 1897,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1890,
											"end": 1929,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1883,
											"end": 1929,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1883,
											"end": 1929,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1935,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1558,
											"end": 1935,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1558,
											"end": 1935,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1558,
											"end": 1935,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1558,
											"end": 1935,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1558,
											"end": 1935,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1941,
											"end": 2059,
											"name": "tag",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 1941,
											"end": 2059,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2028,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "444"
										},
										{
											"begin": 2046,
											"end": 2051,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2028,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 2028,
											"end": 2052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2028,
											"end": 2052,
											"name": "tag",
											"source": 7,
											"value": "444"
										},
										{
											"begin": 2028,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2023,
											"end": 2026,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2016,
											"end": 2053,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1941,
											"end": 2059,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1941,
											"end": 2059,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1941,
											"end": 2059,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2065,
											"end": 2155,
											"name": "tag",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 2065,
											"end": 2155,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2099,
											"end": 2106,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2135,
											"end": 2148,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2128,
											"end": 2149,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2117,
											"end": 2149,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2117,
											"end": 2149,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2065,
											"end": 2155,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2065,
											"end": 2155,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2065,
											"end": 2155,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2065,
											"end": 2155,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2161,
											"end": 2270,
											"name": "tag",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 2161,
											"end": 2270,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2242,
											"end": 2263,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "447"
										},
										{
											"begin": 2257,
											"end": 2262,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2242,
											"end": 2263,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 2242,
											"end": 2263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2242,
											"end": 2263,
											"name": "tag",
											"source": 7,
											"value": "447"
										},
										{
											"begin": 2242,
											"end": 2263,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2237,
											"end": 2240,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2230,
											"end": 2264,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2161,
											"end": 2270,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2161,
											"end": 2270,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2161,
											"end": 2270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2276,
											"end": 2908,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 2276,
											"end": 2908,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2467,
											"end": 2471,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2505,
											"end": 2508,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 2494,
											"end": 2503,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2490,
											"end": 2509,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2482,
											"end": 2509,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2482,
											"end": 2509,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2555,
											"end": 2564,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2549,
											"end": 2553,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2545,
											"end": 2565,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 2542,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2530,
											"end": 2539,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2526,
											"end": 2543,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2519,
											"end": 2566,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2583,
											"end": 2661,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "449"
										},
										{
											"begin": 2656,
											"end": 2660,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2647,
											"end": 2653,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2583,
											"end": 2661,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 2583,
											"end": 2661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2583,
											"end": 2661,
											"name": "tag",
											"source": 7,
											"value": "449"
										},
										{
											"begin": 2583,
											"end": 2661,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2575,
											"end": 2661,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2575,
											"end": 2661,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2671,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "450"
										},
										{
											"begin": 2739,
											"end": 2741,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2728,
											"end": 2737,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2724,
											"end": 2742,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2715,
											"end": 2721,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2671,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 2671,
											"end": 2743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2671,
											"end": 2743,
											"name": "tag",
											"source": 7,
											"value": "450"
										},
										{
											"begin": 2671,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2753,
											"end": 2825,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "451"
										},
										{
											"begin": 2821,
											"end": 2823,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2810,
											"end": 2819,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2806,
											"end": 2824,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2797,
											"end": 2803,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2753,
											"end": 2825,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 2753,
											"end": 2825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2753,
											"end": 2825,
											"name": "tag",
											"source": 7,
											"value": "451"
										},
										{
											"begin": 2753,
											"end": 2825,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2835,
											"end": 2901,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "452"
										},
										{
											"begin": 2897,
											"end": 2899,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2886,
											"end": 2895,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2882,
											"end": 2900,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2873,
											"end": 2879,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2835,
											"end": 2901,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 2835,
											"end": 2901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2835,
											"end": 2901,
											"name": "tag",
											"source": 7,
											"value": "452"
										},
										{
											"begin": 2835,
											"end": 2901,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2276,
											"end": 2908,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 2276,
											"end": 2908,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 2276,
											"end": 2908,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2276,
											"end": 2908,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2276,
											"end": 2908,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2276,
											"end": 2908,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2276,
											"end": 2908,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2276,
											"end": 2908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 3227,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 2914,
											"end": 3227,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3027,
											"end": 3031,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3065,
											"end": 3067,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3054,
											"end": 3063,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3050,
											"end": 3068,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3042,
											"end": 3068,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3042,
											"end": 3068,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3114,
											"end": 3123,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3108,
											"end": 3112,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3104,
											"end": 3124,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3100,
											"end": 3101,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3089,
											"end": 3098,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3085,
											"end": 3102,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3078,
											"end": 3125,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3142,
											"end": 3220,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "454"
										},
										{
											"begin": 3215,
											"end": 3219,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3206,
											"end": 3212,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3142,
											"end": 3220,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 3142,
											"end": 3220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3142,
											"end": 3220,
											"name": "tag",
											"source": 7,
											"value": "454"
										},
										{
											"begin": 3142,
											"end": 3220,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3134,
											"end": 3220,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3134,
											"end": 3220,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 3227,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 3227,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 3227,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 3227,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 3227,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3233,
											"end": 3359,
											"name": "tag",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 3233,
											"end": 3359,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3270,
											"end": 3277,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3310,
											"end": 3352,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3303,
											"end": 3308,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3299,
											"end": 3353,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3288,
											"end": 3353,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3288,
											"end": 3353,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3233,
											"end": 3359,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3233,
											"end": 3359,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3233,
											"end": 3359,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3233,
											"end": 3359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3365,
											"end": 3461,
											"name": "tag",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 3365,
											"end": 3461,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3402,
											"end": 3409,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3431,
											"end": 3455,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "457"
										},
										{
											"begin": 3449,
											"end": 3454,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3431,
											"end": 3455,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 3431,
											"end": 3455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3431,
											"end": 3455,
											"name": "tag",
											"source": 7,
											"value": "457"
										},
										{
											"begin": 3431,
											"end": 3455,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3420,
											"end": 3455,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3420,
											"end": 3455,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3365,
											"end": 3461,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3365,
											"end": 3461,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3365,
											"end": 3461,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3365,
											"end": 3461,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3467,
											"end": 3589,
											"name": "tag",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 3467,
											"end": 3589,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3540,
											"end": 3564,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "459"
										},
										{
											"begin": 3558,
											"end": 3563,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3540,
											"end": 3564,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 3540,
											"end": 3564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3540,
											"end": 3564,
											"name": "tag",
											"source": 7,
											"value": "459"
										},
										{
											"begin": 3540,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3533,
											"end": 3538,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3530,
											"end": 3565,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3520,
											"end": 3583,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "460"
										},
										{
											"begin": 3520,
											"end": 3583,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3579,
											"end": 3580,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3576,
											"end": 3577,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3569,
											"end": 3581,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3520,
											"end": 3583,
											"name": "tag",
											"source": 7,
											"value": "460"
										},
										{
											"begin": 3520,
											"end": 3583,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3467,
											"end": 3589,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3467,
											"end": 3589,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3734,
											"name": "tag",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 3595,
											"end": 3734,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3641,
											"end": 3646,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3679,
											"end": 3685,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3666,
											"end": 3686,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3657,
											"end": 3686,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3657,
											"end": 3686,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3695,
											"end": 3728,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "462"
										},
										{
											"begin": 3722,
											"end": 3727,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3695,
											"end": 3728,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 3695,
											"end": 3728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3695,
											"end": 3728,
											"name": "tag",
											"source": 7,
											"value": "462"
										},
										{
											"begin": 3695,
											"end": 3728,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3734,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3734,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3734,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3734,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3734,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3740,
											"end": 4214,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 3740,
											"end": 4214,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3808,
											"end": 3814,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3816,
											"end": 3822,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3865,
											"end": 3867,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3853,
											"end": 3862,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3844,
											"end": 3851,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3840,
											"end": 3863,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3836,
											"end": 3868,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3833,
											"end": 3952,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3833,
											"end": 3952,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "464"
										},
										{
											"begin": 3833,
											"end": 3952,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3871,
											"end": 3950,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "465"
										},
										{
											"begin": 3871,
											"end": 3950,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 3871,
											"end": 3950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3871,
											"end": 3950,
											"name": "tag",
											"source": 7,
											"value": "465"
										},
										{
											"begin": 3871,
											"end": 3950,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3833,
											"end": 3952,
											"name": "tag",
											"source": 7,
											"value": "464"
										},
										{
											"begin": 3833,
											"end": 3952,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3991,
											"end": 3992,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4016,
											"end": 4069,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "466"
										},
										{
											"begin": 4061,
											"end": 4068,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4052,
											"end": 4058,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4041,
											"end": 4050,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4037,
											"end": 4059,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4016,
											"end": 4069,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 4016,
											"end": 4069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4016,
											"end": 4069,
											"name": "tag",
											"source": 7,
											"value": "466"
										},
										{
											"begin": 4016,
											"end": 4069,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4006,
											"end": 4069,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4006,
											"end": 4069,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3962,
											"end": 4079,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4118,
											"end": 4120,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4144,
											"end": 4197,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "467"
										},
										{
											"begin": 4189,
											"end": 4196,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4180,
											"end": 4186,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4169,
											"end": 4178,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4165,
											"end": 4187,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4144,
											"end": 4197,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 4144,
											"end": 4197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4144,
											"end": 4197,
											"name": "tag",
											"source": 7,
											"value": "467"
										},
										{
											"begin": 4144,
											"end": 4197,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4134,
											"end": 4197,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4134,
											"end": 4197,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4089,
											"end": 4207,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3740,
											"end": 4214,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3740,
											"end": 4214,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3740,
											"end": 4214,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3740,
											"end": 4214,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3740,
											"end": 4214,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3740,
											"end": 4214,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4220,
											"end": 4430,
											"name": "tag",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 4220,
											"end": 4430,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4307,
											"end": 4311,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4345,
											"end": 4347,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4334,
											"end": 4343,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4330,
											"end": 4348,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4322,
											"end": 4348,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4322,
											"end": 4348,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4358,
											"end": 4423,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "469"
										},
										{
											"begin": 4420,
											"end": 4421,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4409,
											"end": 4418,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4405,
											"end": 4422,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4396,
											"end": 4402,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4358,
											"end": 4423,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 4358,
											"end": 4423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4358,
											"end": 4423,
											"name": "tag",
											"source": 7,
											"value": "469"
										},
										{
											"begin": 4358,
											"end": 4423,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4220,
											"end": 4430,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4220,
											"end": 4430,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4220,
											"end": 4430,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4220,
											"end": 4430,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4220,
											"end": 4430,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4436,
											"end": 4658,
											"name": "tag",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 4436,
											"end": 4658,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4529,
											"end": 4533,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4567,
											"end": 4569,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4556,
											"end": 4565,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4552,
											"end": 4570,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4544,
											"end": 4570,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4544,
											"end": 4570,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4580,
											"end": 4651,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "471"
										},
										{
											"begin": 4648,
											"end": 4649,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4637,
											"end": 4646,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4633,
											"end": 4650,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4624,
											"end": 4630,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4580,
											"end": 4651,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 4580,
											"end": 4651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4580,
											"end": 4651,
											"name": "tag",
											"source": 7,
											"value": "471"
										},
										{
											"begin": 4580,
											"end": 4651,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4436,
											"end": 4658,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4436,
											"end": 4658,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4436,
											"end": 4658,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4436,
											"end": 4658,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4436,
											"end": 4658,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4664,
											"end": 5106,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 4664,
											"end": 5106,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4813,
											"end": 4817,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4851,
											"end": 4853,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4840,
											"end": 4849,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4836,
											"end": 4854,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4828,
											"end": 4854,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4828,
											"end": 4854,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4864,
											"end": 4935,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "473"
										},
										{
											"begin": 4932,
											"end": 4933,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4921,
											"end": 4930,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4917,
											"end": 4934,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4908,
											"end": 4914,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4864,
											"end": 4935,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 4864,
											"end": 4935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4864,
											"end": 4935,
											"name": "tag",
											"source": 7,
											"value": "473"
										},
										{
											"begin": 4864,
											"end": 4935,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4945,
											"end": 5017,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "474"
										},
										{
											"begin": 5013,
											"end": 5015,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5002,
											"end": 5011,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4998,
											"end": 5016,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4989,
											"end": 4995,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4945,
											"end": 5017,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 4945,
											"end": 5017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4945,
											"end": 5017,
											"name": "tag",
											"source": 7,
											"value": "474"
										},
										{
											"begin": 4945,
											"end": 5017,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5027,
											"end": 5099,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "475"
										},
										{
											"begin": 5095,
											"end": 5097,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5084,
											"end": 5093,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5080,
											"end": 5098,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5071,
											"end": 5077,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5027,
											"end": 5099,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 5027,
											"end": 5099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5027,
											"end": 5099,
											"name": "tag",
											"source": 7,
											"value": "475"
										},
										{
											"begin": 5027,
											"end": 5099,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4664,
											"end": 5106,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 4664,
											"end": 5106,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4664,
											"end": 5106,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4664,
											"end": 5106,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4664,
											"end": 5106,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4664,
											"end": 5106,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4664,
											"end": 5106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5112,
											"end": 5586,
											"name": "tag",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5112,
											"end": 5586,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5180,
											"end": 5186,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5188,
											"end": 5194,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5237,
											"end": 5239,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5225,
											"end": 5234,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5216,
											"end": 5223,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5212,
											"end": 5235,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5208,
											"end": 5240,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5205,
											"end": 5324,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5205,
											"end": 5324,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "477"
										},
										{
											"begin": 5205,
											"end": 5324,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5243,
											"end": 5322,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "478"
										},
										{
											"begin": 5243,
											"end": 5322,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 5243,
											"end": 5322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5243,
											"end": 5322,
											"name": "tag",
											"source": 7,
											"value": "478"
										},
										{
											"begin": 5243,
											"end": 5322,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5205,
											"end": 5324,
											"name": "tag",
											"source": 7,
											"value": "477"
										},
										{
											"begin": 5205,
											"end": 5324,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5363,
											"end": 5364,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5388,
											"end": 5441,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "479"
										},
										{
											"begin": 5433,
											"end": 5440,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5424,
											"end": 5430,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5413,
											"end": 5422,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5409,
											"end": 5431,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5388,
											"end": 5441,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 5388,
											"end": 5441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5388,
											"end": 5441,
											"name": "tag",
											"source": 7,
											"value": "479"
										},
										{
											"begin": 5388,
											"end": 5441,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5378,
											"end": 5441,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5378,
											"end": 5441,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5334,
											"end": 5451,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5490,
											"end": 5492,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5516,
											"end": 5569,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "480"
										},
										{
											"begin": 5561,
											"end": 5568,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5552,
											"end": 5558,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5541,
											"end": 5550,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5537,
											"end": 5559,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5516,
											"end": 5569,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 5516,
											"end": 5569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5516,
											"end": 5569,
											"name": "tag",
											"source": 7,
											"value": "480"
										},
										{
											"begin": 5516,
											"end": 5569,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5506,
											"end": 5569,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5506,
											"end": 5569,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5461,
											"end": 5579,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5112,
											"end": 5586,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5112,
											"end": 5586,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5112,
											"end": 5586,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5112,
											"end": 5586,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5112,
											"end": 5586,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5112,
											"end": 5586,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5592,
											"end": 5921,
											"name": "tag",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 5592,
											"end": 5921,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5651,
											"end": 5657,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5700,
											"end": 5702,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5688,
											"end": 5697,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5679,
											"end": 5686,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5675,
											"end": 5698,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5671,
											"end": 5703,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5668,
											"end": 5787,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5668,
											"end": 5787,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "482"
										},
										{
											"begin": 5668,
											"end": 5787,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5706,
											"end": 5785,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "483"
										},
										{
											"begin": 5706,
											"end": 5785,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 5706,
											"end": 5785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5706,
											"end": 5785,
											"name": "tag",
											"source": 7,
											"value": "483"
										},
										{
											"begin": 5706,
											"end": 5785,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5668,
											"end": 5787,
											"name": "tag",
											"source": 7,
											"value": "482"
										},
										{
											"begin": 5668,
											"end": 5787,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5826,
											"end": 5827,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5851,
											"end": 5904,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "484"
										},
										{
											"begin": 5896,
											"end": 5903,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5887,
											"end": 5893,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5876,
											"end": 5885,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 5894,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5851,
											"end": 5904,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 5851,
											"end": 5904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5851,
											"end": 5904,
											"name": "tag",
											"source": 7,
											"value": "484"
										},
										{
											"begin": 5851,
											"end": 5904,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5841,
											"end": 5904,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5841,
											"end": 5904,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5797,
											"end": 5914,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5592,
											"end": 5921,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5592,
											"end": 5921,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5592,
											"end": 5921,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5592,
											"end": 5921,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5592,
											"end": 5921,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5927,
											"end": 6045,
											"name": "tag",
											"source": 7,
											"value": "367"
										},
										{
											"begin": 5927,
											"end": 6045,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6014,
											"end": 6038,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "486"
										},
										{
											"begin": 6032,
											"end": 6037,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6014,
											"end": 6038,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 6014,
											"end": 6038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6014,
											"end": 6038,
											"name": "tag",
											"source": 7,
											"value": "486"
										},
										{
											"begin": 6014,
											"end": 6038,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6009,
											"end": 6012,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6002,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5927,
											"end": 6045,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5927,
											"end": 6045,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5927,
											"end": 6045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6051,
											"end": 6604,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 6051,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6228,
											"end": 6232,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6266,
											"end": 6269,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 6255,
											"end": 6264,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6251,
											"end": 6270,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6243,
											"end": 6270,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6243,
											"end": 6270,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6280,
											"end": 6351,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "488"
										},
										{
											"begin": 6348,
											"end": 6349,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6337,
											"end": 6346,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6333,
											"end": 6350,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6324,
											"end": 6330,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 6280,
											"end": 6351,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 6280,
											"end": 6351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6280,
											"end": 6351,
											"name": "tag",
											"source": 7,
											"value": "488"
										},
										{
											"begin": 6280,
											"end": 6351,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6361,
											"end": 6433,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "489"
										},
										{
											"begin": 6429,
											"end": 6431,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6418,
											"end": 6427,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6414,
											"end": 6432,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6405,
											"end": 6411,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6361,
											"end": 6433,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 6361,
											"end": 6433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6361,
											"end": 6433,
											"name": "tag",
											"source": 7,
											"value": "489"
										},
										{
											"begin": 6361,
											"end": 6433,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6443,
											"end": 6515,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "490"
										},
										{
											"begin": 6511,
											"end": 6513,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6500,
											"end": 6509,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6496,
											"end": 6514,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6487,
											"end": 6493,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6443,
											"end": 6515,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 6443,
											"end": 6515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6443,
											"end": 6515,
											"name": "tag",
											"source": 7,
											"value": "490"
										},
										{
											"begin": 6443,
											"end": 6515,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6525,
											"end": 6597,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "491"
										},
										{
											"begin": 6593,
											"end": 6595,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 6582,
											"end": 6591,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6578,
											"end": 6596,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6569,
											"end": 6575,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6525,
											"end": 6597,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "367"
										},
										{
											"begin": 6525,
											"end": 6597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6525,
											"end": 6597,
											"name": "tag",
											"source": 7,
											"value": "491"
										},
										{
											"begin": 6525,
											"end": 6597,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6051,
											"end": 6604,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 6051,
											"end": 6604,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 6051,
											"end": 6604,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6051,
											"end": 6604,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6051,
											"end": 6604,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6051,
											"end": 6604,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6051,
											"end": 6604,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6051,
											"end": 6604,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6610,
											"end": 7229,
											"name": "tag",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 6610,
											"end": 7229,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6687,
											"end": 6693,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6695,
											"end": 6701,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6703,
											"end": 6709,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6752,
											"end": 6754,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 6740,
											"end": 6749,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6731,
											"end": 6738,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6727,
											"end": 6750,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6723,
											"end": 6755,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 6720,
											"end": 6839,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6720,
											"end": 6839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "493"
										},
										{
											"begin": 6720,
											"end": 6839,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6758,
											"end": 6837,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "494"
										},
										{
											"begin": 6758,
											"end": 6837,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 6758,
											"end": 6837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6758,
											"end": 6837,
											"name": "tag",
											"source": 7,
											"value": "494"
										},
										{
											"begin": 6758,
											"end": 6837,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6720,
											"end": 6839,
											"name": "tag",
											"source": 7,
											"value": "493"
										},
										{
											"begin": 6720,
											"end": 6839,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6878,
											"end": 6879,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6903,
											"end": 6956,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "495"
										},
										{
											"begin": 6948,
											"end": 6955,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6939,
											"end": 6945,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6928,
											"end": 6937,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 6924,
											"end": 6946,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6903,
											"end": 6956,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 6903,
											"end": 6956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6903,
											"end": 6956,
											"name": "tag",
											"source": 7,
											"value": "495"
										},
										{
											"begin": 6903,
											"end": 6956,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6893,
											"end": 6956,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6893,
											"end": 6956,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6849,
											"end": 6966,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7005,
											"end": 7007,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7031,
											"end": 7084,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "496"
										},
										{
											"begin": 7076,
											"end": 7083,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7067,
											"end": 7073,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7056,
											"end": 7065,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 7052,
											"end": 7074,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7031,
											"end": 7084,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 7031,
											"end": 7084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7031,
											"end": 7084,
											"name": "tag",
											"source": 7,
											"value": "496"
										},
										{
											"begin": 7031,
											"end": 7084,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7021,
											"end": 7084,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7021,
											"end": 7084,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6976,
											"end": 7094,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7133,
											"end": 7135,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7159,
											"end": 7212,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "497"
										},
										{
											"begin": 7204,
											"end": 7211,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7195,
											"end": 7201,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7184,
											"end": 7193,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 7180,
											"end": 7202,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7159,
											"end": 7212,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 7159,
											"end": 7212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7159,
											"end": 7212,
											"name": "tag",
											"source": 7,
											"value": "497"
										},
										{
											"begin": 7159,
											"end": 7212,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7149,
											"end": 7212,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7149,
											"end": 7212,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7104,
											"end": 7222,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6610,
											"end": 7229,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6610,
											"end": 7229,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6610,
											"end": 7229,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6610,
											"end": 7229,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6610,
											"end": 7229,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6610,
											"end": 7229,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7235,
											"end": 7321,
											"name": "tag",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 7235,
											"end": 7321,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7270,
											"end": 7277,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7310,
											"end": 7314,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 7303,
											"end": 7308,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7299,
											"end": 7315,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7288,
											"end": 7315,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7288,
											"end": 7315,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7235,
											"end": 7321,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7235,
											"end": 7321,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7235,
											"end": 7321,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7235,
											"end": 7321,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7327,
											"end": 7439,
											"name": "tag",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 7327,
											"end": 7439,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7410,
											"end": 7432,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "500"
										},
										{
											"begin": 7426,
											"end": 7431,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7410,
											"end": 7432,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 7410,
											"end": 7432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7410,
											"end": 7432,
											"name": "tag",
											"source": 7,
											"value": "500"
										},
										{
											"begin": 7410,
											"end": 7432,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7405,
											"end": 7408,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7398,
											"end": 7433,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7327,
											"end": 7439,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7327,
											"end": 7439,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7327,
											"end": 7439,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7445,
											"end": 7659,
											"name": "tag",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 7445,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7534,
											"end": 7538,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7572,
											"end": 7574,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7561,
											"end": 7570,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7557,
											"end": 7575,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7549,
											"end": 7575,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7549,
											"end": 7575,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7585,
											"end": 7652,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "502"
										},
										{
											"begin": 7649,
											"end": 7650,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7638,
											"end": 7647,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7634,
											"end": 7651,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7625,
											"end": 7631,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7585,
											"end": 7652,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 7585,
											"end": 7652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7585,
											"end": 7652,
											"name": "tag",
											"source": 7,
											"value": "502"
										},
										{
											"begin": 7585,
											"end": 7652,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7445,
											"end": 7659,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7445,
											"end": 7659,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7445,
											"end": 7659,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7445,
											"end": 7659,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7445,
											"end": 7659,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7665,
											"end": 7782,
											"name": "tag",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 7665,
											"end": 7782,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7774,
											"end": 7775,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7771,
											"end": 7772,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7764,
											"end": 7776,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7788,
											"end": 7905,
											"name": "tag",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 7788,
											"end": 7905,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7897,
											"end": 7898,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7894,
											"end": 7895,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7887,
											"end": 7899,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7911,
											"end": 8091,
											"name": "tag",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 7911,
											"end": 8091,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7959,
											"end": 8036,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7956,
											"end": 7957,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7949,
											"end": 8037,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8056,
											"end": 8060,
											"name": "PUSH",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 8053,
											"end": 8054,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8046,
											"end": 8061,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8080,
											"end": 8084,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 8077,
											"end": 8078,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8070,
											"end": 8085,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8097,
											"end": 8378,
											"name": "tag",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 8097,
											"end": 8378,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8180,
											"end": 8207,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "507"
										},
										{
											"begin": 8202,
											"end": 8206,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8180,
											"end": 8207,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 8180,
											"end": 8207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8180,
											"end": 8207,
											"name": "tag",
											"source": 7,
											"value": "507"
										},
										{
											"begin": 8180,
											"end": 8207,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8172,
											"end": 8178,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8168,
											"end": 8208,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8310,
											"end": 8316,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8298,
											"end": 8308,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8295,
											"end": 8317,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 8274,
											"end": 8292,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8262,
											"end": 8272,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8259,
											"end": 8293,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 8256,
											"end": 8318,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 8253,
											"end": 8341,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8253,
											"end": 8341,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "508"
										},
										{
											"begin": 8253,
											"end": 8341,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8321,
											"end": 8339,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "509"
										},
										{
											"begin": 8321,
											"end": 8339,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 8321,
											"end": 8339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8321,
											"end": 8339,
											"name": "tag",
											"source": 7,
											"value": "509"
										},
										{
											"begin": 8321,
											"end": 8339,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8253,
											"end": 8341,
											"name": "tag",
											"source": 7,
											"value": "508"
										},
										{
											"begin": 8253,
											"end": 8341,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8361,
											"end": 8371,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8357,
											"end": 8359,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8350,
											"end": 8372,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8140,
											"end": 8378,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8097,
											"end": 8378,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8097,
											"end": 8378,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8097,
											"end": 8378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8384,
											"end": 8513,
											"name": "tag",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 8384,
											"end": 8513,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8418,
											"end": 8424,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8445,
											"end": 8465,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "511"
										},
										{
											"begin": 8445,
											"end": 8465,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 8445,
											"end": 8465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8445,
											"end": 8465,
											"name": "tag",
											"source": 7,
											"value": "511"
										},
										{
											"begin": 8445,
											"end": 8465,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8435,
											"end": 8465,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8435,
											"end": 8465,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8474,
											"end": 8507,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "512"
										},
										{
											"begin": 8502,
											"end": 8506,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8494,
											"end": 8500,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8474,
											"end": 8507,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 8474,
											"end": 8507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8474,
											"end": 8507,
											"name": "tag",
											"source": 7,
											"value": "512"
										},
										{
											"begin": 8474,
											"end": 8507,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8384,
											"end": 8513,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8384,
											"end": 8513,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8384,
											"end": 8513,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8384,
											"end": 8513,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8519,
											"end": 8827,
											"name": "tag",
											"source": 7,
											"value": "375"
										},
										{
											"begin": 8519,
											"end": 8827,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8581,
											"end": 8585,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8671,
											"end": 8689,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8663,
											"end": 8669,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8660,
											"end": 8690,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 8657,
											"end": 8713,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8657,
											"end": 8713,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "514"
										},
										{
											"begin": 8657,
											"end": 8713,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8693,
											"end": 8711,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "515"
										},
										{
											"begin": 8693,
											"end": 8711,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 8693,
											"end": 8711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8693,
											"end": 8711,
											"name": "tag",
											"source": 7,
											"value": "515"
										},
										{
											"begin": 8693,
											"end": 8711,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8657,
											"end": 8713,
											"name": "tag",
											"source": 7,
											"value": "514"
										},
										{
											"begin": 8657,
											"end": 8713,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8731,
											"end": 8760,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "516"
										},
										{
											"begin": 8753,
											"end": 8759,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8731,
											"end": 8760,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 8731,
											"end": 8760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8731,
											"end": 8760,
											"name": "tag",
											"source": 7,
											"value": "516"
										},
										{
											"begin": 8731,
											"end": 8760,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8723,
											"end": 8760,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8723,
											"end": 8760,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8815,
											"end": 8819,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8809,
											"end": 8813,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8805,
											"end": 8820,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8797,
											"end": 8820,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8797,
											"end": 8820,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8519,
											"end": 8827,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8519,
											"end": 8827,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8519,
											"end": 8827,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8519,
											"end": 8827,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8833,
											"end": 8981,
											"name": "tag",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 8833,
											"end": 8981,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8931,
											"end": 8937,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8926,
											"end": 8929,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8921,
											"end": 8924,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8908,
											"end": 8938,
											"name": "CALLDATACOPY",
											"source": 7
										},
										{
											"begin": 8972,
											"end": 8973,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8963,
											"end": 8969,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8958,
											"end": 8961,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8954,
											"end": 8970,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8947,
											"end": 8974,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8833,
											"end": 8981,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8833,
											"end": 8981,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8833,
											"end": 8981,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8833,
											"end": 8981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8987,
											"end": 9412,
											"name": "tag",
											"source": 7,
											"value": "377"
										},
										{
											"begin": 8987,
											"end": 9412,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9065,
											"end": 9070,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9090,
											"end": 9156,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "519"
										},
										{
											"begin": 9106,
											"end": 9155,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "520"
										},
										{
											"begin": 9148,
											"end": 9154,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9106,
											"end": 9155,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "375"
										},
										{
											"begin": 9106,
											"end": 9155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9106,
											"end": 9155,
											"name": "tag",
											"source": 7,
											"value": "520"
										},
										{
											"begin": 9106,
											"end": 9155,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9090,
											"end": 9156,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 9090,
											"end": 9156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9090,
											"end": 9156,
											"name": "tag",
											"source": 7,
											"value": "519"
										},
										{
											"begin": 9090,
											"end": 9156,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9081,
											"end": 9156,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9081,
											"end": 9156,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9179,
											"end": 9185,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9172,
											"end": 9177,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9165,
											"end": 9186,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9217,
											"end": 9221,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9210,
											"end": 9215,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9206,
											"end": 9222,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9255,
											"end": 9258,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9246,
											"end": 9252,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9241,
											"end": 9244,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9237,
											"end": 9253,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9234,
											"end": 9259,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 9231,
											"end": 9343,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9231,
											"end": 9343,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "521"
										},
										{
											"begin": 9231,
											"end": 9343,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9262,
											"end": 9341,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "522"
										},
										{
											"begin": 9262,
											"end": 9341,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 9262,
											"end": 9341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9262,
											"end": 9341,
											"name": "tag",
											"source": 7,
											"value": "522"
										},
										{
											"begin": 9262,
											"end": 9341,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9231,
											"end": 9343,
											"name": "tag",
											"source": 7,
											"value": "521"
										},
										{
											"begin": 9231,
											"end": 9343,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9352,
											"end": 9406,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "523"
										},
										{
											"begin": 9399,
											"end": 9405,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9394,
											"end": 9397,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9389,
											"end": 9392,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9352,
											"end": 9406,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 9352,
											"end": 9406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9352,
											"end": 9406,
											"name": "tag",
											"source": 7,
											"value": "523"
										},
										{
											"begin": 9352,
											"end": 9406,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9071,
											"end": 9412,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8987,
											"end": 9412,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 8987,
											"end": 9412,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8987,
											"end": 9412,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8987,
											"end": 9412,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8987,
											"end": 9412,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8987,
											"end": 9412,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9432,
											"end": 9772,
											"name": "tag",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 9432,
											"end": 9772,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9488,
											"end": 9493,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9537,
											"end": 9540,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9530,
											"end": 9534,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 9522,
											"end": 9528,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9518,
											"end": 9535,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9514,
											"end": 9541,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 9504,
											"end": 9626,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "525"
										},
										{
											"begin": 9504,
											"end": 9626,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9545,
											"end": 9624,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "526"
										},
										{
											"begin": 9545,
											"end": 9624,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 9545,
											"end": 9624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9545,
											"end": 9624,
											"name": "tag",
											"source": 7,
											"value": "526"
										},
										{
											"begin": 9545,
											"end": 9624,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9504,
											"end": 9626,
											"name": "tag",
											"source": 7,
											"value": "525"
										},
										{
											"begin": 9504,
											"end": 9626,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9662,
											"end": 9668,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9649,
											"end": 9669,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 9687,
											"end": 9766,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "527"
										},
										{
											"begin": 9762,
											"end": 9765,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9754,
											"end": 9760,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9747,
											"end": 9751,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9739,
											"end": 9745,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 9735,
											"end": 9752,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9687,
											"end": 9766,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "377"
										},
										{
											"begin": 9687,
											"end": 9766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9687,
											"end": 9766,
											"name": "tag",
											"source": 7,
											"value": "527"
										},
										{
											"begin": 9687,
											"end": 9766,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9678,
											"end": 9766,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9678,
											"end": 9766,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9494,
											"end": 9772,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9432,
											"end": 9772,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9432,
											"end": 9772,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9432,
											"end": 9772,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9432,
											"end": 9772,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9432,
											"end": 9772,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9778,
											"end": 10287,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 9778,
											"end": 10287,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9847,
											"end": 9853,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9896,
											"end": 9898,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9884,
											"end": 9893,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9875,
											"end": 9882,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9871,
											"end": 9894,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9867,
											"end": 9899,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 9864,
											"end": 9983,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9864,
											"end": 9983,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "529"
										},
										{
											"begin": 9864,
											"end": 9983,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9902,
											"end": 9981,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "530"
										},
										{
											"begin": 9902,
											"end": 9981,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 9902,
											"end": 9981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9902,
											"end": 9981,
											"name": "tag",
											"source": 7,
											"value": "530"
										},
										{
											"begin": 9902,
											"end": 9981,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9864,
											"end": 9983,
											"name": "tag",
											"source": 7,
											"value": "529"
										},
										{
											"begin": 9864,
											"end": 9983,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10050,
											"end": 10051,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10039,
											"end": 10048,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10035,
											"end": 10052,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10022,
											"end": 10053,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 10080,
											"end": 10098,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10072,
											"end": 10078,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10069,
											"end": 10099,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 10066,
											"end": 10183,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10066,
											"end": 10183,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "531"
										},
										{
											"begin": 10066,
											"end": 10183,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10102,
											"end": 10181,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "532"
										},
										{
											"begin": 10102,
											"end": 10181,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 10102,
											"end": 10181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10102,
											"end": 10181,
											"name": "tag",
											"source": 7,
											"value": "532"
										},
										{
											"begin": 10102,
											"end": 10181,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10066,
											"end": 10183,
											"name": "tag",
											"source": 7,
											"value": "531"
										},
										{
											"begin": 10066,
											"end": 10183,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10207,
											"end": 10270,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "533"
										},
										{
											"begin": 10262,
											"end": 10269,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10253,
											"end": 10259,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10242,
											"end": 10251,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 10238,
											"end": 10260,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10207,
											"end": 10270,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 10207,
											"end": 10270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10207,
											"end": 10270,
											"name": "tag",
											"source": 7,
											"value": "533"
										},
										{
											"begin": 10207,
											"end": 10270,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10197,
											"end": 10270,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10197,
											"end": 10270,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9993,
											"end": 10280,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9778,
											"end": 10287,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9778,
											"end": 10287,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9778,
											"end": 10287,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9778,
											"end": 10287,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9778,
											"end": 10287,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10293,
											"end": 10767,
											"name": "tag",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 10293,
											"end": 10767,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10361,
											"end": 10367,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10369,
											"end": 10375,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10418,
											"end": 10420,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10406,
											"end": 10415,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10397,
											"end": 10404,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 10393,
											"end": 10416,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10389,
											"end": 10421,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 10386,
											"end": 10505,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10386,
											"end": 10505,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "535"
										},
										{
											"begin": 10386,
											"end": 10505,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10424,
											"end": 10503,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "536"
										},
										{
											"begin": 10424,
											"end": 10503,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 10424,
											"end": 10503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10424,
											"end": 10503,
											"name": "tag",
											"source": 7,
											"value": "536"
										},
										{
											"begin": 10424,
											"end": 10503,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10386,
											"end": 10505,
											"name": "tag",
											"source": 7,
											"value": "535"
										},
										{
											"begin": 10386,
											"end": 10505,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10544,
											"end": 10545,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10569,
											"end": 10622,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "537"
										},
										{
											"begin": 10614,
											"end": 10621,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 10605,
											"end": 10611,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10594,
											"end": 10603,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 10590,
											"end": 10612,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10569,
											"end": 10622,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 10569,
											"end": 10622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10569,
											"end": 10622,
											"name": "tag",
											"source": 7,
											"value": "537"
										},
										{
											"begin": 10569,
											"end": 10622,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10559,
											"end": 10622,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10559,
											"end": 10622,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10515,
											"end": 10632,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10671,
											"end": 10673,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10697,
											"end": 10750,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "538"
										},
										{
											"begin": 10742,
											"end": 10749,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 10733,
											"end": 10739,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10722,
											"end": 10731,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 10718,
											"end": 10740,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10697,
											"end": 10750,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 10697,
											"end": 10750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10697,
											"end": 10750,
											"name": "tag",
											"source": 7,
											"value": "538"
										},
										{
											"begin": 10697,
											"end": 10750,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10687,
											"end": 10750,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10687,
											"end": 10750,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10642,
											"end": 10760,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10293,
											"end": 10767,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10293,
											"end": 10767,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10293,
											"end": 10767,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10293,
											"end": 10767,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10293,
											"end": 10767,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10293,
											"end": 10767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10773,
											"end": 10995,
											"name": "tag",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 10773,
											"end": 10995,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10866,
											"end": 10870,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10904,
											"end": 10906,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10893,
											"end": 10902,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10889,
											"end": 10907,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10881,
											"end": 10907,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10881,
											"end": 10907,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10917,
											"end": 10988,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "540"
										},
										{
											"begin": 10985,
											"end": 10986,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10974,
											"end": 10983,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10970,
											"end": 10987,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10961,
											"end": 10967,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10917,
											"end": 10988,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "367"
										},
										{
											"begin": 10917,
											"end": 10988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10917,
											"end": 10988,
											"name": "tag",
											"source": 7,
											"value": "540"
										},
										{
											"begin": 10917,
											"end": 10988,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10773,
											"end": 10995,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10773,
											"end": 10995,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10773,
											"end": 10995,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10773,
											"end": 10995,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10773,
											"end": 10995,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11001,
											"end": 11115,
											"name": "tag",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 11001,
											"end": 11115,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11068,
											"end": 11074,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11102,
											"end": 11107,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11096,
											"end": 11108,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11086,
											"end": 11108,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11086,
											"end": 11108,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11001,
											"end": 11115,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11001,
											"end": 11115,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11001,
											"end": 11115,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11001,
											"end": 11115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11121,
											"end": 11305,
											"name": "tag",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 11121,
											"end": 11305,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11220,
											"end": 11231,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11254,
											"end": 11260,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11249,
											"end": 11252,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11242,
											"end": 11261,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11294,
											"end": 11298,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11289,
											"end": 11292,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11285,
											"end": 11299,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11270,
											"end": 11299,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11270,
											"end": 11299,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11121,
											"end": 11305,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11121,
											"end": 11305,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11121,
											"end": 11305,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11121,
											"end": 11305,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11121,
											"end": 11305,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11311,
											"end": 11443,
											"name": "tag",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 11311,
											"end": 11443,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11378,
											"end": 11382,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11401,
											"end": 11404,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11393,
											"end": 11404,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11393,
											"end": 11404,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11431,
											"end": 11435,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11426,
											"end": 11429,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11422,
											"end": 11436,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11414,
											"end": 11436,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11414,
											"end": 11436,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11311,
											"end": 11443,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11311,
											"end": 11443,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11311,
											"end": 11443,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11311,
											"end": 11443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11449,
											"end": 11557,
											"name": "tag",
											"source": 7,
											"value": "382"
										},
										{
											"begin": 11449,
											"end": 11557,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11526,
											"end": 11550,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "545"
										},
										{
											"begin": 11544,
											"end": 11549,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11526,
											"end": 11550,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 11526,
											"end": 11550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11526,
											"end": 11550,
											"name": "tag",
											"source": 7,
											"value": "545"
										},
										{
											"begin": 11526,
											"end": 11550,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11521,
											"end": 11524,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11514,
											"end": 11551,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11449,
											"end": 11557,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11449,
											"end": 11557,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11449,
											"end": 11557,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11563,
											"end": 11742,
											"name": "tag",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 11563,
											"end": 11742,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11632,
											"end": 11642,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11653,
											"end": 11699,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "547"
										},
										{
											"begin": 11695,
											"end": 11698,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11687,
											"end": 11693,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11653,
											"end": 11699,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "382"
										},
										{
											"begin": 11653,
											"end": 11699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11653,
											"end": 11699,
											"name": "tag",
											"source": 7,
											"value": "547"
										},
										{
											"begin": 11653,
											"end": 11699,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11731,
											"end": 11735,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11726,
											"end": 11729,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11722,
											"end": 11736,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11708,
											"end": 11736,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11708,
											"end": 11736,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11563,
											"end": 11742,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11563,
											"end": 11742,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11563,
											"end": 11742,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11563,
											"end": 11742,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11563,
											"end": 11742,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11748,
											"end": 11861,
											"name": "tag",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 11748,
											"end": 11861,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11818,
											"end": 11822,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11850,
											"end": 11854,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11845,
											"end": 11848,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11841,
											"end": 11855,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11833,
											"end": 11855,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11833,
											"end": 11855,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11748,
											"end": 11861,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11748,
											"end": 11861,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11748,
											"end": 11861,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11748,
											"end": 11861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11897,
											"end": 12629,
											"name": "tag",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 11897,
											"end": 12629,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12016,
											"end": 12019,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12045,
											"end": 12099,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "550"
										},
										{
											"begin": 12093,
											"end": 12098,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12045,
											"end": 12099,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 12045,
											"end": 12099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12045,
											"end": 12099,
											"name": "tag",
											"source": 7,
											"value": "550"
										},
										{
											"begin": 12045,
											"end": 12099,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12115,
											"end": 12201,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "551"
										},
										{
											"begin": 12194,
											"end": 12200,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12189,
											"end": 12192,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 12115,
											"end": 12201,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 12115,
											"end": 12201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12115,
											"end": 12201,
											"name": "tag",
											"source": 7,
											"value": "551"
										},
										{
											"begin": 12115,
											"end": 12201,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12108,
											"end": 12201,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 12108,
											"end": 12201,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12225,
											"end": 12281,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "552"
										},
										{
											"begin": 12275,
											"end": 12280,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12225,
											"end": 12281,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 12225,
											"end": 12281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12225,
											"end": 12281,
											"name": "tag",
											"source": 7,
											"value": "552"
										},
										{
											"begin": 12225,
											"end": 12281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12304,
											"end": 12311,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 12335,
											"end": 12336,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12320,
											"end": 12604,
											"name": "tag",
											"source": 7,
											"value": "553"
										},
										{
											"begin": 12320,
											"end": 12604,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12345,
											"end": 12351,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12342,
											"end": 12343,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12339,
											"end": 12352,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 12320,
											"end": 12604,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 12320,
											"end": 12604,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "555"
										},
										{
											"begin": 12320,
											"end": 12604,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12421,
											"end": 12427,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12415,
											"end": 12428,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 12448,
											"end": 12511,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "556"
										},
										{
											"begin": 12507,
											"end": 12510,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 12492,
											"end": 12505,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12448,
											"end": 12511,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 12448,
											"end": 12511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12448,
											"end": 12511,
											"name": "tag",
											"source": 7,
											"value": "556"
										},
										{
											"begin": 12448,
											"end": 12511,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12441,
											"end": 12511,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 12441,
											"end": 12511,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12534,
											"end": 12594,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "557"
										},
										{
											"begin": 12587,
											"end": 12593,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12534,
											"end": 12594,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 12534,
											"end": 12594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12534,
											"end": 12594,
											"name": "tag",
											"source": 7,
											"value": "557"
										},
										{
											"begin": 12534,
											"end": 12594,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12524,
											"end": 12594,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12524,
											"end": 12594,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12380,
											"end": 12604,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12367,
											"end": 12368,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 12364,
											"end": 12365,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12360,
											"end": 12369,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12355,
											"end": 12369,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12355,
											"end": 12369,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12320,
											"end": 12604,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "553"
										},
										{
											"begin": 12320,
											"end": 12604,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12320,
											"end": 12604,
											"name": "tag",
											"source": 7,
											"value": "555"
										},
										{
											"begin": 12320,
											"end": 12604,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12324,
											"end": 12338,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12620,
											"end": 12623,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 12613,
											"end": 12623,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 12613,
											"end": 12623,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12021,
											"end": 12629,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12021,
											"end": 12629,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12021,
											"end": 12629,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11897,
											"end": 12629,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11897,
											"end": 12629,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11897,
											"end": 12629,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11897,
											"end": 12629,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11897,
											"end": 12629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12635,
											"end": 13008,
											"name": "tag",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 12635,
											"end": 13008,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12778,
											"end": 12782,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12816,
											"end": 12818,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12805,
											"end": 12814,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12801,
											"end": 12819,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12793,
											"end": 12819,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12793,
											"end": 12819,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12865,
											"end": 12874,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12859,
											"end": 12863,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12855,
											"end": 12875,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 12851,
											"end": 12852,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12840,
											"end": 12849,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12836,
											"end": 12853,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12829,
											"end": 12876,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12893,
											"end": 13001,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "559"
										},
										{
											"begin": 12996,
											"end": 13000,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12987,
											"end": 12993,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 12893,
											"end": 13001,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 12893,
											"end": 13001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12893,
											"end": 13001,
											"name": "tag",
											"source": 7,
											"value": "559"
										},
										{
											"begin": 12893,
											"end": 13001,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12885,
											"end": 13001,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12885,
											"end": 13001,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12635,
											"end": 13008,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12635,
											"end": 13008,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12635,
											"end": 13008,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12635,
											"end": 13008,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12635,
											"end": 13008,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13014,
											"end": 13130,
											"name": "tag",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 13014,
											"end": 13130,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13084,
											"end": 13105,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "561"
										},
										{
											"begin": 13099,
											"end": 13104,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13084,
											"end": 13105,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 13084,
											"end": 13105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13084,
											"end": 13105,
											"name": "tag",
											"source": 7,
											"value": "561"
										},
										{
											"begin": 13084,
											"end": 13105,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13077,
											"end": 13082,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13074,
											"end": 13106,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 13064,
											"end": 13124,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "562"
										},
										{
											"begin": 13064,
											"end": 13124,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13120,
											"end": 13121,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13117,
											"end": 13118,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13110,
											"end": 13122,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 13064,
											"end": 13124,
											"name": "tag",
											"source": 7,
											"value": "562"
										},
										{
											"begin": 13064,
											"end": 13124,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13014,
											"end": 13130,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13014,
											"end": 13130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13136,
											"end": 13269,
											"name": "tag",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 13136,
											"end": 13269,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13179,
											"end": 13184,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13217,
											"end": 13223,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13204,
											"end": 13224,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 13195,
											"end": 13224,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13195,
											"end": 13224,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13233,
											"end": 13263,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "564"
										},
										{
											"begin": 13257,
											"end": 13262,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13233,
											"end": 13263,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 13233,
											"end": 13263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13233,
											"end": 13263,
											"name": "tag",
											"source": 7,
											"value": "564"
										},
										{
											"begin": 13233,
											"end": 13263,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13136,
											"end": 13269,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 13136,
											"end": 13269,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13136,
											"end": 13269,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13136,
											"end": 13269,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13136,
											"end": 13269,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13275,
											"end": 13743,
											"name": "tag",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 13275,
											"end": 13743,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13340,
											"end": 13346,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13348,
											"end": 13354,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13397,
											"end": 13399,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 13385,
											"end": 13394,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13376,
											"end": 13383,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 13372,
											"end": 13395,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 13368,
											"end": 13400,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 13365,
											"end": 13484,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 13365,
											"end": 13484,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "566"
										},
										{
											"begin": 13365,
											"end": 13484,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13403,
											"end": 13482,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "567"
										},
										{
											"begin": 13403,
											"end": 13482,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 13403,
											"end": 13482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13403,
											"end": 13482,
											"name": "tag",
											"source": 7,
											"value": "567"
										},
										{
											"begin": 13403,
											"end": 13482,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13365,
											"end": 13484,
											"name": "tag",
											"source": 7,
											"value": "566"
										},
										{
											"begin": 13365,
											"end": 13484,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13523,
											"end": 13524,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13548,
											"end": 13601,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "568"
										},
										{
											"begin": 13593,
											"end": 13600,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 13584,
											"end": 13590,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13573,
											"end": 13582,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 13569,
											"end": 13591,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13548,
											"end": 13601,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 13548,
											"end": 13601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13548,
											"end": 13601,
											"name": "tag",
											"source": 7,
											"value": "568"
										},
										{
											"begin": 13548,
											"end": 13601,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13538,
											"end": 13601,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 13538,
											"end": 13601,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13494,
											"end": 13611,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13650,
											"end": 13652,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13676,
											"end": 13726,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "569"
										},
										{
											"begin": 13718,
											"end": 13725,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 13709,
											"end": 13715,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13698,
											"end": 13707,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 13694,
											"end": 13716,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13676,
											"end": 13726,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 13676,
											"end": 13726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13676,
											"end": 13726,
											"name": "tag",
											"source": 7,
											"value": "569"
										},
										{
											"begin": 13676,
											"end": 13726,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13666,
											"end": 13726,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13666,
											"end": 13726,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13621,
											"end": 13736,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13275,
											"end": 13743,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 13275,
											"end": 13743,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13275,
											"end": 13743,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 13275,
											"end": 13743,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13275,
											"end": 13743,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13275,
											"end": 13743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13749,
											"end": 14223,
											"name": "tag",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 13749,
											"end": 14223,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13817,
											"end": 13823,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13825,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13874,
											"end": 13876,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 13862,
											"end": 13871,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13853,
											"end": 13860,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 13849,
											"end": 13872,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 13845,
											"end": 13877,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 13842,
											"end": 13961,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 13842,
											"end": 13961,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "571"
										},
										{
											"begin": 13842,
											"end": 13961,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13880,
											"end": 13959,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "572"
										},
										{
											"begin": 13880,
											"end": 13959,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 13880,
											"end": 13959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13880,
											"end": 13959,
											"name": "tag",
											"source": 7,
											"value": "572"
										},
										{
											"begin": 13880,
											"end": 13959,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13842,
											"end": 13961,
											"name": "tag",
											"source": 7,
											"value": "571"
										},
										{
											"begin": 13842,
											"end": 13961,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14000,
											"end": 14001,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14025,
											"end": 14078,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "573"
										},
										{
											"begin": 14070,
											"end": 14077,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 14061,
											"end": 14067,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14050,
											"end": 14059,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 14046,
											"end": 14068,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14025,
											"end": 14078,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 14025,
											"end": 14078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14025,
											"end": 14078,
											"name": "tag",
											"source": 7,
											"value": "573"
										},
										{
											"begin": 14025,
											"end": 14078,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14015,
											"end": 14078,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14015,
											"end": 14078,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13971,
											"end": 14088,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14127,
											"end": 14129,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14153,
											"end": 14206,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "574"
										},
										{
											"begin": 14198,
											"end": 14205,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 14189,
											"end": 14195,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14178,
											"end": 14187,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 14174,
											"end": 14196,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14153,
											"end": 14206,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 14153,
											"end": 14206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14153,
											"end": 14206,
											"name": "tag",
											"source": 7,
											"value": "574"
										},
										{
											"begin": 14153,
											"end": 14206,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14143,
											"end": 14206,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14143,
											"end": 14206,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14098,
											"end": 14216,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13749,
											"end": 14223,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 13749,
											"end": 14223,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13749,
											"end": 14223,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 13749,
											"end": 14223,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13749,
											"end": 14223,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13749,
											"end": 14223,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14229,
											"end": 14409,
											"name": "tag",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 14229,
											"end": 14409,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14277,
											"end": 14354,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14274,
											"end": 14275,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14267,
											"end": 14355,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14374,
											"end": 14378,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 14371,
											"end": 14372,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 14364,
											"end": 14379,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14398,
											"end": 14402,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 14395,
											"end": 14396,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14388,
											"end": 14403,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 14415,
											"end": 14735,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 14415,
											"end": 14735,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14459,
											"end": 14465,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14496,
											"end": 14497,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 14490,
											"end": 14494,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14486,
											"end": 14498,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 14476,
											"end": 14498,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14476,
											"end": 14498,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14543,
											"end": 14544,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 14537,
											"end": 14541,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14533,
											"end": 14545,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 14564,
											"end": 14582,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 14554,
											"end": 14635,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "577"
										},
										{
											"begin": 14554,
											"end": 14635,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 14620,
											"end": 14624,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 14612,
											"end": 14618,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14608,
											"end": 14625,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 14598,
											"end": 14625,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14598,
											"end": 14625,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14554,
											"end": 14635,
											"name": "tag",
											"source": 7,
											"value": "577"
										},
										{
											"begin": 14554,
											"end": 14635,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14682,
											"end": 14684,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14674,
											"end": 14680,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14671,
											"end": 14685,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 14651,
											"end": 14669,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14648,
											"end": 14686,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 14645,
											"end": 14729,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "578"
										},
										{
											"begin": 14645,
											"end": 14729,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 14701,
											"end": 14719,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "579"
										},
										{
											"begin": 14701,
											"end": 14719,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 14701,
											"end": 14719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14701,
											"end": 14719,
											"name": "tag",
											"source": 7,
											"value": "579"
										},
										{
											"begin": 14701,
											"end": 14719,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14645,
											"end": 14729,
											"name": "tag",
											"source": 7,
											"value": "578"
										},
										{
											"begin": 14645,
											"end": 14729,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14466,
											"end": 14735,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14415,
											"end": 14735,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14415,
											"end": 14735,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14415,
											"end": 14735,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14415,
											"end": 14735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14741,
											"end": 14921,
											"name": "tag",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 14741,
											"end": 14921,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14789,
											"end": 14866,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14786,
											"end": 14787,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14779,
											"end": 14867,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14886,
											"end": 14890,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 14883,
											"end": 14884,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 14876,
											"end": 14891,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14910,
											"end": 14914,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 14907,
											"end": 14908,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14900,
											"end": 14915,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 14927,
											"end": 15337,
											"name": "tag",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 14927,
											"end": 15337,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14967,
											"end": 14974,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14990,
											"end": 15010,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "582"
										},
										{
											"begin": 15008,
											"end": 15009,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14990,
											"end": 15010,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 14990,
											"end": 15010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14990,
											"end": 15010,
											"name": "tag",
											"source": 7,
											"value": "582"
										},
										{
											"begin": 14990,
											"end": 15010,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14985,
											"end": 15010,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14985,
											"end": 15010,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15024,
											"end": 15044,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "583"
										},
										{
											"begin": 15042,
											"end": 15043,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15024,
											"end": 15044,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 15024,
											"end": 15044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15024,
											"end": 15044,
											"name": "tag",
											"source": 7,
											"value": "583"
										},
										{
											"begin": 15024,
											"end": 15044,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15019,
											"end": 15044,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 15019,
											"end": 15044,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15079,
											"end": 15080,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15076,
											"end": 15077,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15072,
											"end": 15081,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 15101,
											"end": 15131,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "584"
										},
										{
											"begin": 15119,
											"end": 15130,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15101,
											"end": 15131,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 15101,
											"end": 15131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15101,
											"end": 15131,
											"name": "tag",
											"source": 7,
											"value": "584"
										},
										{
											"begin": 15101,
											"end": 15131,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15090,
											"end": 15131,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15090,
											"end": 15131,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15280,
											"end": 15281,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15271,
											"end": 15278,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15267,
											"end": 15282,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 15264,
											"end": 15265,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 15261,
											"end": 15283,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 15241,
											"end": 15242,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15234,
											"end": 15243,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 15214,
											"end": 15297,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 15191,
											"end": 15330,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "585"
										},
										{
											"begin": 15191,
											"end": 15330,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 15310,
											"end": 15328,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "586"
										},
										{
											"begin": 15310,
											"end": 15328,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 15310,
											"end": 15328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15310,
											"end": 15328,
											"name": "tag",
											"source": 7,
											"value": "586"
										},
										{
											"begin": 15310,
											"end": 15328,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15191,
											"end": 15330,
											"name": "tag",
											"source": 7,
											"value": "585"
										},
										{
											"begin": 15191,
											"end": 15330,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14975,
											"end": 15337,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14927,
											"end": 15337,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14927,
											"end": 15337,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14927,
											"end": 15337,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14927,
											"end": 15337,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14927,
											"end": 15337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15343,
											"end": 15523,
											"name": "tag",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 15343,
											"end": 15523,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15391,
											"end": 15468,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15388,
											"end": 15389,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15381,
											"end": 15469,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15488,
											"end": 15492,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 15485,
											"end": 15486,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 15478,
											"end": 15493,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15512,
											"end": 15516,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 15509,
											"end": 15510,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15502,
											"end": 15517,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 15529,
											"end": 15714,
											"name": "tag",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 15529,
											"end": 15714,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15569,
											"end": 15570,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15586,
											"end": 15606,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "589"
										},
										{
											"begin": 15604,
											"end": 15605,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15586,
											"end": 15606,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 15586,
											"end": 15606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15586,
											"end": 15606,
											"name": "tag",
											"source": 7,
											"value": "589"
										},
										{
											"begin": 15586,
											"end": 15606,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15581,
											"end": 15606,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15581,
											"end": 15606,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15620,
											"end": 15640,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "590"
										},
										{
											"begin": 15638,
											"end": 15639,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15620,
											"end": 15640,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 15620,
											"end": 15640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15620,
											"end": 15640,
											"name": "tag",
											"source": 7,
											"value": "590"
										},
										{
											"begin": 15620,
											"end": 15640,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15615,
											"end": 15640,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 15615,
											"end": 15640,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15659,
											"end": 15660,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15649,
											"end": 15684,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "591"
										},
										{
											"begin": 15649,
											"end": 15684,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 15664,
											"end": 15682,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "592"
										},
										{
											"begin": 15664,
											"end": 15682,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 15664,
											"end": 15682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15664,
											"end": 15682,
											"name": "tag",
											"source": 7,
											"value": "592"
										},
										{
											"begin": 15664,
											"end": 15682,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15649,
											"end": 15684,
											"name": "tag",
											"source": 7,
											"value": "591"
										},
										{
											"begin": 15649,
											"end": 15684,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15706,
											"end": 15707,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15703,
											"end": 15704,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15699,
											"end": 15708,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 15694,
											"end": 15708,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15694,
											"end": 15708,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15529,
											"end": 15714,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 15529,
											"end": 15714,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15529,
											"end": 15714,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15529,
											"end": 15714,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15529,
											"end": 15714,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15720,
											"end": 15897,
											"name": "tag",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 15720,
											"end": 15897,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15860,
											"end": 15889,
											"name": "PUSH",
											"source": 7,
											"value": "496E73756666696369656E74207374616B65642062616C616E63650000000000"
										},
										{
											"begin": 15856,
											"end": 15857,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15848,
											"end": 15854,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15844,
											"end": 15858,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15837,
											"end": 15890,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15720,
											"end": 15897,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15720,
											"end": 15897,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15903,
											"end": 16269,
											"name": "tag",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 15903,
											"end": 16269,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16045,
											"end": 16048,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16066,
											"end": 16133,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "595"
										},
										{
											"begin": 16130,
											"end": 16132,
											"name": "PUSH",
											"source": 7,
											"value": "1B"
										},
										{
											"begin": 16125,
											"end": 16128,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16066,
											"end": 16133,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 16066,
											"end": 16133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16066,
											"end": 16133,
											"name": "tag",
											"source": 7,
											"value": "595"
										},
										{
											"begin": 16066,
											"end": 16133,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16059,
											"end": 16133,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16059,
											"end": 16133,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16142,
											"end": 16235,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "596"
										},
										{
											"begin": 16231,
											"end": 16234,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16142,
											"end": 16235,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 16142,
											"end": 16235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16142,
											"end": 16235,
											"name": "tag",
											"source": 7,
											"value": "596"
										},
										{
											"begin": 16142,
											"end": 16235,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16260,
											"end": 16262,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 16255,
											"end": 16258,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16251,
											"end": 16263,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16244,
											"end": 16263,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16244,
											"end": 16263,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15903,
											"end": 16269,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15903,
											"end": 16269,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15903,
											"end": 16269,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15903,
											"end": 16269,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16275,
											"end": 16694,
											"name": "tag",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 16275,
											"end": 16694,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16441,
											"end": 16445,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16479,
											"end": 16481,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 16468,
											"end": 16477,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16464,
											"end": 16482,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16456,
											"end": 16482,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16456,
											"end": 16482,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16528,
											"end": 16537,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16522,
											"end": 16526,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16518,
											"end": 16538,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 16514,
											"end": 16515,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16503,
											"end": 16512,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16499,
											"end": 16516,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16492,
											"end": 16539,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16556,
											"end": 16687,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "598"
										},
										{
											"begin": 16682,
											"end": 16686,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16556,
											"end": 16687,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 16556,
											"end": 16687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16556,
											"end": 16687,
											"name": "tag",
											"source": 7,
											"value": "598"
										},
										{
											"begin": 16556,
											"end": 16687,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16548,
											"end": 16687,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16548,
											"end": 16687,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16275,
											"end": 16694,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16275,
											"end": 16694,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16275,
											"end": 16694,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16275,
											"end": 16694,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16700,
											"end": 16894,
											"name": "tag",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 16700,
											"end": 16894,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16740,
											"end": 16744,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16760,
											"end": 16780,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "600"
										},
										{
											"begin": 16778,
											"end": 16779,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16760,
											"end": 16780,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 16760,
											"end": 16780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16760,
											"end": 16780,
											"name": "tag",
											"source": 7,
											"value": "600"
										},
										{
											"begin": 16760,
											"end": 16780,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16755,
											"end": 16780,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16755,
											"end": 16780,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16794,
											"end": 16814,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "601"
										},
										{
											"begin": 16812,
											"end": 16813,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16794,
											"end": 16814,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 16794,
											"end": 16814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16794,
											"end": 16814,
											"name": "tag",
											"source": 7,
											"value": "601"
										},
										{
											"begin": 16794,
											"end": 16814,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16789,
											"end": 16814,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 16789,
											"end": 16814,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16838,
											"end": 16839,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16835,
											"end": 16836,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16831,
											"end": 16840,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 16823,
											"end": 16840,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16823,
											"end": 16840,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16862,
											"end": 16863,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16856,
											"end": 16860,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16853,
											"end": 16864,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 16850,
											"end": 16887,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 16850,
											"end": 16887,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "602"
										},
										{
											"begin": 16850,
											"end": 16887,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 16867,
											"end": 16885,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "603"
										},
										{
											"begin": 16867,
											"end": 16885,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 16867,
											"end": 16885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16867,
											"end": 16885,
											"name": "tag",
											"source": 7,
											"value": "603"
										},
										{
											"begin": 16867,
											"end": 16885,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16850,
											"end": 16887,
											"name": "tag",
											"source": 7,
											"value": "602"
										},
										{
											"begin": 16850,
											"end": 16887,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16700,
											"end": 16894,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 16700,
											"end": 16894,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16700,
											"end": 16894,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16700,
											"end": 16894,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16700,
											"end": 16894,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16900,
											"end": 17232,
											"name": "tag",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 16900,
											"end": 17232,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17021,
											"end": 17025,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17059,
											"end": 17061,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 17048,
											"end": 17057,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17044,
											"end": 17062,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17036,
											"end": 17062,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17036,
											"end": 17062,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "605"
										},
										{
											"begin": 17140,
											"end": 17141,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17129,
											"end": 17138,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17125,
											"end": 17142,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17116,
											"end": 17122,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 17072,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 7,
											"value": "605"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17153,
											"end": 17225,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "606"
										},
										{
											"begin": 17221,
											"end": 17223,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 17210,
											"end": 17219,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17206,
											"end": 17224,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17197,
											"end": 17203,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 17153,
											"end": 17225,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 17153,
											"end": 17225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17153,
											"end": 17225,
											"name": "tag",
											"source": 7,
											"value": "606"
										},
										{
											"begin": 17153,
											"end": 17225,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16900,
											"end": 17232,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 16900,
											"end": 17232,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 16900,
											"end": 17232,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16900,
											"end": 17232,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16900,
											"end": 17232,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16900,
											"end": 17232,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17238,
											"end": 17417,
											"name": "tag",
											"source": 7,
											"value": "393"
										},
										{
											"begin": 17238,
											"end": 17417,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17378,
											"end": 17409,
											"name": "PUSH",
											"source": 7,
											"value": "43616E6E6F7420656E7465722077697468207A65726F20746F6B656E73000000"
										},
										{
											"begin": 17374,
											"end": 17375,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17366,
											"end": 17372,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17362,
											"end": 17376,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17355,
											"end": 17410,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17238,
											"end": 17417,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17238,
											"end": 17417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17423,
											"end": 17789,
											"name": "tag",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 17423,
											"end": 17789,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17565,
											"end": 17568,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17586,
											"end": 17653,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "609"
										},
										{
											"begin": 17650,
											"end": 17652,
											"name": "PUSH",
											"source": 7,
											"value": "1D"
										},
										{
											"begin": 17645,
											"end": 17648,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17586,
											"end": 17653,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 17586,
											"end": 17653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17586,
											"end": 17653,
											"name": "tag",
											"source": 7,
											"value": "609"
										},
										{
											"begin": 17586,
											"end": 17653,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17579,
											"end": 17653,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17579,
											"end": 17653,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17662,
											"end": 17755,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "610"
										},
										{
											"begin": 17751,
											"end": 17754,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17662,
											"end": 17755,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "393"
										},
										{
											"begin": 17662,
											"end": 17755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17662,
											"end": 17755,
											"name": "tag",
											"source": 7,
											"value": "610"
										},
										{
											"begin": 17662,
											"end": 17755,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17780,
											"end": 17782,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 17775,
											"end": 17778,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17771,
											"end": 17783,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17764,
											"end": 17783,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17764,
											"end": 17783,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17423,
											"end": 17789,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17423,
											"end": 17789,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17423,
											"end": 17789,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17423,
											"end": 17789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17795,
											"end": 18214,
											"name": "tag",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 17795,
											"end": 18214,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17961,
											"end": 17965,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17999,
											"end": 18001,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 17988,
											"end": 17997,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17984,
											"end": 18002,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17976,
											"end": 18002,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17976,
											"end": 18002,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18048,
											"end": 18057,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18042,
											"end": 18046,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18038,
											"end": 18058,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 18034,
											"end": 18035,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18023,
											"end": 18032,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 18019,
											"end": 18036,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18012,
											"end": 18059,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 18076,
											"end": 18207,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "612"
										},
										{
											"begin": 18202,
											"end": 18206,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18076,
											"end": 18207,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 18076,
											"end": 18207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18076,
											"end": 18207,
											"name": "tag",
											"source": 7,
											"value": "612"
										},
										{
											"begin": 18076,
											"end": 18207,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18068,
											"end": 18207,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18068,
											"end": 18207,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17795,
											"end": 18214,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17795,
											"end": 18214,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17795,
											"end": 18214,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17795,
											"end": 18214,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18220,
											"end": 18411,
											"name": "tag",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 18220,
											"end": 18411,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18260,
											"end": 18263,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18279,
											"end": 18299,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "614"
										},
										{
											"begin": 18297,
											"end": 18298,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18279,
											"end": 18299,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 18279,
											"end": 18299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18279,
											"end": 18299,
											"name": "tag",
											"source": 7,
											"value": "614"
										},
										{
											"begin": 18279,
											"end": 18299,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18274,
											"end": 18299,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18274,
											"end": 18299,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18313,
											"end": 18333,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "615"
										},
										{
											"begin": 18331,
											"end": 18332,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 18313,
											"end": 18333,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 18313,
											"end": 18333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18313,
											"end": 18333,
											"name": "tag",
											"source": 7,
											"value": "615"
										},
										{
											"begin": 18313,
											"end": 18333,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18308,
											"end": 18333,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 18308,
											"end": 18333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18356,
											"end": 18357,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18353,
											"end": 18354,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18349,
											"end": 18358,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18342,
											"end": 18358,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18342,
											"end": 18358,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18377,
											"end": 18380,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 18374,
											"end": 18375,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18371,
											"end": 18381,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 18368,
											"end": 18404,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 18368,
											"end": 18404,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "616"
										},
										{
											"begin": 18368,
											"end": 18404,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 18384,
											"end": 18402,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "617"
										},
										{
											"begin": 18384,
											"end": 18402,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 18384,
											"end": 18402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18384,
											"end": 18402,
											"name": "tag",
											"source": 7,
											"value": "617"
										},
										{
											"begin": 18384,
											"end": 18402,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18368,
											"end": 18404,
											"name": "tag",
											"source": 7,
											"value": "616"
										},
										{
											"begin": 18368,
											"end": 18404,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18220,
											"end": 18411,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 18220,
											"end": 18411,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18220,
											"end": 18411,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18220,
											"end": 18411,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18220,
											"end": 18411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18417,
											"end": 18650,
											"name": "tag",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 18417,
											"end": 18650,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18456,
											"end": 18459,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18479,
											"end": 18503,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "619"
										},
										{
											"begin": 18497,
											"end": 18502,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18479,
											"end": 18503,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 18479,
											"end": 18503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18479,
											"end": 18503,
											"name": "tag",
											"source": 7,
											"value": "619"
										},
										{
											"begin": 18479,
											"end": 18503,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18470,
											"end": 18503,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18470,
											"end": 18503,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18525,
											"end": 18591,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18518,
											"end": 18523,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18515,
											"end": 18592,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 18512,
											"end": 18615,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "620"
										},
										{
											"begin": 18512,
											"end": 18615,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 18595,
											"end": 18613,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "621"
										},
										{
											"begin": 18595,
											"end": 18613,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 18595,
											"end": 18613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18595,
											"end": 18613,
											"name": "tag",
											"source": 7,
											"value": "621"
										},
										{
											"begin": 18595,
											"end": 18613,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18512,
											"end": 18615,
											"name": "tag",
											"source": 7,
											"value": "620"
										},
										{
											"begin": 18512,
											"end": 18615,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18642,
											"end": 18643,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 18635,
											"end": 18640,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18631,
											"end": 18644,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18624,
											"end": 18644,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18624,
											"end": 18644,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18417,
											"end": 18650,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18417,
											"end": 18650,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18417,
											"end": 18650,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18417,
											"end": 18650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18656,
											"end": 18797,
											"name": "tag",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 18656,
											"end": 18797,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18705,
											"end": 18709,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18728,
											"end": 18731,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18720,
											"end": 18731,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18720,
											"end": 18731,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18751,
											"end": 18754,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18748,
											"end": 18749,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18741,
											"end": 18755,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 18785,
											"end": 18789,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 18782,
											"end": 18783,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18772,
											"end": 18790,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 18764,
											"end": 18790,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18764,
											"end": 18790,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18656,
											"end": 18797,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18656,
											"end": 18797,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18656,
											"end": 18797,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18656,
											"end": 18797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18803,
											"end": 18896,
											"name": "tag",
											"source": 7,
											"value": "396"
										},
										{
											"begin": 18803,
											"end": 18896,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18840,
											"end": 18846,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18887,
											"end": 18889,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 18882,
											"end": 18884,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 18875,
											"end": 18880,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 18871,
											"end": 18885,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18867,
											"end": 18890,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 18857,
											"end": 18890,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18857,
											"end": 18890,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18803,
											"end": 18896,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18803,
											"end": 18896,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18803,
											"end": 18896,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18803,
											"end": 18896,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18902,
											"end": 19009,
											"name": "tag",
											"source": 7,
											"value": "397"
										},
										{
											"begin": 18902,
											"end": 19009,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18946,
											"end": 18954,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18996,
											"end": 19001,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18990,
											"end": 18994,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18986,
											"end": 19002,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 18965,
											"end": 19002,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18965,
											"end": 19002,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18902,
											"end": 19009,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 18902,
											"end": 19009,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18902,
											"end": 19009,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18902,
											"end": 19009,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18902,
											"end": 19009,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19015,
											"end": 19408,
											"name": "tag",
											"source": 7,
											"value": "398"
										},
										{
											"begin": 19015,
											"end": 19408,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19084,
											"end": 19090,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19134,
											"end": 19135,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 19122,
											"end": 19132,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19118,
											"end": 19136,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 19157,
											"end": 19254,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "626"
										},
										{
											"begin": 19187,
											"end": 19253,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19176,
											"end": 19185,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19157,
											"end": 19254,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "397"
										},
										{
											"begin": 19157,
											"end": 19254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19157,
											"end": 19254,
											"name": "tag",
											"source": 7,
											"value": "626"
										},
										{
											"begin": 19157,
											"end": 19254,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19275,
											"end": 19314,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "627"
										},
										{
											"begin": 19305,
											"end": 19313,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 19294,
											"end": 19303,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19275,
											"end": 19314,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "397"
										},
										{
											"begin": 19275,
											"end": 19314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19275,
											"end": 19314,
											"name": "tag",
											"source": 7,
											"value": "627"
										},
										{
											"begin": 19275,
											"end": 19314,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19263,
											"end": 19314,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 19263,
											"end": 19314,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19347,
											"end": 19351,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 19343,
											"end": 19352,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 19336,
											"end": 19341,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 19332,
											"end": 19353,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 19323,
											"end": 19353,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 19323,
											"end": 19353,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19396,
											"end": 19400,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 19386,
											"end": 19394,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 19382,
											"end": 19401,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 19375,
											"end": 19380,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 19372,
											"end": 19402,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 19362,
											"end": 19402,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 19362,
											"end": 19402,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19091,
											"end": 19408,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19091,
											"end": 19408,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19015,
											"end": 19408,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 19015,
											"end": 19408,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 19015,
											"end": 19408,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19015,
											"end": 19408,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19015,
											"end": 19408,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19015,
											"end": 19408,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19414,
											"end": 19474,
											"name": "tag",
											"source": 7,
											"value": "399"
										},
										{
											"begin": 19414,
											"end": 19474,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19442,
											"end": 19445,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19463,
											"end": 19468,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 19456,
											"end": 19468,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19456,
											"end": 19468,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19414,
											"end": 19474,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 19414,
											"end": 19474,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19414,
											"end": 19474,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19414,
											"end": 19474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19480,
											"end": 19622,
											"name": "tag",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 19480,
											"end": 19622,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19530,
											"end": 19539,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19563,
											"end": 19616,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "630"
										},
										{
											"begin": 19581,
											"end": 19615,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "631"
										},
										{
											"begin": 19590,
											"end": 19614,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "632"
										},
										{
											"begin": 19608,
											"end": 19613,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 19590,
											"end": 19614,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 19590,
											"end": 19614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19590,
											"end": 19614,
											"name": "tag",
											"source": 7,
											"value": "632"
										},
										{
											"begin": 19590,
											"end": 19614,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19581,
											"end": 19615,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "399"
										},
										{
											"begin": 19581,
											"end": 19615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19581,
											"end": 19615,
											"name": "tag",
											"source": 7,
											"value": "631"
										},
										{
											"begin": 19581,
											"end": 19615,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19563,
											"end": 19616,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 19563,
											"end": 19616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19563,
											"end": 19616,
											"name": "tag",
											"source": 7,
											"value": "630"
										},
										{
											"begin": 19563,
											"end": 19616,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19550,
											"end": 19616,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19550,
											"end": 19616,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19480,
											"end": 19622,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 19480,
											"end": 19622,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19480,
											"end": 19622,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19480,
											"end": 19622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19628,
											"end": 19703,
											"name": "tag",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 19628,
											"end": 19703,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19671,
											"end": 19674,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19692,
											"end": 19697,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 19685,
											"end": 19697,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19685,
											"end": 19697,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19628,
											"end": 19703,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 19628,
											"end": 19703,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19628,
											"end": 19703,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19628,
											"end": 19703,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19709,
											"end": 19978,
											"name": "tag",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 19709,
											"end": 19978,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19819,
											"end": 19858,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "635"
										},
										{
											"begin": 19850,
											"end": 19857,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19819,
											"end": 19858,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 19819,
											"end": 19858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19819,
											"end": 19858,
											"name": "tag",
											"source": 7,
											"value": "635"
										},
										{
											"begin": 19819,
											"end": 19858,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19880,
											"end": 19971,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "636"
										},
										{
											"begin": 19929,
											"end": 19970,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "637"
										},
										{
											"begin": 19953,
											"end": 19969,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19929,
											"end": 19970,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 19929,
											"end": 19970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19929,
											"end": 19970,
											"name": "tag",
											"source": 7,
											"value": "637"
										},
										{
											"begin": 19929,
											"end": 19970,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19921,
											"end": 19927,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 19914,
											"end": 19918,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 19908,
											"end": 19919,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 19880,
											"end": 19971,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "398"
										},
										{
											"begin": 19880,
											"end": 19971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19880,
											"end": 19971,
											"name": "tag",
											"source": 7,
											"value": "636"
										},
										{
											"begin": 19880,
											"end": 19971,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19874,
											"end": 19878,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19867,
											"end": 19972,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 19785,
											"end": 19978,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19709,
											"end": 19978,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19709,
											"end": 19978,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19709,
											"end": 19978,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19709,
											"end": 19978,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19984,
											"end": 20057,
											"name": "tag",
											"source": 7,
											"value": "403"
										},
										{
											"begin": 19984,
											"end": 20057,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20029,
											"end": 20032,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20050,
											"end": 20051,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20043,
											"end": 20051,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 20043,
											"end": 20051,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19984,
											"end": 20057,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19984,
											"end": 20057,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20063,
											"end": 20252,
											"name": "tag",
											"source": 7,
											"value": "404"
										},
										{
											"begin": 20063,
											"end": 20252,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20140,
											"end": 20172,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "640"
										},
										{
											"begin": 20140,
											"end": 20172,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "403"
										},
										{
											"begin": 20140,
											"end": 20172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20140,
											"end": 20172,
											"name": "tag",
											"source": 7,
											"value": "640"
										},
										{
											"begin": 20140,
											"end": 20172,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20181,
											"end": 20246,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "641"
										},
										{
											"begin": 20239,
											"end": 20245,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 20231,
											"end": 20237,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 20225,
											"end": 20229,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 20181,
											"end": 20246,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 20181,
											"end": 20246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20181,
											"end": 20246,
											"name": "tag",
											"source": 7,
											"value": "641"
										},
										{
											"begin": 20181,
											"end": 20246,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20116,
											"end": 20252,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20063,
											"end": 20252,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20063,
											"end": 20252,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20063,
											"end": 20252,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20258,
											"end": 20444,
											"name": "tag",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 20258,
											"end": 20444,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20318,
											"end": 20438,
											"name": "tag",
											"source": 7,
											"value": "643"
										},
										{
											"begin": 20318,
											"end": 20438,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20335,
											"end": 20338,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 20328,
											"end": 20333,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 20325,
											"end": 20339,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 20318,
											"end": 20438,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 20318,
											"end": 20438,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "645"
										},
										{
											"begin": 20318,
											"end": 20438,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 20389,
											"end": 20428,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "646"
										},
										{
											"begin": 20426,
											"end": 20427,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20419,
											"end": 20424,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20389,
											"end": 20428,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "404"
										},
										{
											"begin": 20389,
											"end": 20428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20389,
											"end": 20428,
											"name": "tag",
											"source": 7,
											"value": "646"
										},
										{
											"begin": 20389,
											"end": 20428,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20362,
											"end": 20363,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 20355,
											"end": 20360,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 20351,
											"end": 20364,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20342,
											"end": 20364,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 20342,
											"end": 20364,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20318,
											"end": 20438,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "643"
										},
										{
											"begin": 20318,
											"end": 20438,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20318,
											"end": 20438,
											"name": "tag",
											"source": 7,
											"value": "645"
										},
										{
											"begin": 20318,
											"end": 20438,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20258,
											"end": 20444,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20258,
											"end": 20444,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20258,
											"end": 20444,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20450,
											"end": 20993,
											"name": "tag",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 20450,
											"end": 20993,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20551,
											"end": 20553,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 20546,
											"end": 20549,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20543,
											"end": 20554,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 20540,
											"end": 20986,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 20540,
											"end": 20986,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "648"
										},
										{
											"begin": 20540,
											"end": 20986,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 20585,
											"end": 20623,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "649"
										},
										{
											"begin": 20617,
											"end": 20622,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 20585,
											"end": 20623,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 20585,
											"end": 20623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20585,
											"end": 20623,
											"name": "tag",
											"source": 7,
											"value": "649"
										},
										{
											"begin": 20585,
											"end": 20623,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20669,
											"end": 20698,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "650"
										},
										{
											"begin": 20687,
											"end": 20697,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 20669,
											"end": 20698,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "396"
										},
										{
											"begin": 20669,
											"end": 20698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20669,
											"end": 20698,
											"name": "tag",
											"source": 7,
											"value": "650"
										},
										{
											"begin": 20669,
											"end": 20698,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20659,
											"end": 20667,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 20655,
											"end": 20699,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20852,
											"end": 20854,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 20840,
											"end": 20850,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 20837,
											"end": 20855,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 20834,
											"end": 20883,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 20834,
											"end": 20883,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "651"
										},
										{
											"begin": 20834,
											"end": 20883,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 20873,
											"end": 20881,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 20858,
											"end": 20881,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 20858,
											"end": 20881,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20834,
											"end": 20883,
											"name": "tag",
											"source": 7,
											"value": "651"
										},
										{
											"begin": 20834,
											"end": 20883,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20896,
											"end": 20976,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "652"
										},
										{
											"begin": 20952,
											"end": 20974,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "653"
										},
										{
											"begin": 20970,
											"end": 20973,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 20952,
											"end": 20974,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "396"
										},
										{
											"begin": 20952,
											"end": 20974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20952,
											"end": 20974,
											"name": "tag",
											"source": 7,
											"value": "653"
										},
										{
											"begin": 20952,
											"end": 20974,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20942,
											"end": 20950,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 20938,
											"end": 20975,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20925,
											"end": 20936,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20896,
											"end": 20976,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 20896,
											"end": 20976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20896,
											"end": 20976,
											"name": "tag",
											"source": 7,
											"value": "652"
										},
										{
											"begin": 20896,
											"end": 20976,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20555,
											"end": 20986,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20555,
											"end": 20986,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20540,
											"end": 20986,
											"name": "tag",
											"source": 7,
											"value": "648"
										},
										{
											"begin": 20540,
											"end": 20986,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20450,
											"end": 20993,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20450,
											"end": 20993,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20450,
											"end": 20993,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20450,
											"end": 20993,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20999,
											"end": 21116,
											"name": "tag",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 20999,
											"end": 21116,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21053,
											"end": 21061,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 21103,
											"end": 21108,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21097,
											"end": 21101,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21093,
											"end": 21109,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 21072,
											"end": 21109,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21072,
											"end": 21109,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20999,
											"end": 21116,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 20999,
											"end": 21116,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 20999,
											"end": 21116,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20999,
											"end": 21116,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20999,
											"end": 21116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21122,
											"end": 21291,
											"name": "tag",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 21122,
											"end": 21291,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21166,
											"end": 21172,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 21199,
											"end": 21250,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "656"
										},
										{
											"begin": 21247,
											"end": 21248,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 21243,
											"end": 21249,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 21235,
											"end": 21240,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 21232,
											"end": 21233,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 21228,
											"end": 21241,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 21199,
											"end": 21250,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 21199,
											"end": 21250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21199,
											"end": 21250,
											"name": "tag",
											"source": 7,
											"value": "656"
										},
										{
											"begin": 21199,
											"end": 21250,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21195,
											"end": 21251,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 21280,
											"end": 21284,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 21274,
											"end": 21278,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 21270,
											"end": 21285,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 21260,
											"end": 21285,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 21260,
											"end": 21285,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21173,
											"end": 21291,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21122,
											"end": 21291,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 21122,
											"end": 21291,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 21122,
											"end": 21291,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21122,
											"end": 21291,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21122,
											"end": 21291,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21296,
											"end": 21591,
											"name": "tag",
											"source": 7,
											"value": "409"
										},
										{
											"begin": 21296,
											"end": 21591,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21372,
											"end": 21376,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 21518,
											"end": 21547,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "658"
										},
										{
											"begin": 21543,
											"end": 21546,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 21537,
											"end": 21541,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 21518,
											"end": 21547,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 21518,
											"end": 21547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21518,
											"end": 21547,
											"name": "tag",
											"source": 7,
											"value": "658"
										},
										{
											"begin": 21518,
											"end": 21547,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21510,
											"end": 21547,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 21510,
											"end": 21547,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21580,
											"end": 21583,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21577,
											"end": 21578,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 21573,
											"end": 21584,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 21567,
											"end": 21571,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21564,
											"end": 21585,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 21556,
											"end": 21585,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21556,
											"end": 21585,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21296,
											"end": 21591,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 21296,
											"end": 21591,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 21296,
											"end": 21591,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21296,
											"end": 21591,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21296,
											"end": 21591,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21596,
											"end": 22991,
											"name": "tag",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 21596,
											"end": 22991,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21713,
											"end": 21750,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "660"
										},
										{
											"begin": 21746,
											"end": 21749,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21713,
											"end": 21750,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 21713,
											"end": 21750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21713,
											"end": 21750,
											"name": "tag",
											"source": 7,
											"value": "660"
										},
										{
											"begin": 21713,
											"end": 21750,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21815,
											"end": 21833,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21807,
											"end": 21813,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 21804,
											"end": 21834,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 21801,
											"end": 21857,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 21801,
											"end": 21857,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "661"
										},
										{
											"begin": 21801,
											"end": 21857,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 21837,
											"end": 21855,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "662"
										},
										{
											"begin": 21837,
											"end": 21855,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 21837,
											"end": 21855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21837,
											"end": 21855,
											"name": "tag",
											"source": 7,
											"value": "662"
										},
										{
											"begin": 21837,
											"end": 21855,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21801,
											"end": 21857,
											"name": "tag",
											"source": 7,
											"value": "661"
										},
										{
											"begin": 21801,
											"end": 21857,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21881,
											"end": 21919,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "663"
										},
										{
											"begin": 21913,
											"end": 21917,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21907,
											"end": 21918,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 21881,
											"end": 21919,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 21881,
											"end": 21919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21881,
											"end": 21919,
											"name": "tag",
											"source": 7,
											"value": "663"
										},
										{
											"begin": 21881,
											"end": 21919,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21966,
											"end": 22033,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "664"
										},
										{
											"begin": 22026,
											"end": 22032,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 22018,
											"end": 22024,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 22012,
											"end": 22016,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 21966,
											"end": 22033,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 21966,
											"end": 22033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21966,
											"end": 22033,
											"name": "tag",
											"source": 7,
											"value": "664"
										},
										{
											"begin": 21966,
											"end": 22033,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22060,
											"end": 22061,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 22084,
											"end": 22088,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 22071,
											"end": 22088,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 22071,
											"end": 22088,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22116,
											"end": 22118,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 22108,
											"end": 22114,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 22105,
											"end": 22119,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 22133,
											"end": 22134,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 22128,
											"end": 22746,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 22128,
											"end": 22746,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 22128,
											"end": 22746,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "666"
										},
										{
											"begin": 22128,
											"end": 22746,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 22790,
											"end": 22791,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 22807,
											"end": 22813,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 22804,
											"end": 22881,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 22804,
											"end": 22881,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "667"
										},
										{
											"begin": 22804,
											"end": 22881,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 22856,
											"end": 22865,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 22851,
											"end": 22854,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 22847,
											"end": 22866,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 22841,
											"end": 22867,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 22832,
											"end": 22867,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 22832,
											"end": 22867,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22804,
											"end": 22881,
											"name": "tag",
											"source": 7,
											"value": "667"
										},
										{
											"begin": 22804,
											"end": 22881,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22907,
											"end": 22974,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "668"
										},
										{
											"begin": 22967,
											"end": 22973,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 22960,
											"end": 22965,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 22907,
											"end": 22974,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "409"
										},
										{
											"begin": 22907,
											"end": 22974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 22907,
											"end": 22974,
											"name": "tag",
											"source": 7,
											"value": "668"
										},
										{
											"begin": 22907,
											"end": 22974,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22901,
											"end": 22905,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 22894,
											"end": 22975,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 22763,
											"end": 22985,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22098,
											"end": 22985,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "665"
										},
										{
											"begin": 22098,
											"end": 22985,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 22128,
											"end": 22746,
											"name": "tag",
											"source": 7,
											"value": "666"
										},
										{
											"begin": 22128,
											"end": 22746,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22180,
											"end": 22184,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 22176,
											"end": 22185,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 22168,
											"end": 22174,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 22164,
											"end": 22186,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 22214,
											"end": 22251,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "669"
										},
										{
											"begin": 22246,
											"end": 22250,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 22214,
											"end": 22251,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 22214,
											"end": 22251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 22214,
											"end": 22251,
											"name": "tag",
											"source": 7,
											"value": "669"
										},
										{
											"begin": 22214,
											"end": 22251,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22273,
											"end": 22274,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 22287,
											"end": 22495,
											"name": "tag",
											"source": 7,
											"value": "670"
										},
										{
											"begin": 22287,
											"end": 22495,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22301,
											"end": 22308,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 22298,
											"end": 22299,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 22295,
											"end": 22309,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 22287,
											"end": 22495,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 22287,
											"end": 22495,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "672"
										},
										{
											"begin": 22287,
											"end": 22495,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 22380,
											"end": 22389,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 22375,
											"end": 22378,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 22371,
											"end": 22390,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 22365,
											"end": 22391,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 22357,
											"end": 22363,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 22350,
											"end": 22392,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 22431,
											"end": 22432,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 22423,
											"end": 22429,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 22419,
											"end": 22433,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 22409,
											"end": 22433,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 22409,
											"end": 22433,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22478,
											"end": 22480,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 22467,
											"end": 22476,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 22463,
											"end": 22481,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 22450,
											"end": 22481,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 22450,
											"end": 22481,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22324,
											"end": 22328,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 22321,
											"end": 22322,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 22317,
											"end": 22329,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 22312,
											"end": 22329,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 22312,
											"end": 22329,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22287,
											"end": 22495,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "670"
										},
										{
											"begin": 22287,
											"end": 22495,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 22287,
											"end": 22495,
											"name": "tag",
											"source": 7,
											"value": "672"
										},
										{
											"begin": 22287,
											"end": 22495,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22523,
											"end": 22529,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 22514,
											"end": 22521,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 22511,
											"end": 22530,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 22508,
											"end": 22687,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 22508,
											"end": 22687,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "673"
										},
										{
											"begin": 22508,
											"end": 22687,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 22581,
											"end": 22590,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 22576,
											"end": 22579,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 22572,
											"end": 22591,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 22566,
											"end": 22592,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 22624,
											"end": 22672,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "674"
										},
										{
											"begin": 22666,
											"end": 22670,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 22658,
											"end": 22664,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 22654,
											"end": 22671,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 22643,
											"end": 22652,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 22624,
											"end": 22672,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 22624,
											"end": 22672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 22624,
											"end": 22672,
											"name": "tag",
											"source": 7,
											"value": "674"
										},
										{
											"begin": 22624,
											"end": 22672,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22616,
											"end": 22622,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 22609,
											"end": 22673,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 22531,
											"end": 22687,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22508,
											"end": 22687,
											"name": "tag",
											"source": 7,
											"value": "673"
										},
										{
											"begin": 22508,
											"end": 22687,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22733,
											"end": 22734,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 22729,
											"end": 22730,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 22721,
											"end": 22727,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 22717,
											"end": 22731,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 22713,
											"end": 22735,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 22707,
											"end": 22711,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 22700,
											"end": 22736,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 22135,
											"end": 22746,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22135,
											"end": 22746,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22135,
											"end": 22746,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22098,
											"end": 22985,
											"name": "tag",
											"source": 7,
											"value": "665"
										},
										{
											"begin": 22098,
											"end": 22985,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22098,
											"end": 22985,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21688,
											"end": 22991,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21688,
											"end": 22991,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21688,
											"end": 22991,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21596,
											"end": 22991,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21596,
											"end": 22991,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21596,
											"end": 22991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 22997,
											"end": 23177,
											"name": "tag",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 22997,
											"end": 23177,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 23137,
											"end": 23169,
											"name": "PUSH",
											"source": 7,
											"value": "4E6F207061727469636970616E747320696E20746865206C6F74746572790000"
										},
										{
											"begin": 23133,
											"end": 23134,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 23125,
											"end": 23131,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 23121,
											"end": 23135,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 23114,
											"end": 23170,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 22997,
											"end": 23177,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22997,
											"end": 23177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 23183,
											"end": 23549,
											"name": "tag",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 23183,
											"end": 23549,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 23325,
											"end": 23328,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 23346,
											"end": 23413,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "677"
										},
										{
											"begin": 23410,
											"end": 23412,
											"name": "PUSH",
											"source": 7,
											"value": "1E"
										},
										{
											"begin": 23405,
											"end": 23408,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 23346,
											"end": 23413,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 23346,
											"end": 23413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 23346,
											"end": 23413,
											"name": "tag",
											"source": 7,
											"value": "677"
										},
										{
											"begin": 23346,
											"end": 23413,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 23339,
											"end": 23413,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 23339,
											"end": 23413,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 23422,
											"end": 23515,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "678"
										},
										{
											"begin": 23511,
											"end": 23514,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 23422,
											"end": 23515,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 23422,
											"end": 23515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 23422,
											"end": 23515,
											"name": "tag",
											"source": 7,
											"value": "678"
										},
										{
											"begin": 23422,
											"end": 23515,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 23540,
											"end": 23542,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 23535,
											"end": 23538,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 23531,
											"end": 23543,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 23524,
											"end": 23543,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 23524,
											"end": 23543,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 23183,
											"end": 23549,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 23183,
											"end": 23549,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 23183,
											"end": 23549,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 23183,
											"end": 23549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 23555,
											"end": 23974,
											"name": "tag",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 23555,
											"end": 23974,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 23721,
											"end": 23725,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 23759,
											"end": 23761,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 23748,
											"end": 23757,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 23744,
											"end": 23762,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 23736,
											"end": 23762,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 23736,
											"end": 23762,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 23808,
											"end": 23817,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 23802,
											"end": 23806,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 23798,
											"end": 23818,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 23794,
											"end": 23795,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 23783,
											"end": 23792,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 23779,
											"end": 23796,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 23772,
											"end": 23819,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 23836,
											"end": 23967,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "680"
										},
										{
											"begin": 23962,
											"end": 23966,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 23836,
											"end": 23967,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 23836,
											"end": 23967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 23836,
											"end": 23967,
											"name": "tag",
											"source": 7,
											"value": "680"
										},
										{
											"begin": 23836,
											"end": 23967,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 23828,
											"end": 23967,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 23828,
											"end": 23967,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 23555,
											"end": 23974,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 23555,
											"end": 23974,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 23555,
											"end": 23974,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 23555,
											"end": 23974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 23980,
											"end": 24059,
											"name": "tag",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 23980,
											"end": 24059,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 24019,
											"end": 24026,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 24048,
											"end": 24053,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 24037,
											"end": 24053,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 24037,
											"end": 24053,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 23980,
											"end": 24059,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 23980,
											"end": 24059,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 23980,
											"end": 24059,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 23980,
											"end": 24059,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 24065,
											"end": 24222,
											"name": "tag",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 24065,
											"end": 24222,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 24170,
											"end": 24215,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "683"
										},
										{
											"begin": 24190,
											"end": 24214,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "684"
										},
										{
											"begin": 24208,
											"end": 24213,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 24190,
											"end": 24214,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 24190,
											"end": 24214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 24190,
											"end": 24214,
											"name": "tag",
											"source": 7,
											"value": "684"
										},
										{
											"begin": 24190,
											"end": 24214,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 24170,
											"end": 24215,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 24170,
											"end": 24215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 24170,
											"end": 24215,
											"name": "tag",
											"source": 7,
											"value": "683"
										},
										{
											"begin": 24170,
											"end": 24215,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 24165,
											"end": 24168,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 24158,
											"end": 24216,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 24065,
											"end": 24222,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 24065,
											"end": 24222,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 24065,
											"end": 24222,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 24228,
											"end": 24625,
											"name": "tag",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 24228,
											"end": 24625,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 24368,
											"end": 24371,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 24383,
											"end": 24458,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "686"
										},
										{
											"begin": 24454,
											"end": 24457,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 24445,
											"end": 24451,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 24383,
											"end": 24458,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 24383,
											"end": 24458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 24383,
											"end": 24458,
											"name": "tag",
											"source": 7,
											"value": "686"
										},
										{
											"begin": 24383,
											"end": 24458,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 24483,
											"end": 24485,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 24478,
											"end": 24481,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 24474,
											"end": 24486,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 24467,
											"end": 24486,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 24467,
											"end": 24486,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 24496,
											"end": 24571,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "687"
										},
										{
											"begin": 24567,
											"end": 24570,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 24558,
											"end": 24564,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 24496,
											"end": 24571,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 24496,
											"end": 24571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 24496,
											"end": 24571,
											"name": "tag",
											"source": 7,
											"value": "687"
										},
										{
											"begin": 24496,
											"end": 24571,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 24596,
											"end": 24598,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 24591,
											"end": 24594,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 24587,
											"end": 24599,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 24580,
											"end": 24599,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 24580,
											"end": 24599,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 24616,
											"end": 24619,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 24609,
											"end": 24619,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 24609,
											"end": 24619,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 24228,
											"end": 24625,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 24228,
											"end": 24625,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 24228,
											"end": 24625,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 24228,
											"end": 24625,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 24228,
											"end": 24625,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 24228,
											"end": 24625,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 24631,
											"end": 24807,
											"name": "tag",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 24631,
											"end": 24807,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 24663,
											"end": 24664,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 24680,
											"end": 24700,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "689"
										},
										{
											"begin": 24698,
											"end": 24699,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 24680,
											"end": 24700,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 24680,
											"end": 24700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 24680,
											"end": 24700,
											"name": "tag",
											"source": 7,
											"value": "689"
										},
										{
											"begin": 24680,
											"end": 24700,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 24675,
											"end": 24700,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 24675,
											"end": 24700,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 24714,
											"end": 24734,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "690"
										},
										{
											"begin": 24732,
											"end": 24733,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 24714,
											"end": 24734,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 24714,
											"end": 24734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 24714,
											"end": 24734,
											"name": "tag",
											"source": 7,
											"value": "690"
										},
										{
											"begin": 24714,
											"end": 24734,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 24709,
											"end": 24734,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 24709,
											"end": 24734,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 24753,
											"end": 24754,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 24743,
											"end": 24778,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "691"
										},
										{
											"begin": 24743,
											"end": 24778,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 24758,
											"end": 24776,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "692"
										},
										{
											"begin": 24758,
											"end": 24776,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 24758,
											"end": 24776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 24758,
											"end": 24776,
											"name": "tag",
											"source": 7,
											"value": "692"
										},
										{
											"begin": 24758,
											"end": 24776,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 24743,
											"end": 24778,
											"name": "tag",
											"source": 7,
											"value": "691"
										},
										{
											"begin": 24743,
											"end": 24778,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 24799,
											"end": 24800,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 24796,
											"end": 24797,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 24792,
											"end": 24801,
											"name": "MOD",
											"source": 7
										},
										{
											"begin": 24787,
											"end": 24801,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 24787,
											"end": 24801,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 24631,
											"end": 24807,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 24631,
											"end": 24807,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 24631,
											"end": 24807,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 24631,
											"end": 24807,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 24631,
											"end": 24807,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 24813,
											"end": 24993,
											"name": "tag",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 24813,
											"end": 24993,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 24861,
											"end": 24938,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24858,
											"end": 24859,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 24851,
											"end": 24939,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 24958,
											"end": 24962,
											"name": "PUSH",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 24955,
											"end": 24956,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 24948,
											"end": 24963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 24982,
											"end": 24986,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 24979,
											"end": 24980,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 24972,
											"end": 24987,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 24999,
											"end": 25173,
											"name": "tag",
											"source": 7,
											"value": "414"
										},
										{
											"begin": 24999,
											"end": 25173,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 25139,
											"end": 25165,
											"name": "PUSH",
											"source": 7,
											"value": "43616E6E6F74207374616B65207A65726F20746F6B656E730000000000000000"
										},
										{
											"begin": 25135,
											"end": 25136,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 25127,
											"end": 25133,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 25123,
											"end": 25137,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 25116,
											"end": 25166,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 24999,
											"end": 25173,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 24999,
											"end": 25173,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 25179,
											"end": 25545,
											"name": "tag",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 25179,
											"end": 25545,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 25321,
											"end": 25324,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 25342,
											"end": 25409,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "696"
										},
										{
											"begin": 25406,
											"end": 25408,
											"name": "PUSH",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 25401,
											"end": 25404,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 25342,
											"end": 25409,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 25342,
											"end": 25409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 25342,
											"end": 25409,
											"name": "tag",
											"source": 7,
											"value": "696"
										},
										{
											"begin": 25342,
											"end": 25409,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 25335,
											"end": 25409,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 25335,
											"end": 25409,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 25418,
											"end": 25511,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "697"
										},
										{
											"begin": 25507,
											"end": 25510,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 25418,
											"end": 25511,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "414"
										},
										{
											"begin": 25418,
											"end": 25511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 25418,
											"end": 25511,
											"name": "tag",
											"source": 7,
											"value": "697"
										},
										{
											"begin": 25418,
											"end": 25511,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 25536,
											"end": 25538,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 25531,
											"end": 25534,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 25527,
											"end": 25539,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 25520,
											"end": 25539,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 25520,
											"end": 25539,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 25179,
											"end": 25545,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 25179,
											"end": 25545,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 25179,
											"end": 25545,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 25179,
											"end": 25545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 25551,
											"end": 25970,
											"name": "tag",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 25551,
											"end": 25970,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 25717,
											"end": 25721,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 25755,
											"end": 25757,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 25744,
											"end": 25753,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 25740,
											"end": 25758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 25732,
											"end": 25758,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 25732,
											"end": 25758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 25804,
											"end": 25813,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 25798,
											"end": 25802,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 25794,
											"end": 25814,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 25790,
											"end": 25791,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 25779,
											"end": 25788,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 25775,
											"end": 25792,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 25768,
											"end": 25815,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 25832,
											"end": 25963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "699"
										},
										{
											"begin": 25958,
											"end": 25962,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 25832,
											"end": 25963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 25832,
											"end": 25963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 25832,
											"end": 25963,
											"name": "tag",
											"source": 7,
											"value": "699"
										},
										{
											"begin": 25832,
											"end": 25963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 25824,
											"end": 25963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 25824,
											"end": 25963,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 25551,
											"end": 25970,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 25551,
											"end": 25970,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 25551,
											"end": 25970,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 25551,
											"end": 25970,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 25976,
											"end": 26145,
											"name": "tag",
											"source": 7,
											"value": "416"
										},
										{
											"begin": 25976,
											"end": 26145,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 26116,
											"end": 26137,
											"name": "PUSH",
											"source": 7,
											"value": "496E76616C69642070726F706F73616C20494400000000000000000000000000"
										},
										{
											"begin": 26112,
											"end": 26113,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 26104,
											"end": 26110,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 26100,
											"end": 26114,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 26093,
											"end": 26138,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 25976,
											"end": 26145,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 25976,
											"end": 26145,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 26151,
											"end": 26517,
											"name": "tag",
											"source": 7,
											"value": "417"
										},
										{
											"begin": 26151,
											"end": 26517,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 26293,
											"end": 26296,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 26314,
											"end": 26381,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "702"
										},
										{
											"begin": 26378,
											"end": 26380,
											"name": "PUSH",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 26373,
											"end": 26376,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 26314,
											"end": 26381,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 26314,
											"end": 26381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 26314,
											"end": 26381,
											"name": "tag",
											"source": 7,
											"value": "702"
										},
										{
											"begin": 26314,
											"end": 26381,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 26307,
											"end": 26381,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 26307,
											"end": 26381,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 26390,
											"end": 26483,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "703"
										},
										{
											"begin": 26479,
											"end": 26482,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 26390,
											"end": 26483,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "416"
										},
										{
											"begin": 26390,
											"end": 26483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 26390,
											"end": 26483,
											"name": "tag",
											"source": 7,
											"value": "703"
										},
										{
											"begin": 26390,
											"end": 26483,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 26508,
											"end": 26510,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 26503,
											"end": 26506,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 26499,
											"end": 26511,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 26492,
											"end": 26511,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 26492,
											"end": 26511,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 26151,
											"end": 26517,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 26151,
											"end": 26517,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 26151,
											"end": 26517,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 26151,
											"end": 26517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 26523,
											"end": 26942,
											"name": "tag",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 26523,
											"end": 26942,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 26689,
											"end": 26693,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 26727,
											"end": 26729,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 26716,
											"end": 26725,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 26712,
											"end": 26730,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 26704,
											"end": 26730,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 26704,
											"end": 26730,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 26776,
											"end": 26785,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 26770,
											"end": 26774,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 26766,
											"end": 26786,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 26762,
											"end": 26763,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 26751,
											"end": 26760,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 26747,
											"end": 26764,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 26740,
											"end": 26787,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 26804,
											"end": 26935,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "705"
										},
										{
											"begin": 26930,
											"end": 26934,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 26804,
											"end": 26935,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "417"
										},
										{
											"begin": 26804,
											"end": 26935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 26804,
											"end": 26935,
											"name": "tag",
											"source": 7,
											"value": "705"
										},
										{
											"begin": 26804,
											"end": 26935,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 26796,
											"end": 26935,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 26796,
											"end": 26935,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 26523,
											"end": 26942,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 26523,
											"end": 26942,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 26523,
											"end": 26942,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 26523,
											"end": 26942,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 26948,
											"end": 27122,
											"name": "tag",
											"source": 7,
											"value": "418"
										},
										{
											"begin": 26948,
											"end": 27122,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 27088,
											"end": 27114,
											"name": "PUSH",
											"source": 7,
											"value": "4E6F207374616B656420746F6B656E7320746F20766F74650000000000000000"
										},
										{
											"begin": 27084,
											"end": 27085,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 27076,
											"end": 27082,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 27072,
											"end": 27086,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 27065,
											"end": 27115,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 26948,
											"end": 27122,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 26948,
											"end": 27122,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 27128,
											"end": 27494,
											"name": "tag",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 27128,
											"end": 27494,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 27270,
											"end": 27273,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 27291,
											"end": 27358,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "708"
										},
										{
											"begin": 27355,
											"end": 27357,
											"name": "PUSH",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 27350,
											"end": 27353,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 27291,
											"end": 27358,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 27291,
											"end": 27358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 27291,
											"end": 27358,
											"name": "tag",
											"source": 7,
											"value": "708"
										},
										{
											"begin": 27291,
											"end": 27358,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 27284,
											"end": 27358,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 27284,
											"end": 27358,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 27367,
											"end": 27460,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "709"
										},
										{
											"begin": 27456,
											"end": 27459,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 27367,
											"end": 27460,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "418"
										},
										{
											"begin": 27367,
											"end": 27460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 27367,
											"end": 27460,
											"name": "tag",
											"source": 7,
											"value": "709"
										},
										{
											"begin": 27367,
											"end": 27460,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 27485,
											"end": 27487,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 27480,
											"end": 27483,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 27476,
											"end": 27488,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 27469,
											"end": 27488,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 27469,
											"end": 27488,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 27128,
											"end": 27494,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 27128,
											"end": 27494,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 27128,
											"end": 27494,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 27128,
											"end": 27494,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 27500,
											"end": 27919,
											"name": "tag",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 27500,
											"end": 27919,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 27666,
											"end": 27670,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 27704,
											"end": 27706,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 27693,
											"end": 27702,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 27689,
											"end": 27707,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 27681,
											"end": 27707,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 27681,
											"end": 27707,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 27753,
											"end": 27762,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 27747,
											"end": 27751,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 27743,
											"end": 27763,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 27739,
											"end": 27740,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 27728,
											"end": 27737,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 27724,
											"end": 27741,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 27717,
											"end": 27764,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 27781,
											"end": 27912,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "711"
										},
										{
											"begin": 27907,
											"end": 27911,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 27781,
											"end": 27912,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 27781,
											"end": 27912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 27781,
											"end": 27912,
											"name": "tag",
											"source": 7,
											"value": "711"
										},
										{
											"begin": 27781,
											"end": 27912,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 27773,
											"end": 27912,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 27773,
											"end": 27912,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 27500,
											"end": 27919,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 27500,
											"end": 27919,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 27500,
											"end": 27919,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 27500,
											"end": 27919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 27925,
											"end": 28367,
											"name": "tag",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 27925,
											"end": 28367,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 28074,
											"end": 28078,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 28112,
											"end": 28114,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 28101,
											"end": 28110,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 28097,
											"end": 28115,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 28089,
											"end": 28115,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 28089,
											"end": 28115,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 28125,
											"end": 28196,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "713"
										},
										{
											"begin": 28193,
											"end": 28194,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 28182,
											"end": 28191,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 28178,
											"end": 28195,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 28169,
											"end": 28175,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 28125,
											"end": 28196,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "367"
										},
										{
											"begin": 28125,
											"end": 28196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 28125,
											"end": 28196,
											"name": "tag",
											"source": 7,
											"value": "713"
										},
										{
											"begin": 28125,
											"end": 28196,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 28206,
											"end": 28278,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "714"
										},
										{
											"begin": 28274,
											"end": 28276,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 28263,
											"end": 28272,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 28259,
											"end": 28277,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 28250,
											"end": 28256,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 28206,
											"end": 28278,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 28206,
											"end": 28278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 28206,
											"end": 28278,
											"name": "tag",
											"source": 7,
											"value": "714"
										},
										{
											"begin": 28206,
											"end": 28278,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 28288,
											"end": 28360,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "715"
										},
										{
											"begin": 28356,
											"end": 28358,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 28345,
											"end": 28354,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 28341,
											"end": 28359,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 28332,
											"end": 28338,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 28288,
											"end": 28360,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 28288,
											"end": 28360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 28288,
											"end": 28360,
											"name": "tag",
											"source": 7,
											"value": "715"
										},
										{
											"begin": 28288,
											"end": 28360,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 27925,
											"end": 28367,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 27925,
											"end": 28367,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 27925,
											"end": 28367,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 27925,
											"end": 28367,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 27925,
											"end": 28367,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 27925,
											"end": 28367,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 27925,
											"end": 28367,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/FresaCoin.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"REFERRAL_BONUS()": "e1913c81",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"calculateReward(uint256,uint256)": "13ed0846",
							"createProposal(string)": "49c2a1a6",
							"decimals()": "313ce567",
							"drawLotteryWinner()": "576b5002",
							"enterLottery(uint256)": "3fd43098",
							"getLotteryEntries()": "b3a55a66",
							"getLotteryPrizePool()": "cdb12c83",
							"lottery()": "ba13a572",
							"minStakeDuration()": "5fec5c64",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"proposalCounter()": "0c0512e9",
							"proposals(uint256)": "013cf08b",
							"renounceOwnership()": "715018a6",
							"stake(uint256,address)": "7acb7757",
							"stakes(address)": "16934fc4",
							"stakingPool()": "0c56ae3b",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"vote(uint256,bool)": "c9d27afe",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_initialSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rewardRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_lockDuration\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"LotteryEntered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"prize\",\"type\":\"uint256\"}],\"name\":\"LotteryWinner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"ProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"voteFor\",\"type\":\"bool\"}],\"name\":\"Voted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"penalty\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"REFERRAL_BONUS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"calculateReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"createProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"drawLotteryWinner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"enterLottery\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLotteryEntries\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLotteryPrizePool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lottery\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"prizePool\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minStakeDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"votesFor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votesAgainst\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isApproved\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardAccumulated\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastStakedTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rewardRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lockDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalStaked\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"voteFor\",\"type\":\"bool\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"calculateReward(uint256,uint256)\":{\"params\":{\"amount\":\"Amount staked\",\"duration\":\"Duration of the stake\"},\"returns\":{\"reward\":\"Calculated reward\"}},\"constructor\":{\"params\":{\"_initialSupply\":\"Initial token supply\",\"_lockDuration\":\"Lock duration for staking\",\"_rewardRate\":\"Reward rate for staking\"}},\"createProposal(string)\":{\"params\":{\"description\":\"Description of the proposal\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"enterLottery(uint256)\":{\"params\":{\"amount\":\"Amount of tokens to stake for the lottery\"}},\"getLotteryEntries()\":{\"returns\":{\"_0\":\"List of participants\"}},\"getLotteryPrizePool()\":{\"returns\":{\"_0\":\"Prize pool amount\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"stake(uint256,address)\":{\"params\":{\"amount\":\"Amount of tokens to stake\",\"referrer\":\"Optional referrer address\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"vote(uint256,bool)\":{\"params\":{\"proposalId\":\"ID of the proposal\",\"voteFor\":\"True to vote for, false to vote against\"}},\"withdraw(uint256)\":{\"params\":{\"amount\":\"Amount to withdraw\"}}},\"title\":\"FresaCoin - Ethereum version \",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"calculateReward(uint256,uint256)\":{\"notice\":\"Calculate reward based on stake and duration\"},\"constructor\":{\"notice\":\"Constructor to initialize the contract\"},\"createProposal(string)\":{\"notice\":\"Create a governance proposal\"},\"drawLotteryWinner()\":{\"notice\":\"Draw a winner for the lottery\"},\"enterLottery(uint256)\":{\"notice\":\"Enter the lottery by staking tokens\"},\"getLotteryEntries()\":{\"notice\":\"Get lottery participants\"},\"getLotteryPrizePool()\":{\"notice\":\"Get the prize pool for the lottery\"},\"stake(uint256,address)\":{\"notice\":\"Stake tokens to earn rewards\"},\"vote(uint256,bool)\":{\"notice\":\"Vote on a governance proposal\"},\"withdraw(uint256)\":{\"notice\":\"Withdraw staked tokens with penalty if applicable\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FresaCoin.sol\":\"FresaCoin\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/FresaCoin.sol\":{\"keccak256\":\"0x99d757a61f06277150baeec63191ccf85bd2da1f3c37f854aa0d0bbee4da7e0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b5b59230ab4cf00e9bf5a5f5d6e00e7b2bc6e712c2593dcc9fdbe26a65f10f6f\",\"dweb:/ipfs/QmSVGp7Nuf6pmfnMCi2zL2DrNZLnxbdHfoN7nmnerLagf5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "contracts/FresaCoin.sol:FresaCoin",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "contracts/FresaCoin.sol:FresaCoin",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "contracts/FresaCoin.sol:FresaCoin",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "contracts/FresaCoin.sol:FresaCoin",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "contracts/FresaCoin.sol:FresaCoin",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "contracts/FresaCoin.sol:FresaCoin",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 978,
								"contract": "contracts/FresaCoin.sol:FresaCoin",
								"label": "stakes",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_struct(Stake)951_storage)"
							},
							{
								"astId": 983,
								"contract": "contracts/FresaCoin.sol:FresaCoin",
								"label": "proposals",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint256,t_struct(Proposal)960_storage)"
							},
							{
								"astId": 986,
								"contract": "contracts/FresaCoin.sol:FresaCoin",
								"label": "lottery",
								"offset": 0,
								"slot": "8",
								"type": "t_struct(Lottery)966_storage"
							},
							{
								"astId": 989,
								"contract": "contracts/FresaCoin.sol:FresaCoin",
								"label": "stakingPool",
								"offset": 0,
								"slot": "10",
								"type": "t_struct(StakingPool)973_storage"
							},
							{
								"astId": 991,
								"contract": "contracts/FresaCoin.sol:FresaCoin",
								"label": "proposalCounter",
								"offset": 0,
								"slot": "13",
								"type": "t_uint256"
							},
							{
								"astId": 994,
								"contract": "contracts/FresaCoin.sol:FresaCoin",
								"label": "minStakeDuration",
								"offset": 0,
								"slot": "14",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_struct(Stake)951_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct FresaCoin.Stake)",
								"numberOfBytes": "32",
								"value": "t_struct(Stake)951_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_struct(Proposal)960_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct FresaCoin.Proposal)",
								"numberOfBytes": "32",
								"value": "t_struct(Proposal)960_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Lottery)966_storage": {
								"encoding": "inplace",
								"label": "struct FresaCoin.Lottery",
								"members": [
									{
										"astId": 963,
										"contract": "contracts/FresaCoin.sol:FresaCoin",
										"label": "entries",
										"offset": 0,
										"slot": "0",
										"type": "t_array(t_address)dyn_storage"
									},
									{
										"astId": 965,
										"contract": "contracts/FresaCoin.sol:FresaCoin",
										"label": "prizePool",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(Proposal)960_storage": {
								"encoding": "inplace",
								"label": "struct FresaCoin.Proposal",
								"members": [
									{
										"astId": 953,
										"contract": "contracts/FresaCoin.sol:FresaCoin",
										"label": "description",
										"offset": 0,
										"slot": "0",
										"type": "t_string_storage"
									},
									{
										"astId": 955,
										"contract": "contracts/FresaCoin.sol:FresaCoin",
										"label": "votesFor",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 957,
										"contract": "contracts/FresaCoin.sol:FresaCoin",
										"label": "votesAgainst",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 959,
										"contract": "contracts/FresaCoin.sol:FresaCoin",
										"label": "isApproved",
										"offset": 0,
										"slot": "3",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "128"
							},
							"t_struct(Stake)951_storage": {
								"encoding": "inplace",
								"label": "struct FresaCoin.Stake",
								"members": [
									{
										"astId": 944,
										"contract": "contracts/FresaCoin.sol:FresaCoin",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 946,
										"contract": "contracts/FresaCoin.sol:FresaCoin",
										"label": "rewardAccumulated",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 948,
										"contract": "contracts/FresaCoin.sol:FresaCoin",
										"label": "lastStakedTimestamp",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 950,
										"contract": "contracts/FresaCoin.sol:FresaCoin",
										"label": "referrer",
										"offset": 0,
										"slot": "3",
										"type": "t_address"
									}
								],
								"numberOfBytes": "128"
							},
							"t_struct(StakingPool)973_storage": {
								"encoding": "inplace",
								"label": "struct FresaCoin.StakingPool",
								"members": [
									{
										"astId": 968,
										"contract": "contracts/FresaCoin.sol:FresaCoin",
										"label": "rewardRate",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 970,
										"contract": "contracts/FresaCoin.sol:FresaCoin",
										"label": "lockDuration",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 972,
										"contract": "contracts/FresaCoin.sol:FresaCoin",
										"label": "totalStaked",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"calculateReward(uint256,uint256)": {
								"notice": "Calculate reward based on stake and duration"
							},
							"constructor": {
								"notice": "Constructor to initialize the contract"
							},
							"createProposal(string)": {
								"notice": "Create a governance proposal"
							},
							"drawLotteryWinner()": {
								"notice": "Draw a winner for the lottery"
							},
							"enterLottery(uint256)": {
								"notice": "Enter the lottery by staking tokens"
							},
							"getLotteryEntries()": {
								"notice": "Get lottery participants"
							},
							"getLotteryPrizePool()": {
								"notice": "Get the prize pool for the lottery"
							},
							"stake(uint256,address)": {
								"notice": "Stake tokens to earn rewards"
							},
							"vote(uint256,bool)": {
								"notice": "Vote on a governance proposal"
							},
							"withdraw(uint256)": {
								"notice": "Withdraw staked tokens with penalty if applicable"
							}
						},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "8417",
				"formattedMessage": "Warning: Since the VM version paris, \"difficulty\" was replaced by \"prevrandao\", which now returns a random number based on the beacon chain.\n   --> contracts/FresaCoin.sol:171:57:\n    |\n171 |             keccak256(abi.encodePacked(block.timestamp, block.difficulty))\n    |                                                         ^^^^^^^^^^^^^^^^\n\n",
				"message": "Since the VM version paris, \"difficulty\" was replaced by \"prevrandao\", which now returns a random number based on the beacon chain.",
				"severity": "warning",
				"sourceLocation": {
					"end": 6467,
					"file": "contracts/FresaCoin.sol",
					"start": 6451
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n   --> contracts/FresaCoin.sol:200:5:\n    |\n200 |     function calculateReward(uint256 amount, uint256 duration)\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 7685,
					"file": "contracts/FresaCoin.sol",
					"start": 7345
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 934,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								933
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 904,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 903,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 934,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1133:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "1133:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1142:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 903,
										"src": "1150:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								903,
								877,
								933
							],
							"name": "ERC20",
							"nameLocation": "1124:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1185:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1201:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1245:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1261:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1288:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1335:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1370:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1396:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1657:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1667:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1675:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1690:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1700:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1613:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1634:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:2"
									},
									"scope": 799,
									"src": "1601:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "1839:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "1856:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "1849:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1824:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:2"
									},
									"scope": 799,
									"src": "1779:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										896
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2043:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2060:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2053:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2028:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:2"
									},
									"scope": 799,
									"src": "1981:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "2763:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "2773:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2756:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:2"
									},
									"scope": 799,
									"src": "2707:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "2910:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "2927:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "2920:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "2901:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:2"
									},
									"scope": 799,
									"src": "2849:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3078:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3095:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3105:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3088:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3023:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3069:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:2"
									},
									"scope": 799,
									"src": "3004:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3390:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3400:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "3416:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3448:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3455:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3459:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3438:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3475:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3333:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3345:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3384:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:2"
									},
									"scope": 799,
									"src": "3315:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3640:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3657:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3669:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3676:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3650:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3570:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3585:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3631:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:2"
									},
									"scope": 799,
									"src": "3551:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4077:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4087:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4103:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4134:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4141:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4150:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4125:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4166:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4015:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4032:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4071:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:2"
									},
									"scope": 799,
									"src": "3998:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "4869:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "4879:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4897:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4935:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "4941:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4950:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "4919:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4976:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "4982:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4986:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "4966:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "5002:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:2",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4798:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4812:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4824:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4863:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:2"
									},
									"scope": 799,
									"src": "4776:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5462:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5476:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5472:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5496:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5517:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5510:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5571:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5567:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5589:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5610:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5603:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5670:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5676:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5680:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5662:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5412:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5426:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5438:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:2"
									},
									"scope": 799,
									"src": "5393:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6083:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6097:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6271:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6285:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6307:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6317:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6340:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6354:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6336:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6361:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6411:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6417:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6430:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6386:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6571:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6581:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6589:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6603:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6093:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6117:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6233:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6249:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6647:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "6862:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7021:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7031:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7038:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6643:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6665:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "6810:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "6826:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7092:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7098:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7102:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7083:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7078:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6025:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6039:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6051:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:2"
									},
									"scope": 799,
									"src": "6008:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7514:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7528:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7524:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7551:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7572:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7565:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7644:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7653:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7624:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7473:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7490:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:2"
									},
									"scope": 799,
									"src": "7458:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8040:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8054:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8050:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8077:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8098:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8091:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8156:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8177:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8148:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7999:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8016:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:2"
									},
									"scope": 799,
									"src": "7984:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "8800:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "8819:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "8826:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "8835:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "8810:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8744:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8759:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8776:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:2"
									},
									"scope": 799,
									"src": "8726:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "9799:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "9813:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "9809:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "9834:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9855:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "9848:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "9911:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "9907:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "9934:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9955:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "9948:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "10006:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "10018:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10025:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10036:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10055:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10051:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10066:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10094:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10101:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10110:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10085:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10080:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9719:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9734:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9751:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9766:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:2"
									},
									"scope": 799,
									"src": "9701:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10504:388:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10514:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10551:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10558:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10541:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10580:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10605:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10605:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10600:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10600:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10614:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10600:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10576:310:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10619:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10637:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10656:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10637:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10633:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10663:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10715:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10724:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10742:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10688:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10688:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10681:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "10776:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "10813:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "10820:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10829:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10848:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10829:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10855:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "10804:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10804:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "10804:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10440:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10455:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10472:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:2"
									},
									"scope": 799,
									"src": "10415:477:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1106:9788:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:10790:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "214:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "396:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "405:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "427:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "447:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:3"
									},
									"src": "390:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "627:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "636:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "659:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "684:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:3"
									},
									"src": "621:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "821:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:3"
									},
									"scope": 877,
									"src": "775:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 877,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1234:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1267:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:3"
									},
									"scope": 877,
									"src": "1204:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1567:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1582:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1622:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:3"
									},
									"scope": 877,
									"src": "1548:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2326:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2343:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2376:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:3"
									},
									"scope": 877,
									"src": "2309:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2712:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2726:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2738:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2771:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:3"
									},
									"scope": 877,
									"src": "2690:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "204:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2674:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 904,
							"sourceUnit": 878,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 883,
										"name": "IERC20",
										"nameLocations": [
											"306:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "306:6:4"
									},
									"id": 884,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 882,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:4",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 903,
							"linearizedBaseContracts": [
								903,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "417:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:4"
									},
									"scope": 903,
									"src": "378:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "540:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:4"
									},
									"scope": 903,
									"src": "499:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "674:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 899,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:4"
									},
									"scope": 903,
									"src": "631:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 904,
							"src": "278:405:4",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:559:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							933
						]
					},
					"id": 934,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 906,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 933,
							"linearizedBaseContracts": [
								933
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 911,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 910,
												"id": 913,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 933,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 920,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 919,
												"id": 922,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 933,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 928,
												"id": 930,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 933,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 934,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"contracts/FresaCoin.sol": {
				"ast": {
					"absolutePath": "contracts/FresaCoin.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"FresaCoin": [
							1584
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						],
						"Ownable": [
							147
						]
					},
					"id": 1585,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 935,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 936,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1585,
							"sourceUnit": 800,
							"src": "58:55:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 937,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1585,
							"sourceUnit": 148,
							"src": "114:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 939,
										"name": "ERC20",
										"nameLocations": [
											"231:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "231:5:6"
									},
									"id": 940,
									"nodeType": "InheritanceSpecifier",
									"src": "231:5:6"
								},
								{
									"baseName": {
										"id": 941,
										"name": "Ownable",
										"nameLocations": [
											"238:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "238:7:6"
									},
									"id": 942,
									"nodeType": "InheritanceSpecifier",
									"src": "238:7:6"
								}
							],
							"canonicalName": "FresaCoin",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 938,
								"nodeType": "StructuredDocumentation",
								"src": "168:41:6",
								"text": "@title FresaCoin - Ethereum version "
							},
							"fullyImplemented": true,
							"id": 1584,
							"linearizedBaseContracts": [
								1584,
								147,
								799,
								189,
								903,
								877,
								933
							],
							"name": "FresaCoin",
							"nameLocation": "218:9:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "FresaCoin.Stake",
									"id": 951,
									"members": [
										{
											"constant": false,
											"id": 944,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "283:6:6",
											"nodeType": "VariableDeclaration",
											"scope": 951,
											"src": "275:14:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 943,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "275:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 946,
											"mutability": "mutable",
											"name": "rewardAccumulated",
											"nameLocation": "324:17:6",
											"nodeType": "VariableDeclaration",
											"scope": 951,
											"src": "316:25:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 945,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "316:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 948,
											"mutability": "mutable",
											"name": "lastStakedTimestamp",
											"nameLocation": "382:19:6",
											"nodeType": "VariableDeclaration",
											"scope": 951,
											"src": "374:27:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 947,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "374:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 950,
											"mutability": "mutable",
											"name": "referrer",
											"nameLocation": "450:8:6",
											"nodeType": "VariableDeclaration",
											"scope": 951,
											"src": "442:16:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 949,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "442:7:6",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Stake",
									"nameLocation": "259:5:6",
									"nodeType": "StructDefinition",
									"scope": 1584,
									"src": "252:255:6",
									"visibility": "public"
								},
								{
									"canonicalName": "FresaCoin.Proposal",
									"id": 960,
									"members": [
										{
											"constant": false,
											"id": 953,
											"mutability": "mutable",
											"name": "description",
											"nameLocation": "546:11:6",
											"nodeType": "VariableDeclaration",
											"scope": 960,
											"src": "539:18:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 952,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "539:6:6",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 955,
											"mutability": "mutable",
											"name": "votesFor",
											"nameLocation": "599:8:6",
											"nodeType": "VariableDeclaration",
											"scope": 960,
											"src": "591:16:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 954,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "591:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 957,
											"mutability": "mutable",
											"name": "votesAgainst",
											"nameLocation": "653:12:6",
											"nodeType": "VariableDeclaration",
											"scope": 960,
											"src": "645:20:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 956,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "645:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 959,
											"mutability": "mutable",
											"name": "isApproved",
											"nameLocation": "707:10:6",
											"nodeType": "VariableDeclaration",
											"scope": 960,
											"src": "702:15:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 958,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "702:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Proposal",
									"nameLocation": "520:8:6",
									"nodeType": "StructDefinition",
									"scope": 1584,
									"src": "513:247:6",
									"visibility": "public"
								},
								{
									"canonicalName": "FresaCoin.Lottery",
									"id": 966,
									"members": [
										{
											"constant": false,
											"id": 963,
											"mutability": "mutable",
											"name": "entries",
											"nameLocation": "801:7:6",
											"nodeType": "VariableDeclaration",
											"scope": 966,
											"src": "791:17:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
												"typeString": "address[]"
											},
											"typeName": {
												"baseType": {
													"id": 961,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "791:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 962,
												"nodeType": "ArrayTypeName",
												"src": "791:9:6",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 965,
											"mutability": "mutable",
											"name": "prizePool",
											"nameLocation": "858:9:6",
											"nodeType": "VariableDeclaration",
											"scope": 966,
											"src": "850:17:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 964,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "850:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Lottery",
									"nameLocation": "773:7:6",
									"nodeType": "StructDefinition",
									"scope": 1584,
									"src": "766:138:6",
									"visibility": "public"
								},
								{
									"canonicalName": "FresaCoin.StakingPool",
									"id": 973,
									"members": [
										{
											"constant": false,
											"id": 968,
											"mutability": "mutable",
											"name": "rewardRate",
											"nameLocation": "947:10:6",
											"nodeType": "VariableDeclaration",
											"scope": 973,
											"src": "939:18:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 967,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "939:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 970,
											"mutability": "mutable",
											"name": "lockDuration",
											"nameLocation": "1002:12:6",
											"nodeType": "VariableDeclaration",
											"scope": 973,
											"src": "994:20:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 969,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "994:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 972,
											"mutability": "mutable",
											"name": "totalStaked",
											"nameLocation": "1061:11:6",
											"nodeType": "VariableDeclaration",
											"scope": 973,
											"src": "1053:19:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 971,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1053:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StakingPool",
									"nameLocation": "917:11:6",
									"nodeType": "StructDefinition",
									"scope": 1584,
									"src": "910:197:6",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "16934fc4",
									"id": 978,
									"mutability": "mutable",
									"name": "stakes",
									"nameLocation": "1146:6:6",
									"nodeType": "VariableDeclaration",
									"scope": 1584,
									"src": "1113:39:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$951_storage_$",
										"typeString": "mapping(address => struct FresaCoin.Stake)"
									},
									"typeName": {
										"id": 977,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 974,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1121:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1113:25:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$951_storage_$",
											"typeString": "mapping(address => struct FresaCoin.Stake)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 976,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 975,
												"name": "Stake",
												"nameLocations": [
													"1132:5:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 951,
												"src": "1132:5:6"
											},
											"referencedDeclaration": 951,
											"src": "1132:5:6",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Stake_$951_storage_ptr",
												"typeString": "struct FresaCoin.Stake"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "013cf08b",
									"id": 983,
									"mutability": "mutable",
									"name": "proposals",
									"nameLocation": "1220:9:6",
									"nodeType": "VariableDeclaration",
									"scope": 1584,
									"src": "1184:45:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$960_storage_$",
										"typeString": "mapping(uint256 => struct FresaCoin.Proposal)"
									},
									"typeName": {
										"id": 982,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 979,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1192:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1184:28:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$960_storage_$",
											"typeString": "mapping(uint256 => struct FresaCoin.Proposal)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 981,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 980,
												"name": "Proposal",
												"nameLocations": [
													"1203:8:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 960,
												"src": "1203:8:6"
											},
											"referencedDeclaration": 960,
											"src": "1203:8:6",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Proposal_$960_storage_ptr",
												"typeString": "struct FresaCoin.Proposal"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ba13a572",
									"id": 986,
									"mutability": "mutable",
									"name": "lottery",
									"nameLocation": "1274:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 1584,
									"src": "1259:22:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Lottery_$966_storage",
										"typeString": "struct FresaCoin.Lottery"
									},
									"typeName": {
										"id": 985,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 984,
											"name": "Lottery",
											"nameLocations": [
												"1259:7:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 966,
											"src": "1259:7:6"
										},
										"referencedDeclaration": 966,
										"src": "1259:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Lottery_$966_storage_ptr",
											"typeString": "struct FresaCoin.Lottery"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0c56ae3b",
									"id": 989,
									"mutability": "mutable",
									"name": "stakingPool",
									"nameLocation": "1325:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 1584,
									"src": "1306:30:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_StakingPool_$973_storage",
										"typeString": "struct FresaCoin.StakingPool"
									},
									"typeName": {
										"id": 988,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 987,
											"name": "StakingPool",
											"nameLocations": [
												"1306:11:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 973,
											"src": "1306:11:6"
										},
										"referencedDeclaration": 973,
										"src": "1306:11:6",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_StakingPool_$973_storage_ptr",
											"typeString": "struct FresaCoin.StakingPool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0c0512e9",
									"id": 991,
									"mutability": "mutable",
									"name": "proposalCounter",
									"nameLocation": "1379:15:6",
									"nodeType": "VariableDeclaration",
									"scope": 1584,
									"src": "1364:30:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 990,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1364:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5fec5c64",
									"id": 994,
									"mutability": "mutable",
									"name": "minStakeDuration",
									"nameLocation": "1441:16:6",
									"nodeType": "VariableDeclaration",
									"scope": 1584,
									"src": "1426:40:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 992,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1426:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "37",
										"id": 993,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1460:6:6",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_604800_by_1",
											"typeString": "int_const 604800"
										},
										"value": "7"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "e1913c81",
									"id": 997,
									"mutability": "constant",
									"name": "REFERRAL_BONUS",
									"nameLocation": "1524:14:6",
									"nodeType": "VariableDeclaration",
									"scope": 1584,
									"src": "1500:42:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 995,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1500:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "35",
										"id": 996,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1541:1:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5_by_1",
											"typeString": "int_const 5"
										},
										"value": "5"
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "9f9e4044c5742cca66ca090b21552bac14645e68bad7a92364a9d9ff18111a1c",
									"id": 1005,
									"name": "Staked",
									"nameLocation": "1578:6:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1004,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 999,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1601:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "1585:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 998,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1585:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1001,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1615:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "1607:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1000,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1607:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1003,
												"indexed": true,
												"mutability": "mutable",
												"name": "referrer",
												"nameLocation": "1639:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "1623:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1002,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1584:64:6"
									},
									"src": "1572:77:6"
								},
								{
									"anonymous": false,
									"eventSelector": "92ccf450a286a957af52509bc1c9939d1a6a481783e142e41e2499f0bb66ebc6",
									"id": 1013,
									"name": "Withdrawn",
									"nameLocation": "1660:9:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1007,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1686:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "1670:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1006,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1670:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1009,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1700:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "1692:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1008,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1692:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1011,
												"indexed": false,
												"mutability": "mutable",
												"name": "penalty",
												"nameLocation": "1716:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "1708:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1010,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1708:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1669:55:6"
									},
									"src": "1654:71:6"
								},
								{
									"anonymous": false,
									"eventSelector": "9c770c289ab5bf7e57cb1d23c8ceae993aea46eb64847072fd3d78ca60d3e432",
									"id": 1019,
									"name": "ProposalCreated",
									"nameLocation": "1736:15:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1015,
												"indexed": true,
												"mutability": "mutable",
												"name": "proposalId",
												"nameLocation": "1768:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "1752:26:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1014,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1752:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1017,
												"indexed": false,
												"mutability": "mutable",
												"name": "description",
												"nameLocation": "1787:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "1780:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1016,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1780:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1751:48:6"
									},
									"src": "1730:70:6"
								},
								{
									"anonymous": false,
									"eventSelector": "f2913dbe661ee2acc4a046d8fbcdc792373bda34c41c6086484b5345e5785e5f",
									"id": 1027,
									"name": "Voted",
									"nameLocation": "1811:5:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1021,
												"indexed": true,
												"mutability": "mutable",
												"name": "proposalId",
												"nameLocation": "1833:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "1817:26:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1020,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1817:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1023,
												"indexed": true,
												"mutability": "mutable",
												"name": "voter",
												"nameLocation": "1861:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "1845:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1022,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1845:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1025,
												"indexed": false,
												"mutability": "mutable",
												"name": "voteFor",
												"nameLocation": "1873:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "1868:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1024,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1868:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1816:65:6"
									},
									"src": "1805:77:6"
								},
								{
									"anonymous": false,
									"eventSelector": "c28711c8dcc0cb3d25732e13809d1d8c2640669a0a3fb4f7729810a9caaffdff",
									"id": 1033,
									"name": "LotteryEntered",
									"nameLocation": "1893:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1032,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1029,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1924:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "1908:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1028,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1908:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1031,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1938:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "1930:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1030,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1930:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:38:6"
									},
									"src": "1887:59:6"
								},
								{
									"anonymous": false,
									"eventSelector": "275eaacf9e506f9c68b251c2f97cf723c4fb9a3b94e42a1dfb581543c135f0c0",
									"id": 1039,
									"name": "LotteryWinner",
									"nameLocation": "1957:13:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"indexed": true,
												"mutability": "mutable",
												"name": "winner",
												"nameLocation": "1987:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "1971:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1034,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1971:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1037,
												"indexed": false,
												"mutability": "mutable",
												"name": "prize",
												"nameLocation": "2003:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "1995:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1036,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1995:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1970:39:6"
									},
									"src": "1951:59:6"
								},
								{
									"body": {
										"id": 1075,
										"nodeType": "Block",
										"src": "2386:169:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1058,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2402:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1059,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2406:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2402:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1060,
															"name": "_initialSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1042,
															"src": "2414:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1057,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "2396:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2396:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1062,
												"nodeType": "ExpressionStatement",
												"src": "2396:33:6"
											},
											{
												"expression": {
													"id": 1067,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1063,
															"name": "stakingPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "2462:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingPool_$973_storage",
																"typeString": "struct FresaCoin.StakingPool storage ref"
															}
														},
														"id": 1065,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2474:10:6",
														"memberName": "rewardRate",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 968,
														"src": "2462:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1066,
														"name": "_rewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1044,
														"src": "2487:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2462:36:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1068,
												"nodeType": "ExpressionStatement",
												"src": "2462:36:6"
											},
											{
												"expression": {
													"id": 1073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1069,
															"name": "stakingPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "2508:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingPool_$973_storage",
																"typeString": "struct FresaCoin.StakingPool storage ref"
															}
														},
														"id": 1071,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2520:12:6",
														"memberName": "lockDuration",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 970,
														"src": "2508:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1072,
														"name": "_lockDuration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "2535:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2508:40:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1074,
												"nodeType": "ExpressionStatement",
												"src": "2508:40:6"
											}
										]
									},
									"documentation": {
										"id": 1040,
										"nodeType": "StructuredDocumentation",
										"src": "2016:207:6",
										"text": "@notice Constructor to initialize the contract\n @param _initialSupply Initial token supply\n @param _rewardRate Reward rate for staking\n @param _lockDuration Lock duration for staking"
									},
									"id": 1076,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4672657361436f696e",
													"id": 1049,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2344:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_3effd1731ffad82eb12331298e1ff48b5525e947b346978a6b4b14b1358e3a14",
														"typeString": "literal_string \"FresaCoin\""
													},
													"value": "FresaCoin"
												},
												{
													"hexValue": "4652455341",
													"id": 1050,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2357:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_70e278f72e7bd9f6e7c339c75fe37331168e8e8e62bfbd412473c1b322c1e0af",
														"typeString": "literal_string \"FRESA\""
													},
													"value": "FRESA"
												}
											],
											"id": 1051,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1048,
												"name": "ERC20",
												"nameLocations": [
													"2338:5:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "2338:5:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2338:27:6"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1053,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2374:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2378:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2374:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1055,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1052,
												"name": "Ownable",
												"nameLocations": [
													"2366:7:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "2366:7:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2366:19:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "_initialSupply",
												"nameLocation": "2257:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "2249:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1041,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2249:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "_rewardRate",
												"nameLocation": "2289:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "2281:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1043,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2281:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1046,
												"mutability": "mutable",
												"name": "_lockDuration",
												"nameLocation": "2318:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "2310:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1045,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2310:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2239:98:6"
									},
									"returnParameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2386:0:6"
									},
									"scope": 1584,
									"src": "2228:327:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1195,
										"nodeType": "Block",
										"src": "2762:906:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1087,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1085,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1079,
																"src": "2780:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1086,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2789:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2780:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f74207374616b65207a65726f20746f6b656e73",
															"id": 1088,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2792:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a02f11666a200f30cecba397f7530127901a514068b6cce650d5e1b666a5e24",
																"typeString": "literal_string \"Cannot stake zero tokens\""
															},
															"value": "Cannot stake zero tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a02f11666a200f30cecba397f7530127901a514068b6cce650d5e1b666a5e24",
																"typeString": "literal_string \"Cannot stake zero tokens\""
															}
														],
														"id": 1084,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2772:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2772:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1090,
												"nodeType": "ExpressionStatement",
												"src": "2772:47:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1092,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2839:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1093,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2843:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2839:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1096,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2859:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_FresaCoin_$1584",
																		"typeString": "contract FresaCoin"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_FresaCoin_$1584",
																		"typeString": "contract FresaCoin"
																	}
																],
																"id": 1095,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2851:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1094,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2851:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1097,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2851:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1098,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1079,
															"src": "2866:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1091,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "2829:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2829:44:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1100,
												"nodeType": "ExpressionStatement",
												"src": "2829:44:6"
											},
											{
												"assignments": [
													1103
												],
												"declarations": [
													{
														"constant": false,
														"id": 1103,
														"mutability": "mutable",
														"name": "userStake",
														"nameLocation": "2898:9:6",
														"nodeType": "VariableDeclaration",
														"scope": 1195,
														"src": "2884:23:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$951_storage_ptr",
															"typeString": "struct FresaCoin.Stake"
														},
														"typeName": {
															"id": 1102,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1101,
																"name": "Stake",
																"nameLocations": [
																	"2884:5:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 951,
																"src": "2884:5:6"
															},
															"referencedDeclaration": 951,
															"src": "2884:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$951_storage_ptr",
																"typeString": "struct FresaCoin.Stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1108,
												"initialValue": {
													"baseExpression": {
														"id": 1104,
														"name": "stakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 978,
														"src": "2910:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$951_storage_$",
															"typeString": "mapping(address => struct FresaCoin.Stake storage ref)"
														}
													},
													"id": 1107,
													"indexExpression": {
														"expression": {
															"id": 1105,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2917:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1106,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2921:6:6",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2917:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2910:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$951_storage",
														"typeString": "struct FresaCoin.Stake storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2884:44:6"
											},
											{
												"assignments": [
													1110
												],
												"declarations": [
													{
														"constant": false,
														"id": 1110,
														"mutability": "mutable",
														"name": "currentTime",
														"nameLocation": "2946:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 1195,
														"src": "2938:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1109,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2938:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1113,
												"initialValue": {
													"expression": {
														"id": 1111,
														"name": "block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967292,
														"src": "2960:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_block",
															"typeString": "block"
														}
													},
													"id": 1112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2966:9:6",
													"memberName": "timestamp",
													"nodeType": "MemberAccess",
													"src": "2960:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2938:37:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1114,
															"name": "userStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1103,
															"src": "3038:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$951_storage_ptr",
																"typeString": "struct FresaCoin.Stake storage pointer"
															}
														},
														"id": 1115,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3048:6:6",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 944,
														"src": "3038:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1116,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3057:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3038:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1136,
												"nodeType": "IfStatement",
												"src": "3034:201:6",
												"trueBody": {
													"id": 1135,
													"nodeType": "Block",
													"src": "3060:175:6",
													"statements": [
														{
															"assignments": [
																1119
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1119,
																	"mutability": "mutable",
																	"name": "duration",
																	"nameLocation": "3082:8:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1135,
																	"src": "3074:16:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1118,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3074:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1124,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1123,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1120,
																	"name": "currentTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1110,
																	"src": "3093:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"expression": {
																		"id": 1121,
																		"name": "userStake",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1103,
																		"src": "3107:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$951_storage_ptr",
																			"typeString": "struct FresaCoin.Stake storage pointer"
																		}
																	},
																	"id": 1122,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3117:19:6",
																	"memberName": "lastStakedTimestamp",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 948,
																	"src": "3107:29:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3093:43:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3074:62:6"
														},
														{
															"expression": {
																"id": 1133,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1125,
																		"name": "userStake",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1103,
																		"src": "3150:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$951_storage_ptr",
																			"typeString": "struct FresaCoin.Stake storage pointer"
																		}
																	},
																	"id": 1127,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "3160:17:6",
																	"memberName": "rewardAccumulated",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 946,
																	"src": "3150:27:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1129,
																				"name": "userStake",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1103,
																				"src": "3197:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Stake_$951_storage_ptr",
																					"typeString": "struct FresaCoin.Stake storage pointer"
																				}
																			},
																			"id": 1130,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3207:6:6",
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 944,
																			"src": "3197:16:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1131,
																			"name": "duration",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1119,
																			"src": "3215:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1128,
																		"name": "calculateReward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1583,
																		"src": "3181:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) view returns (uint256)"
																		}
																	},
																	"id": 1132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3181:43:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3150:74:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1134,
															"nodeType": "ExpressionStatement",
															"src": "3150:74:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1137,
															"name": "userStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1103,
															"src": "3245:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$951_storage_ptr",
																"typeString": "struct FresaCoin.Stake storage pointer"
															}
														},
														"id": 1139,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3255:6:6",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 944,
														"src": "3245:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1140,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1079,
														"src": "3265:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3245:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1142,
												"nodeType": "ExpressionStatement",
												"src": "3245:26:6"
											},
											{
												"expression": {
													"id": 1147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1143,
															"name": "userStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1103,
															"src": "3281:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$951_storage_ptr",
																"typeString": "struct FresaCoin.Stake storage pointer"
															}
														},
														"id": 1145,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3291:19:6",
														"memberName": "lastStakedTimestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 948,
														"src": "3281:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1146,
														"name": "currentTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1110,
														"src": "3313:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3281:43:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1148,
												"nodeType": "ExpressionStatement",
												"src": "3281:43:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1154,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1149,
															"name": "referrer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1081,
															"src": "3365:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3385:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1151,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3377:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1150,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3377:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1153,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3377:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "3365:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1158,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1155,
															"name": "referrer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1081,
															"src": "3391:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"expression": {
																"id": 1156,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3403:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3407:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3403:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "3391:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3365:48:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1181,
												"nodeType": "IfStatement",
												"src": "3361:205:6",
												"trueBody": {
													"id": 1180,
													"nodeType": "Block",
													"src": "3415:151:6",
													"statements": [
														{
															"assignments": [
																1161
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1161,
																	"mutability": "mutable",
																	"name": "bonus",
																	"nameLocation": "3437:5:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1180,
																	"src": "3429:13:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1160,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3429:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1168,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1167,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1164,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1162,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1079,
																				"src": "3446:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 1163,
																				"name": "REFERRAL_BONUS",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 997,
																				"src": "3455:14:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3446:23:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1165,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3445:25:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 1166,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3473:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "3445:31:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3429:47:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1170,
																		"name": "referrer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1081,
																		"src": "3496:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1171,
																		"name": "bonus",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1161,
																		"src": "3506:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1169,
																	"name": "_mint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 639,
																	"src": "3490:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1172,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3490:22:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1173,
															"nodeType": "ExpressionStatement",
															"src": "3490:22:6"
														},
														{
															"expression": {
																"id": 1178,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1174,
																		"name": "userStake",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1103,
																		"src": "3526:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$951_storage_ptr",
																			"typeString": "struct FresaCoin.Stake storage pointer"
																		}
																	},
																	"id": 1176,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "3536:8:6",
																	"memberName": "referrer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 950,
																	"src": "3526:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1177,
																	"name": "referrer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1081,
																	"src": "3547:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3526:29:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1179,
															"nodeType": "ExpressionStatement",
															"src": "3526:29:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1182,
															"name": "stakingPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "3576:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingPool_$973_storage",
																"typeString": "struct FresaCoin.StakingPool storage ref"
															}
														},
														"id": 1184,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3588:11:6",
														"memberName": "totalStaked",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 972,
														"src": "3576:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1185,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1079,
														"src": "3603:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3576:33:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1187,
												"nodeType": "ExpressionStatement",
												"src": "3576:33:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1189,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3632:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1190,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3636:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3632:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1191,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1079,
															"src": "3644:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1192,
															"name": "referrer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1081,
															"src": "3652:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1188,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1005,
														"src": "3625:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 1193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3625:36:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1194,
												"nodeType": "EmitStatement",
												"src": "3620:41:6"
											}
										]
									},
									"documentation": {
										"id": 1077,
										"nodeType": "StructuredDocumentation",
										"src": "2561:138:6",
										"text": "@notice Stake tokens to earn rewards\n @param amount Amount of tokens to stake\n @param referrer Optional referrer address"
									},
									"functionSelector": "7acb7757",
									"id": 1196,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "2713:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1079,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "2719:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1078,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "referrer",
												"nameLocation": "2743:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "2735:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1080,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2735:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2718:34:6"
									},
									"returnParameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2762:0:6"
									},
									"scope": 1584,
									"src": "2704:964:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1293,
										"nodeType": "Block",
										"src": "3824:713:6",
										"statements": [
											{
												"assignments": [
													1204
												],
												"declarations": [
													{
														"constant": false,
														"id": 1204,
														"mutability": "mutable",
														"name": "userStake",
														"nameLocation": "3848:9:6",
														"nodeType": "VariableDeclaration",
														"scope": 1293,
														"src": "3834:23:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$951_storage_ptr",
															"typeString": "struct FresaCoin.Stake"
														},
														"typeName": {
															"id": 1203,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1202,
																"name": "Stake",
																"nameLocations": [
																	"3834:5:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 951,
																"src": "3834:5:6"
															},
															"referencedDeclaration": 951,
															"src": "3834:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$951_storage_ptr",
																"typeString": "struct FresaCoin.Stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1209,
												"initialValue": {
													"baseExpression": {
														"id": 1205,
														"name": "stakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 978,
														"src": "3860:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$951_storage_$",
															"typeString": "mapping(address => struct FresaCoin.Stake storage ref)"
														}
													},
													"id": 1208,
													"indexExpression": {
														"expression": {
															"id": 1206,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3867:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1207,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3871:6:6",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3867:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3860:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$951_storage",
														"typeString": "struct FresaCoin.Stake storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3834:44:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1214,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1211,
																	"name": "userStake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1204,
																	"src": "3896:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$951_storage_ptr",
																		"typeString": "struct FresaCoin.Stake storage pointer"
																	}
																},
																"id": 1212,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3906:6:6",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 944,
																"src": "3896:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1213,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1199,
																"src": "3916:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3896:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e74207374616b65642062616c616e6365",
															"id": 1215,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3924:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2",
																"typeString": "literal_string \"Insufficient staked balance\""
															},
															"value": "Insufficient staked balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2",
																"typeString": "literal_string \"Insufficient staked balance\""
															}
														],
														"id": 1210,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3888:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3888:66:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1217,
												"nodeType": "ExpressionStatement",
												"src": "3888:66:6"
											},
											{
												"assignments": [
													1219
												],
												"declarations": [
													{
														"constant": false,
														"id": 1219,
														"mutability": "mutable",
														"name": "currentTime",
														"nameLocation": "3973:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 1293,
														"src": "3965:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1218,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3965:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1222,
												"initialValue": {
													"expression": {
														"id": 1220,
														"name": "block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967292,
														"src": "3987:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_block",
															"typeString": "block"
														}
													},
													"id": 1221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3993:9:6",
													"memberName": "timestamp",
													"nodeType": "MemberAccess",
													"src": "3987:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3965:37:6"
											},
											{
												"assignments": [
													1224
												],
												"declarations": [
													{
														"constant": false,
														"id": 1224,
														"mutability": "mutable",
														"name": "duration",
														"nameLocation": "4020:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 1293,
														"src": "4012:16:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1223,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4012:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1229,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1225,
														"name": "currentTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1219,
														"src": "4031:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"expression": {
															"id": 1226,
															"name": "userStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1204,
															"src": "4045:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$951_storage_ptr",
																"typeString": "struct FresaCoin.Stake storage pointer"
															}
														},
														"id": 1227,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4055:19:6",
														"memberName": "lastStakedTimestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 948,
														"src": "4045:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4031:43:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4012:62:6"
											},
											{
												"assignments": [
													1231
												],
												"declarations": [
													{
														"constant": false,
														"id": 1231,
														"mutability": "mutable",
														"name": "penalty",
														"nameLocation": "4093:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1293,
														"src": "4085:15:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1230,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4085:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1233,
												"initialValue": {
													"hexValue": "30",
													"id": 1232,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4103:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4085:19:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1234,
														"name": "duration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1224,
														"src": "4118:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1235,
														"name": "minStakeDuration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 994,
														"src": "4129:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4118:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1257,
												"nodeType": "IfStatement",
												"src": "4114:176:6",
												"trueBody": {
													"id": 1256,
													"nodeType": "Block",
													"src": "4147:143:6",
													"statements": [
														{
															"expression": {
																"id": 1244,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1237,
																	"name": "penalty",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1231,
																	"src": "4161:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1243,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1240,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1238,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1199,
																					"src": "4172:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "3230",
																					"id": 1239,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4181:2:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_20_by_1",
																						"typeString": "int_const 20"
																					},
																					"value": "20"
																				},
																				"src": "4172:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1241,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "4171:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "313030",
																		"id": 1242,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4187:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		},
																		"value": "100"
																	},
																	"src": "4171:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4161:29:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1245,
															"nodeType": "ExpressionStatement",
															"src": "4161:29:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1249,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "4233:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_FresaCoin_$1584",
																					"typeString": "contract FresaCoin"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_FresaCoin_$1584",
																					"typeString": "contract FresaCoin"
																				}
																			],
																			"id": 1248,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4225:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1247,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4225:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1250,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4225:13:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1253,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1251,
																			"name": "penalty",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1231,
																			"src": "4240:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"hexValue": "32",
																			"id": 1252,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4250:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "4240:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1246,
																	"name": "_burn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "4219:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1254,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4219:33:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1255,
															"nodeType": "ExpressionStatement",
															"src": "4219:33:6"
														}
													]
												}
											},
											{
												"assignments": [
													1259
												],
												"declarations": [
													{
														"constant": false,
														"id": 1259,
														"mutability": "mutable",
														"name": "netAmount",
														"nameLocation": "4308:9:6",
														"nodeType": "VariableDeclaration",
														"scope": 1293,
														"src": "4300:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1258,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4300:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1263,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1260,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1199,
														"src": "4320:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1261,
														"name": "penalty",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1231,
														"src": "4329:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4320:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4300:36:6"
											},
											{
												"expression": {
													"id": 1268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1264,
															"name": "userStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1204,
															"src": "4346:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$951_storage_ptr",
																"typeString": "struct FresaCoin.Stake storage pointer"
															}
														},
														"id": 1266,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4356:6:6",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 944,
														"src": "4346:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1267,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1199,
														"src": "4366:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4346:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1269,
												"nodeType": "ExpressionStatement",
												"src": "4346:26:6"
											},
											{
												"expression": {
													"id": 1274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1270,
															"name": "stakingPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "4382:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingPool_$973_storage",
																"typeString": "struct FresaCoin.StakingPool storage ref"
															}
														},
														"id": 1272,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4394:11:6",
														"memberName": "totalStaked",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 972,
														"src": "4382:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1273,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1199,
														"src": "4409:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4382:33:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1275,
												"nodeType": "ExpressionStatement",
												"src": "4382:33:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1279,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4444:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_FresaCoin_$1584",
																		"typeString": "contract FresaCoin"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_FresaCoin_$1584",
																		"typeString": "contract FresaCoin"
																	}
																],
																"id": 1278,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4436:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1277,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4436:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4436:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1281,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4451:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1282,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4455:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4451:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1283,
															"name": "netAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1259,
															"src": "4463:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1276,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "4426:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4426:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1285,
												"nodeType": "ExpressionStatement",
												"src": "4426:47:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1287,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4499:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4503:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4499:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1289,
															"name": "netAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1259,
															"src": "4511:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1290,
															"name": "penalty",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1231,
															"src": "4522:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1286,
														"name": "Withdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1013,
														"src": "4489:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4489:41:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1292,
												"nodeType": "EmitStatement",
												"src": "4484:46:6"
											}
										]
									},
									"documentation": {
										"id": 1197,
										"nodeType": "StructuredDocumentation",
										"src": "3674:102:6",
										"text": "@notice Withdraw staked tokens with penalty if applicable\n @param amount Amount to withdraw"
									},
									"functionSelector": "2e1a7d4d",
									"id": 1294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "3790:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3807:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1294,
												"src": "3799:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3799:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3798:16:6"
									},
									"returnParameters": {
										"id": 1201,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3824:0:6"
									},
									"scope": 1584,
									"src": "3781:756:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1321,
										"nodeType": "Block",
										"src": "4713:277:6",
										"statements": [
											{
												"expression": {
													"id": 1303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "4723:17:6",
													"subExpression": {
														"id": 1302,
														"name": "proposalCounter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 991,
														"src": "4723:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1304,
												"nodeType": "ExpressionStatement",
												"src": "4723:17:6"
											},
											{
												"expression": {
													"id": 1314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1305,
															"name": "proposals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 983,
															"src": "4750:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$960_storage_$",
																"typeString": "mapping(uint256 => struct FresaCoin.Proposal storage ref)"
															}
														},
														"id": 1307,
														"indexExpression": {
															"id": 1306,
															"name": "proposalCounter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 991,
															"src": "4760:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4750:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Proposal_$960_storage",
															"typeString": "struct FresaCoin.Proposal storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1309,
																"name": "description",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1297,
																"src": "4815:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"hexValue": "30",
																"id": 1310,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4850:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "30",
																"id": 1311,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4879:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "66616c7365",
																"id": 1312,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4906:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 1308,
															"name": "Proposal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 960,
															"src": "4779:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Proposal_$960_storage_ptr_$",
																"typeString": "type(struct FresaCoin.Proposal storage pointer)"
															}
														},
														"id": 1313,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"4802:11:6",
															"4840:8:6",
															"4865:12:6",
															"4894:10:6"
														],
														"names": [
															"description",
															"votesFor",
															"votesAgainst",
															"isApproved"
														],
														"nodeType": "FunctionCall",
														"src": "4779:143:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Proposal_$960_memory_ptr",
															"typeString": "struct FresaCoin.Proposal memory"
														}
													},
													"src": "4750:172:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Proposal_$960_storage",
														"typeString": "struct FresaCoin.Proposal storage ref"
													}
												},
												"id": 1315,
												"nodeType": "ExpressionStatement",
												"src": "4750:172:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1317,
															"name": "proposalCounter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 991,
															"src": "4954:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1318,
															"name": "description",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1297,
															"src": "4971:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1316,
														"name": "ProposalCreated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1019,
														"src": "4938:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,string memory)"
														}
													},
													"id": 1319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4938:45:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1320,
												"nodeType": "EmitStatement",
												"src": "4933:50:6"
											}
										]
									},
									"documentation": {
										"id": 1295,
										"nodeType": "StructuredDocumentation",
										"src": "4543:95:6",
										"text": "@notice Create a governance proposal\n @param description Description of the proposal"
									},
									"functionSelector": "49c2a1a6",
									"id": 1322,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1300,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1299,
												"name": "onlyOwner",
												"nameLocations": [
													"4703:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4703:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "4703:9:6"
										}
									],
									"name": "createProposal",
									"nameLocation": "4652:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1297,
												"mutability": "mutable",
												"name": "description",
												"nameLocation": "4681:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1322,
												"src": "4667:25:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1296,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4667:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4666:27:6"
									},
									"returnParameters": {
										"id": 1301,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4713:0:6"
									},
									"scope": 1584,
									"src": "4643:347:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1397,
										"nodeType": "Block",
										"src": "5207:545:6",
										"statements": [
											{
												"assignments": [
													1332
												],
												"declarations": [
													{
														"constant": false,
														"id": 1332,
														"mutability": "mutable",
														"name": "proposal",
														"nameLocation": "5234:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 1397,
														"src": "5217:25:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Proposal_$960_storage_ptr",
															"typeString": "struct FresaCoin.Proposal"
														},
														"typeName": {
															"id": 1331,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1330,
																"name": "Proposal",
																"nameLocations": [
																	"5217:8:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 960,
																"src": "5217:8:6"
															},
															"referencedDeclaration": 960,
															"src": "5217:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$960_storage_ptr",
																"typeString": "struct FresaCoin.Proposal"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1336,
												"initialValue": {
													"baseExpression": {
														"id": 1333,
														"name": "proposals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 983,
														"src": "5245:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$960_storage_$",
															"typeString": "mapping(uint256 => struct FresaCoin.Proposal storage ref)"
														}
													},
													"id": 1335,
													"indexExpression": {
														"id": 1334,
														"name": "proposalId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1325,
														"src": "5255:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5245:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Proposal_$960_storage",
														"typeString": "struct FresaCoin.Proposal storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5217:49:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1340,
																				"name": "proposal",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1332,
																				"src": "5290:8:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Proposal_$960_storage_ptr",
																					"typeString": "struct FresaCoin.Proposal storage pointer"
																				}
																			},
																			"id": 1341,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5299:11:6",
																			"memberName": "description",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 953,
																			"src": "5290:20:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_storage",
																				"typeString": "string storage ref"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_storage",
																				"typeString": "string storage ref"
																			}
																		],
																		"id": 1339,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5284:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1338,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "5284:5:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1342,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5284:27:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes storage pointer"
																	}
																},
																"id": 1343,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5312:6:6",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "5284:34:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1344,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5321:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5284:38:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642070726f706f73616c204944",
															"id": 1346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5324:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0febab928e40c46453cf5b5d4970676eff56829a16bec62dc48d209b2deaf8aa",
																"typeString": "literal_string \"Invalid proposal ID\""
															},
															"value": "Invalid proposal ID"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0febab928e40c46453cf5b5d4970676eff56829a16bec62dc48d209b2deaf8aa",
																"typeString": "literal_string \"Invalid proposal ID\""
															}
														],
														"id": 1337,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5276:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5276:70:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1348,
												"nodeType": "ExpressionStatement",
												"src": "5276:70:6"
											},
											{
												"assignments": [
													1350
												],
												"declarations": [
													{
														"constant": false,
														"id": 1350,
														"mutability": "mutable",
														"name": "votingWeight",
														"nameLocation": "5365:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 1397,
														"src": "5357:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1349,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5357:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1356,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 1351,
															"name": "stakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 978,
															"src": "5380:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$951_storage_$",
																"typeString": "mapping(address => struct FresaCoin.Stake storage ref)"
															}
														},
														"id": 1354,
														"indexExpression": {
															"expression": {
																"id": 1352,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5387:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5391:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5387:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5380:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$951_storage",
															"typeString": "struct FresaCoin.Stake storage ref"
														}
													},
													"id": 1355,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5399:6:6",
													"memberName": "amount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 944,
													"src": "5380:25:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5357:48:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1358,
																"name": "votingWeight",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1350,
																"src": "5423:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1359,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5438:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5423:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f207374616b656420746f6b656e7320746f20766f7465",
															"id": 1361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5441:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2ba6ba7fd9922e5e4215d4c50fe3780e179cb4252eee0ad2051198fef2d560ef",
																"typeString": "literal_string \"No staked tokens to vote\""
															},
															"value": "No staked tokens to vote"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2ba6ba7fd9922e5e4215d4c50fe3780e179cb4252eee0ad2051198fef2d560ef",
																"typeString": "literal_string \"No staked tokens to vote\""
															}
														],
														"id": 1357,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5415:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5415:53:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1363,
												"nodeType": "ExpressionStatement",
												"src": "5415:53:6"
											},
											{
												"condition": {
													"id": 1364,
													"name": "voteFor",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1327,
													"src": "5483:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1378,
													"nodeType": "Block",
													"src": "5556:62:6",
													"statements": [
														{
															"expression": {
																"id": 1376,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1372,
																		"name": "proposal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1332,
																		"src": "5570:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Proposal_$960_storage_ptr",
																			"typeString": "struct FresaCoin.Proposal storage pointer"
																		}
																	},
																	"id": 1374,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5579:12:6",
																	"memberName": "votesAgainst",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 957,
																	"src": "5570:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1375,
																	"name": "votingWeight",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1350,
																	"src": "5595:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5570:37:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1377,
															"nodeType": "ExpressionStatement",
															"src": "5570:37:6"
														}
													]
												},
												"id": 1379,
												"nodeType": "IfStatement",
												"src": "5479:139:6",
												"trueBody": {
													"id": 1371,
													"nodeType": "Block",
													"src": "5492:58:6",
													"statements": [
														{
															"expression": {
																"id": 1369,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1365,
																		"name": "proposal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1332,
																		"src": "5506:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Proposal_$960_storage_ptr",
																			"typeString": "struct FresaCoin.Proposal storage pointer"
																		}
																	},
																	"id": 1367,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5515:8:6",
																	"memberName": "votesFor",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 955,
																	"src": "5506:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1368,
																	"name": "votingWeight",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1350,
																	"src": "5527:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5506:33:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1370,
															"nodeType": "ExpressionStatement",
															"src": "5506:33:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1380,
															"name": "proposal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1332,
															"src": "5628:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$960_storage_ptr",
																"typeString": "struct FresaCoin.Proposal storage pointer"
															}
														},
														"id": 1382,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5637:10:6",
														"memberName": "isApproved",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 959,
														"src": "5628:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1387,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1383,
																"name": "proposal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1332,
																"src": "5650:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Proposal_$960_storage_ptr",
																	"typeString": "struct FresaCoin.Proposal storage pointer"
																}
															},
															"id": 1384,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5659:8:6",
															"memberName": "votesFor",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 955,
															"src": "5650:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"expression": {
																"id": 1385,
																"name": "proposal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1332,
																"src": "5670:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Proposal_$960_storage_ptr",
																	"typeString": "struct FresaCoin.Proposal storage pointer"
																}
															},
															"id": 1386,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5679:12:6",
															"memberName": "votesAgainst",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 957,
															"src": "5670:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5650:41:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5628:63:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1389,
												"nodeType": "ExpressionStatement",
												"src": "5628:63:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1391,
															"name": "proposalId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1325,
															"src": "5713:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1392,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5725:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1393,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5729:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5725:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1394,
															"name": "voteFor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1327,
															"src": "5737:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1390,
														"name": "Voted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1027,
														"src": "5707:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (uint256,address,bool)"
														}
													},
													"id": 1395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5707:38:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1396,
												"nodeType": "EmitStatement",
												"src": "5702:43:6"
											}
										]
									},
									"documentation": {
										"id": 1323,
										"nodeType": "StructuredDocumentation",
										"src": "4996:149:6",
										"text": "@notice Vote on a governance proposal\n @param proposalId ID of the proposal\n @param voteFor True to vote for, false to vote against"
									},
									"functionSelector": "c9d27afe",
									"id": 1398,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "vote",
									"nameLocation": "5159:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1325,
												"mutability": "mutable",
												"name": "proposalId",
												"nameLocation": "5172:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1398,
												"src": "5164:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1324,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5164:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1327,
												"mutability": "mutable",
												"name": "voteFor",
												"nameLocation": "5189:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1398,
												"src": "5184:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1326,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5184:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5163:34:6"
									},
									"returnParameters": {
										"id": 1329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5207:0:6"
									},
									"scope": 1584,
									"src": "5150:602:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1442,
										"nodeType": "Block",
										"src": "5921:253:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1407,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1405,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1401,
																"src": "5939:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1406,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5948:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5939:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f7420656e7465722077697468207a65726f20746f6b656e73",
															"id": 1408,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5951:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ba93e22e59dbf680aafd2aa082c307d19b1ccf283e46ba80e768770956096b94",
																"typeString": "literal_string \"Cannot enter with zero tokens\""
															},
															"value": "Cannot enter with zero tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ba93e22e59dbf680aafd2aa082c307d19b1ccf283e46ba80e768770956096b94",
																"typeString": "literal_string \"Cannot enter with zero tokens\""
															}
														],
														"id": 1404,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5931:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5931:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1410,
												"nodeType": "ExpressionStatement",
												"src": "5931:52:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1412,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6004:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6008:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6004:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1416,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6024:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_FresaCoin_$1584",
																		"typeString": "contract FresaCoin"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_FresaCoin_$1584",
																		"typeString": "contract FresaCoin"
																	}
																],
																"id": 1415,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6016:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1414,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6016:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1417,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6016:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1418,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1401,
															"src": "6031:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1411,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "5994:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5994:44:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1420,
												"nodeType": "ExpressionStatement",
												"src": "5994:44:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1426,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6069:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1427,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6073:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6069:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"expression": {
																"id": 1421,
																"name": "lottery",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 986,
																"src": "6048:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Lottery_$966_storage",
																	"typeString": "struct FresaCoin.Lottery storage ref"
																}
															},
															"id": 1424,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6056:7:6",
															"memberName": "entries",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 963,
															"src": "6048:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1425,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6064:4:6",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "6048:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 1428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6048:32:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1429,
												"nodeType": "ExpressionStatement",
												"src": "6048:32:6"
											},
											{
												"expression": {
													"id": 1434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1430,
															"name": "lottery",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 986,
															"src": "6090:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Lottery_$966_storage",
																"typeString": "struct FresaCoin.Lottery storage ref"
															}
														},
														"id": 1432,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6098:9:6",
														"memberName": "prizePool",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 965,
														"src": "6090:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1433,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1401,
														"src": "6111:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6090:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1435,
												"nodeType": "ExpressionStatement",
												"src": "6090:27:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1437,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6148:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6152:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6148:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1439,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1401,
															"src": "6160:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1436,
														"name": "LotteryEntered",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1033,
														"src": "6133:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6133:34:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1441,
												"nodeType": "EmitStatement",
												"src": "6128:39:6"
											}
										]
									},
									"documentation": {
										"id": 1399,
										"nodeType": "StructuredDocumentation",
										"src": "5758:111:6",
										"text": "@notice Enter the lottery by staking tokens\n @param amount Amount of tokens to stake for the lottery"
									},
									"functionSelector": "3fd43098",
									"id": 1443,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "enterLottery",
									"nameLocation": "5883:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1401,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5904:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1443,
												"src": "5896:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1400,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5896:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5895:16:6"
									},
									"returnParameters": {
										"id": 1403,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5921:0:6"
									},
									"scope": 1584,
									"src": "5874:300:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1513,
										"nodeType": "Block",
										"src": "6274:493:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1454,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"expression": {
																		"id": 1450,
																		"name": "lottery",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 986,
																		"src": "6292:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Lottery_$966_storage",
																			"typeString": "struct FresaCoin.Lottery storage ref"
																		}
																	},
																	"id": 1451,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6300:7:6",
																	"memberName": "entries",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 963,
																	"src": "6292:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_storage",
																		"typeString": "address[] storage ref"
																	}
																},
																"id": 1452,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6308:6:6",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "6292:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1453,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6317:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6292:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f207061727469636970616e747320696e20746865206c6f7474657279",
															"id": 1455,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6320:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9134d835a173bd374f6a11e1d53fa96984ec9491b867df78baeca4c974ae9b31",
																"typeString": "literal_string \"No participants in the lottery\""
															},
															"value": "No participants in the lottery"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9134d835a173bd374f6a11e1d53fa96984ec9491b867df78baeca4c974ae9b31",
																"typeString": "literal_string \"No participants in the lottery\""
															}
														],
														"id": 1449,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6284:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6284:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1457,
												"nodeType": "ExpressionStatement",
												"src": "6284:69:6"
											},
											{
												"assignments": [
													1459
												],
												"declarations": [
													{
														"constant": false,
														"id": 1459,
														"mutability": "mutable",
														"name": "randomIndex",
														"nameLocation": "6372:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 1513,
														"src": "6364:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1458,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6364:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1476,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 1465,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "6434:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 1466,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "6440:9:6",
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "6434:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"expression": {
																					"id": 1467,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "6451:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 1468,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "6457:10:6",
																				"memberName": "difficulty",
																				"nodeType": "MemberAccess",
																				"src": "6451:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1463,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "6417:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1464,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "6421:12:6",
																			"memberName": "encodePacked",
																			"nodeType": "MemberAccess",
																			"src": "6417:16:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 1469,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6417:51:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1462,
																	"name": "keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967288,
																	"src": "6407:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (bytes memory) pure returns (bytes32)"
																	}
																},
																"id": 1470,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6407:62:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 1461,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6386:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1460,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6386:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1471,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6386:93:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"expression": {
															"expression": {
																"id": 1472,
																"name": "lottery",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 986,
																"src": "6482:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Lottery_$966_storage",
																	"typeString": "struct FresaCoin.Lottery storage ref"
																}
															},
															"id": 1473,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6490:7:6",
															"memberName": "entries",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 963,
															"src": "6482:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1474,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6498:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6482:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6386:118:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6364:140:6"
											},
											{
												"assignments": [
													1478
												],
												"declarations": [
													{
														"constant": false,
														"id": 1478,
														"mutability": "mutable",
														"name": "winner",
														"nameLocation": "6522:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1513,
														"src": "6514:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1477,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6514:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1483,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"id": 1479,
															"name": "lottery",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 986,
															"src": "6531:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Lottery_$966_storage",
																"typeString": "struct FresaCoin.Lottery storage ref"
															}
														},
														"id": 1480,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6539:7:6",
														"memberName": "entries",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 963,
														"src": "6531:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 1482,
													"indexExpression": {
														"id": 1481,
														"name": "randomIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1459,
														"src": "6547:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6531:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6514:45:6"
											},
											{
												"assignments": [
													1485
												],
												"declarations": [
													{
														"constant": false,
														"id": 1485,
														"mutability": "mutable",
														"name": "prize",
														"nameLocation": "6578:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 1513,
														"src": "6570:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1484,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6570:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1488,
												"initialValue": {
													"expression": {
														"id": 1486,
														"name": "lottery",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 986,
														"src": "6586:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Lottery_$966_storage",
															"typeString": "struct FresaCoin.Lottery storage ref"
														}
													},
													"id": 1487,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "6594:9:6",
													"memberName": "prizePool",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 965,
													"src": "6586:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6570:33:6"
											},
											{
												"expression": {
													"id": 1493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1489,
															"name": "lottery",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 986,
															"src": "6613:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Lottery_$966_storage",
																"typeString": "struct FresaCoin.Lottery storage ref"
															}
														},
														"id": 1491,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6621:9:6",
														"memberName": "prizePool",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 965,
														"src": "6613:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1492,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6633:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6613:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1494,
												"nodeType": "ExpressionStatement",
												"src": "6613:21:6"
											},
											{
												"expression": {
													"id": 1497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "6644:22:6",
													"subExpression": {
														"expression": {
															"id": 1495,
															"name": "lottery",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 986,
															"src": "6651:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Lottery_$966_storage",
																"typeString": "struct FresaCoin.Lottery storage ref"
															}
														},
														"id": 1496,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6659:7:6",
														"memberName": "entries",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 963,
														"src": "6651:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1498,
												"nodeType": "ExpressionStatement",
												"src": "6644:22:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1502,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6695:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_FresaCoin_$1584",
																		"typeString": "contract FresaCoin"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_FresaCoin_$1584",
																		"typeString": "contract FresaCoin"
																	}
																],
																"id": 1501,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6687:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1500,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6687:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6687:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1504,
															"name": "winner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1478,
															"src": "6702:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1505,
															"name": "prize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1485,
															"src": "6710:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1499,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "6677:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6677:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1507,
												"nodeType": "ExpressionStatement",
												"src": "6677:39:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1509,
															"name": "winner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1478,
															"src": "6746:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1510,
															"name": "prize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1485,
															"src": "6754:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1508,
														"name": "LotteryWinner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1039,
														"src": "6732:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6732:28:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1512,
												"nodeType": "EmitStatement",
												"src": "6727:33:6"
											}
										]
									},
									"documentation": {
										"id": 1444,
										"nodeType": "StructuredDocumentation",
										"src": "6180:41:6",
										"text": "@notice Draw a winner for the lottery"
									},
									"functionSelector": "576b5002",
									"id": 1514,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1447,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1446,
												"name": "onlyOwner",
												"nameLocations": [
													"6264:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "6264:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "6264:9:6"
										}
									],
									"name": "drawLotteryWinner",
									"nameLocation": "6235:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1445,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6252:2:6"
									},
									"returnParameters": {
										"id": 1448,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6274:0:6"
									},
									"scope": 1584,
									"src": "6226:541:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1524,
										"nodeType": "Block",
										"src": "6921:39:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1521,
														"name": "lottery",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 986,
														"src": "6938:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Lottery_$966_storage",
															"typeString": "struct FresaCoin.Lottery storage ref"
														}
													},
													"id": 1522,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "6946:7:6",
													"memberName": "entries",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 963,
													"src": "6938:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"functionReturnParameters": 1520,
												"id": 1523,
												"nodeType": "Return",
												"src": "6931:22:6"
											}
										]
									},
									"documentation": {
										"id": 1515,
										"nodeType": "StructuredDocumentation",
										"src": "6773:73:6",
										"text": "@notice Get lottery participants\n @return List of participants"
									},
									"functionSelector": "b3a55a66",
									"id": 1525,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLotteryEntries",
									"nameLocation": "6860:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1516,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6877:2:6"
									},
									"returnParameters": {
										"id": 1520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1519,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1525,
												"src": "6903:16:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1517,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "6903:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1518,
													"nodeType": "ArrayTypeName",
													"src": "6903:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6902:18:6"
									},
									"scope": 1584,
									"src": "6851:109:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1534,
										"nodeType": "Block",
										"src": "7114:41:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1531,
														"name": "lottery",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 986,
														"src": "7131:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Lottery_$966_storage",
															"typeString": "struct FresaCoin.Lottery storage ref"
														}
													},
													"id": 1532,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7139:9:6",
													"memberName": "prizePool",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 965,
													"src": "7131:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1530,
												"id": 1533,
												"nodeType": "Return",
												"src": "7124:24:6"
											}
										]
									},
									"documentation": {
										"id": 1526,
										"nodeType": "StructuredDocumentation",
										"src": "6966:80:6",
										"text": "@notice Get the prize pool for the lottery\n @return Prize pool amount"
									},
									"functionSelector": "cdb12c83",
									"id": 1535,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLotteryPrizePool",
									"nameLocation": "7060:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1527,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7079:2:6"
									},
									"returnParameters": {
										"id": 1530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1529,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "7105:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1528,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7105:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7104:9:6"
									},
									"scope": 1584,
									"src": "7051:104:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1582,
										"nodeType": "Block",
										"src": "7469:216:6",
										"statements": [
											{
												"assignments": [
													1546
												],
												"declarations": [
													{
														"constant": false,
														"id": 1546,
														"mutability": "mutable",
														"name": "baseRate",
														"nameLocation": "7487:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 1582,
														"src": "7479:16:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1545,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7479:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1560,
												"initialValue": {
													"condition": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1549,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1547,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1538,
																	"src": "7499:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "31305f303030",
																	"id": 1548,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7508:12:6",
																	"subdenomination": "ether",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10000000000000000000000_by_1",
																		"typeString": "int_const 10000000000000000000000"
																	},
																	"value": "10_000"
																},
																"src": "7499:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1550,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7498:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"condition": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1554,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1552,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1538,
																		"src": "7530:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "315f303030",
																		"id": 1553,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7539:11:6",
																		"subdenomination": "ether",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000000"
																		},
																		"value": "1_000"
																	},
																	"src": "7530:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 1555,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "7529:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"hexValue": "3130",
															"id": 1557,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7559:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"id": 1558,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "7529:32:6",
														"trueExpression": {
															"hexValue": "3132",
															"id": 1556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7554:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_12_by_1",
																"typeString": "int_const 12"
															},
															"value": "12"
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 1559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "7498:63:6",
													"trueExpression": {
														"hexValue": "3135",
														"id": 1551,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7524:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_15_by_1",
															"typeString": "int_const 15"
														},
														"value": "15"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7479:82:6"
											},
											{
												"assignments": [
													1562
												],
												"declarations": [
													{
														"constant": false,
														"id": 1562,
														"mutability": "mutable",
														"name": "multiplier",
														"nameLocation": "7579:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1582,
														"src": "7571:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1561,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7571:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1570,
												"initialValue": {
													"condition": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1563,
																	"name": "duration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1540,
																	"src": "7593:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "3330",
																	"id": 1564,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7604:7:6",
																	"subdenomination": "days",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2592000_by_1",
																		"typeString": "int_const 2592000"
																	},
																	"value": "30"
																},
																"src": "7593:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1566,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7592:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "31",
														"id": 1568,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7619:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"id": 1569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "7592:28:6",
													"trueExpression": {
														"hexValue": "32",
														"id": 1567,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7615:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7571:49:6"
											},
											{
												"expression": {
													"id": 1580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1571,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1543,
														"src": "7631:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1579,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1576,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1574,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1572,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1538,
																			"src": "7641:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1573,
																			"name": "baseRate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1546,
																			"src": "7650:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7641:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "313030",
																		"id": 1575,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7661:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		},
																		"value": "100"
																	},
																	"src": "7641:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1577,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "7640:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 1578,
															"name": "multiplier",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1562,
															"src": "7668:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7640:38:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7631:47:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1581,
												"nodeType": "ExpressionStatement",
												"src": "7631:47:6"
											}
										]
									},
									"documentation": {
										"id": 1536,
										"nodeType": "StructuredDocumentation",
										"src": "7161:179:6",
										"text": "@notice Calculate reward based on stake and duration\n @param amount Amount staked\n @param duration Duration of the stake\n @return reward Calculated reward"
									},
									"functionSelector": "13ed0846",
									"id": 1583,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateReward",
									"nameLocation": "7354:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1538,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7378:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "7370:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1537,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7370:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1540,
												"mutability": "mutable",
												"name": "duration",
												"nameLocation": "7394:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "7386:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1539,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7386:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7369:34:6"
									},
									"returnParameters": {
										"id": 1544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1543,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "7457:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "7449:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7449:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7448:16:6"
									},
									"scope": 1584,
									"src": "7345:340:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1585,
							"src": "209:7478:6",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								811,
								820,
								1005,
								1013,
								1019,
								1027,
								1033,
								1039
							]
						}
					],
					"src": "32:7656:6"
				},
				"id": 6
			}
		}
	}
}